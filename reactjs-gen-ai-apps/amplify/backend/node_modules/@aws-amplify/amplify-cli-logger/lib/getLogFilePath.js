"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLocalAuditLogFile = exports.getLocalLogFilePath = exports.getLogAuditFilePath = exports.getLogFilePath = void 0;
const path_1 = __importDefault(require("path"));
const os_1 = __importDefault(require("os"));
const constants_1 = require("./constants");
function getFolder() {
    let folder = constants_1.constants.LOG_DIRECTORY;
    if (process.argv.length > 1) {
        const executable = process.argv[1];
        if (executable && executable.includes('dev')) {
            folder += '-dev';
        }
    }
    return folder;
}
function getLocalLogFileDirectory(projectPath) {
    return path_1.default.join(projectPath, constants_1.constants.LOG_DIRECTORY);
}
function getLogDirectory() {
    return path_1.default.join(os_1.default.homedir(), constants_1.constants.DOT_AMPLIFY, getFolder());
}
function getLogFilePath() {
    return path_1.default.join(getLogDirectory(), constants_1.constants.LOG_FILENAME);
}
exports.getLogFilePath = getLogFilePath;
function getLogAuditFilePath() {
    return path_1.default.join(getLogDirectory(), constants_1.constants.LOG_AUDIT_FOLDER, constants_1.constants.LOG_AUDIT_FILENAME);
}
exports.getLogAuditFilePath = getLogAuditFilePath;
function getLocalLogFilePath(projectPath) {
    return path_1.default.join(getLocalLogFileDirectory(projectPath), constants_1.constants.LOG_FILENAME);
}
exports.getLocalLogFilePath = getLocalLogFilePath;
function getLocalAuditLogFile(filePath) {
    return path_1.default.join(getLocalLogFileDirectory(filePath), constants_1.constants.LOG_AUDIT_FOLDER, constants_1.constants.LOG_AUDIT_FILENAME);
}
exports.getLocalAuditLogFile = getLocalAuditLogFile;
//# sourceMappingURL=getLogFilePath.js.map