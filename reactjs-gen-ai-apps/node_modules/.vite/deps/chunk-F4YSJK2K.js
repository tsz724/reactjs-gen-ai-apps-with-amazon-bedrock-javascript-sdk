import {
  getMatchingBreakpoint
} from "./chunk-EN27VPGZ.js";
import {
  useResizeObserver
} from "./chunk-ZXVE6ER6.js";
import {
  require_react
} from "./chunk-2EXEP7CN.js";
import {
  __toESM
} from "./chunk-WXXH56N5.js";

// node_modules/@cloudscape-design/component-toolkit/lib/container-queries/use-container-query.js
var import_react = __toESM(require_react());
function useContainerQuery(mapFn, deps) {
  if (deps === void 0) {
    deps = [];
  }
  var elementRef = (0, import_react.useRef)(null);
  var _a = (0, import_react.useState)(null), state = _a[0], setState = _a[1];
  var getElement = (0, import_react.useCallback)(function() {
    return elementRef.current;
  }, deps);
  useResizeObserver(getElement, function(entry) {
    return setState(function(prevState) {
      return mapFn(entry, prevState);
    });
  });
  return [state, elementRef];
}

// node_modules/@cloudscape-design/component-toolkit/lib/use-controllable-state/use-controllable-state.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/container-queries/use-container-breakpoints.js
function useContainerBreakpoints(triggers) {
  const triggersDep = triggers === null || triggers === void 0 ? void 0 : triggers.join();
  return useContainerQuery((rect) => getMatchingBreakpoint(rect.contentBoxWidth, triggers), [triggersDep]);
}

// node_modules/@cloudscape-design/components/internal/is-development.js
var isDevelopment2 = true;

export {
  isDevelopment2 as isDevelopment,
  useContainerQuery,
  useContainerBreakpoints
};
//# sourceMappingURL=chunk-F4YSJK2K.js.map
