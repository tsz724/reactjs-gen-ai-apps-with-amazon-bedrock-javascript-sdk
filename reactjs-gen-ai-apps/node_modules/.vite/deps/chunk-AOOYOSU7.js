import {
  isDevelopment,
  useContainerBreakpoints,
  useContainerQuery
} from "./chunk-F4YSJK2K.js";
import {
  require_react_is
} from "./chunk-YKA7KTKX.js";
import {
  _extends
} from "./chunk-KBUAZBQ3.js";
import {
  DATA_ATTR_FUNNEL_VALUE,
  FunnelMetrics,
  calculateScroll,
  custom_css_properties_default,
  findUpUntil,
  getContainingBlock,
  getFirstScrollableParent,
  getFunnelValueSelector,
  getNameFromSelector,
  getOverflowParentDimensions,
  getOverflowParents,
  getSubStepAllSelector,
  scrollRectangleIntoView,
  useFunnel,
  useFunnelStep,
  useFunnelSubStep,
  useMobile,
  useUniqueId
} from "./chunk-ZXZ55UKT.js";
import {
  getBreakpointValue,
  useMergeRefs
} from "./chunk-EN27VPGZ.js";
import {
  KeyCode,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  nodeContains,
  useBaseComponent,
  useCurrentMode,
  useDensityMode,
  useReducedMotion,
  useResizeObserver,
  useStableCallback,
  useVisualRefresh,
  warnOnce
} from "./chunk-ZXVE6ER6.js";
import {
  require_react_dom
} from "./chunk-ZRJG7NCB.js";
import {
  __rest,
  init_tslib_es6
} from "./chunk-OH5TXUMX.js";
import {
  require_react
} from "./chunk-2EXEP7CN.js";
import {
  __commonJS,
  __toESM
} from "./chunk-WXXH56N5.js";

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement2, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement2(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement2(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/@cloudscape-design/components/top-navigation/index.js
init_tslib_es6();
var import_react57 = __toESM(require_react());

// node_modules/@cloudscape-design/components/top-navigation/internal.js
init_tslib_es6();
var import_react56 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/events/index.js
var CustomEventStub = class {
  constructor(cancelable = false, detail = null) {
    this.cancelable = cancelable;
    this.detail = detail;
    this.defaultPrevented = false;
    this.cancelBubble = false;
  }
  preventDefault() {
    this.defaultPrevented = true;
  }
  stopPropagation() {
    this.cancelBubble = true;
  }
};
function createCustomEvent({ cancelable, detail }) {
  return new CustomEventStub(cancelable, detail);
}
function fireNonCancelableEvent(handler, detail) {
  if (!handler) {
    return;
  }
  const event = createCustomEvent({ cancelable: false, detail });
  handler(event);
}
function fireCancelableEvent(handler, detail, sourceEvent) {
  if (!handler) {
    return false;
  }
  const event = createCustomEvent({ cancelable: true, detail });
  handler(event);
  if (event.defaultPrevented && sourceEvent) {
    sourceEvent.preventDefault();
  }
  if (event.cancelBubble && sourceEvent) {
    sourceEvent.stopPropagation();
  }
  return event.defaultPrevented;
}
function fireKeyboardEvent(handler, reactEvent) {
  return fireCancelableEvent(handler, {
    keyCode: reactEvent.keyCode,
    key: reactEvent.key,
    ctrlKey: reactEvent.ctrlKey,
    shiftKey: reactEvent.shiftKey,
    altKey: reactEvent.altKey,
    metaKey: reactEvent.metaKey
  }, reactEvent);
}
var isMouseEvent = (e) => {
  return e.button !== void 0;
};
function hasModifierKeys(event) {
  return event.ctrlKey || event.altKey || event.shiftKey || event.metaKey;
}
function isPlainLeftClick(event) {
  return event && (!isMouseEvent(event) || event.button === 0) && !hasModifierKeys(event);
}

// node_modules/@cloudscape-design/components/internal/components/visual-context/index.js
var import_react = __toESM(require_react());
var contextMatch = /awsui-context-([\w-]+)/;
function useVisualContext(elementRef) {
  const [value, setValue] = (0, import_react.useState)("");
  (0, import_react.useLayoutEffect)(() => {
    var _a;
    if (elementRef.current) {
      const contextParent = findUpUntil(elementRef.current, (node) => !!node.className.match(contextMatch));
      setValue((_a = contextParent === null || contextParent === void 0 ? void 0 : contextParent.className.match(contextMatch)[1]) !== null && _a !== void 0 ? _a : "");
    }
  }, [elementRef]);
  return value;
}
function getVisualContextClassname(contextName) {
  return `awsui-context-${contextName}`;
}
function VisualContext({ contextName, className, children: children2 }) {
  return import_react.default.createElement("div", { className: clsx_m_default(getVisualContextClassname(contextName), className) }, children2);
}

// node_modules/@cloudscape-design/components/internal/components/portal/index.js
var import_react2 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
function Portal({ container, children: children2 }) {
  const [activeContainer, setActiveContainer] = (0, import_react2.useState)(container !== null && container !== void 0 ? container : null);
  (0, import_react2.useLayoutEffect)(() => {
    if (container) {
      setActiveContainer(container);
      return;
    }
    const newContainer = document.createElement("div");
    document.body.appendChild(newContainer);
    setActiveContainer(newContainer);
    return () => {
      document.body.removeChild(newContainer);
      setActiveContainer(null);
    };
  }, [container]);
  return activeContainer && (0, import_react_dom.createPortal)(children2, activeContainer);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-effect-on-update.js
var import_react3 = __toESM(require_react());
function useEffectOnUpdate(callback, deps) {
  const isFirstRender = (0, import_react3.useRef)(true);
  (0, import_react3.useEffect)(() => {
    if (isFirstRender.current) {
      isFirstRender.current = false;
    } else {
      return callback();
    }
  }, deps);
}

// node_modules/@cloudscape-design/components/top-navigation/use-top-navigation.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/top-navigation/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/top-navigation/styles.scoped.css";
var styles_css_default = {
  "icon": "awsui_icon_k5dlb_ko4bx_93",
  "top-navigation": "awsui_top-navigation_k5dlb_ko4bx_111",
  "padding-box": "awsui_padding-box_k5dlb_ko4bx_146",
  "medium": "awsui_medium_k5dlb_ko4bx_156",
  "narrow": "awsui_narrow_k5dlb_ko4bx_156",
  "virtual": "awsui_virtual_k5dlb_ko4bx_167",
  "hidden": "awsui_hidden_k5dlb_ko4bx_171",
  "	": "awsui_	_k5dlb_ko4bx_1",
  "identity": "awsui_identity_k5dlb_ko4bx_183",
  "identity-link": "awsui_identity-link_k5dlb_ko4bx_186",
  "no-logo": "awsui_no-logo_k5dlb_ko4bx_206",
  "logo": "awsui_logo_k5dlb_ko4bx_210",
  "title": "awsui_title_k5dlb_ko4bx_222",
  "inputs": "awsui_inputs_k5dlb_ko4bx_237",
  "search": "awsui_search_k5dlb_ko4bx_245",
  "search-expanded": "awsui_search-expanded_k5dlb_ko4bx_249",
  "utilities": "awsui_utilities_k5dlb_ko4bx_253",
  "utility-wrapper": "awsui_utility-wrapper_k5dlb_ko4bx_264",
  "utility-type-button-link": "awsui_utility-type-button-link_k5dlb_ko4bx_285",
  "utility-type-menu-dropdown": "awsui_utility-type-menu-dropdown_k5dlb_ko4bx_290",
  "utility-type-button-primary-button": "awsui_utility-type-button-primary-button_k5dlb_ko4bx_299",
  "utility-link-icon": "awsui_utility-link-icon_k5dlb_ko4bx_307",
  "utility-button-external-icon": "awsui_utility-button-external-icon_k5dlb_ko4bx_311",
  "offset-right-none": "awsui_offset-right-none_k5dlb_ko4bx_315",
  "offset-right-l": "awsui_offset-right-l_k5dlb_ko4bx_319",
  "offset-right-xxl": "awsui_offset-right-xxl_k5dlb_ko4bx_323",
  "overflow-menu-drawer": "awsui_overflow-menu-drawer_k5dlb_ko4bx_328",
  "overflow-menu": "awsui_overflow-menu_k5dlb_ko4bx_328",
  "overflow-menu-header": "awsui_overflow-menu-header_k5dlb_ko4bx_372",
  "overflow-menu-header-text": "awsui_overflow-menu-header-text_k5dlb_ko4bx_380",
  "overflow-menu-header-text--secondary": "awsui_overflow-menu-header-text--secondary_k5dlb_ko4bx_392",
  "overflow-menu-header-text--title": "awsui_overflow-menu-header-text--title_k5dlb_ko4bx_398",
  "overflow-menu-back-button": "awsui_overflow-menu-back-button_k5dlb_ko4bx_402",
  "overflow-menu-dismiss-button": "awsui_overflow-menu-dismiss-button_k5dlb_ko4bx_406",
  "overflow-menu-control": "awsui_overflow-menu-control_k5dlb_ko4bx_410",
  "overflow-menu-list-item-utility": "awsui_overflow-menu-list-item-utility_k5dlb_ko4bx_451",
  "overflow-menu-control-link": "awsui_overflow-menu-control-link_k5dlb_ko4bx_459",
  "overflow-menu-control-expandable-menu-trigger": "awsui_overflow-menu-control-expandable-menu-trigger_k5dlb_ko4bx_462",
  "overflow-menu-list": "awsui_overflow-menu-list_k5dlb_ko4bx_451",
  "overflow-menu-list-submenu": "awsui_overflow-menu-list-submenu_k5dlb_ko4bx_498",
  "overflow-menu-list-item": "awsui_overflow-menu-list-item_k5dlb_ko4bx_451",
  "overflow-menu-list-item-icon": "awsui_overflow-menu-list-item-icon_k5dlb_ko4bx_507",
  "overflow-menu-list-item-text": "awsui_overflow-menu-list-item-text_k5dlb_ko4bx_510",
  "overflow-menu-list-item-submenu": "awsui_overflow-menu-list-item-submenu_k5dlb_ko4bx_519",
  "overflow-menu-list-item-dropdown-menu": "awsui_overflow-menu-list-item-dropdown-menu_k5dlb_ko4bx_525",
  "overflow-menu-list-item-expandable": "awsui_overflow-menu-list-item-expandable_k5dlb_ko4bx_529",
  "expanded": "awsui_expanded_k5dlb_ko4bx_537"
};

// node_modules/@cloudscape-design/components/top-navigation/use-top-navigation.js
var RESPONSIVENESS_BUFFER = 20;
function useTopNavigation({ identity, search, utilities }) {
  const mainRef = (0, import_react4.useRef)(null);
  const virtualRef = (0, import_react4.useRef)(null);
  const [breakpoint, breakpointRef] = useContainerBreakpoints(["xxs", "s"]);
  const hasSearch = !!search;
  const hasTitleWithLogo = identity && !!identity.logo && !!identity.title;
  const responsiveStates = (0, import_react4.useMemo)(() => {
    return generateResponsiveStateKeys(utilities, hasSearch, hasTitleWithLogo);
  }, [utilities, hasSearch, hasTitleWithLogo]);
  const [responsiveState, setResponsiveState] = (0, import_react4.useState)();
  const recalculateFit = (0, import_react4.useCallback)(() => {
    var _a, _b, _c, _d;
    if (!(mainRef === null || mainRef === void 0 ? void 0 : mainRef.current) || !virtualRef.current) {
      setResponsiveState(responsiveStates[0]);
      return;
    }
    const availableWidth = getContentBoxWidth(mainRef.current.querySelector(`.${styles_css_default["padding-box"]}`));
    if (availableWidth === 0) {
      setResponsiveState(responsiveStates[0]);
      return;
    }
    const sizeConfiguration = {
      hasSearch,
      availableWidth,
      // Get widths from the hidden top navigation
      fullIdentityWidth: virtualRef.current.querySelector(`.${styles_css_default.identity}`).getBoundingClientRect().width,
      titleWidth: (_b = (_a = virtualRef.current.querySelector(`.${styles_css_default.title}`)) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().width) !== null && _b !== void 0 ? _b : 0,
      searchSlotWidth: (_d = (_c = virtualRef.current.querySelector(`.${styles_css_default.search}`)) === null || _c === void 0 ? void 0 : _c.getBoundingClientRect().width) !== null && _d !== void 0 ? _d : 0,
      searchUtilityWidth: virtualRef.current.querySelector('[data-utility-special="search"]').getBoundingClientRect().width,
      utilitiesLeftPadding: parseFloat(getComputedStyle(virtualRef.current.querySelector(`.${styles_css_default.utilities}`)).paddingLeft || "0px"),
      utilityWithLabelWidths: Array.prototype.slice.call(virtualRef.current.querySelectorAll(`[data-utility-hide="false"]`)).map((element) => element.getBoundingClientRect().width),
      utilityWithoutLabelWidths: Array.prototype.slice.call(virtualRef.current.querySelectorAll(`[data-utility-hide="true"]`)).map((element) => element.getBoundingClientRect().width),
      menuTriggerUtilityWidth: virtualRef.current.querySelector('[data-utility-special="menu-trigger"]').getBoundingClientRect().width
    };
    setResponsiveState(determineBestResponsiveState(responsiveStates, sizeConfiguration));
  }, [responsiveStates, hasSearch]);
  const [, containerQueryRef] = useContainerQuery(() => {
    recalculateFit();
  }, [recalculateFit]);
  const onVirtualMount = (0, import_react4.useCallback)((element) => {
    virtualRef.current = element;
    recalculateFit();
  }, [recalculateFit]);
  const [isSearchMinimized, setSearchMinimized] = (0, import_react4.useState)(true);
  const isSearchExpanded = !isSearchMinimized && hasSearch && (responsiveState === null || responsiveState === void 0 ? void 0 : responsiveState.hideSearch);
  (0, import_react4.useEffect)(() => {
    if (!(responsiveState === null || responsiveState === void 0 ? void 0 : responsiveState.hideSearch)) {
      setSearchMinimized(true);
    }
  }, [responsiveState]);
  (0, import_react4.useEffect)(() => {
    var _a, _b;
    if (isSearchExpanded) {
      (_b = (_a = mainRef === null || mainRef === void 0 ? void 0 : mainRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${styles_css_default.search} input`)) === null || _b === void 0 ? void 0 : _b.focus();
    }
  }, [isSearchExpanded, mainRef]);
  const mergedMainRef = useMergeRefs(mainRef, containerQueryRef, breakpointRef);
  return {
    mainRef: mergedMainRef,
    virtualRef: onVirtualMount,
    responsiveState: responsiveState !== null && responsiveState !== void 0 ? responsiveState : responsiveStates[0],
    breakpoint: breakpoint !== null && breakpoint !== void 0 ? breakpoint : "default",
    isSearchExpanded: !!isSearchExpanded,
    onSearchUtilityClick: () => setSearchMinimized((isSearchMinimized2) => !isSearchMinimized2)
  };
}
function getContentBoxWidth(element) {
  const style = getComputedStyle(element);
  return parseFloat(style.width || "0px") - parseFloat(style.paddingLeft || "0px") - parseFloat(style.paddingRight || "0px");
}
function generateResponsiveStateKeys(utilities, canHideSearch, canHideTitle) {
  const states = [{}];
  if (utilities.some((utility) => utility.text)) {
    states.push({ hideUtilityText: true });
  }
  if (canHideSearch) {
    states.push({
      hideUtilityText: true,
      hideSearch: true
    });
  }
  const hiddenUtilties = [];
  for (let i = 0; i < utilities.length; i++) {
    if (!utilities[i].disableUtilityCollapse) {
      hiddenUtilties.push(i);
      states.push({
        hideUtilityText: true,
        hideSearch: canHideSearch || void 0,
        hideUtilities: hiddenUtilties.length > 0 ? hiddenUtilties.slice() : void 0
      });
    }
  }
  if (canHideTitle) {
    states.push({
      hideUtilityText: true,
      hideSearch: canHideSearch || void 0,
      hideUtilities: hiddenUtilties.length > 0 ? hiddenUtilties.slice() : void 0,
      hideTitle: true
    });
  }
  return states;
}
function determineBestResponsiveState(possibleStates, sizes) {
  const { hasSearch, availableWidth, utilitiesLeftPadding, fullIdentityWidth, titleWidth, searchSlotWidth, searchUtilityWidth, utilityWithLabelWidths, utilityWithoutLabelWidths, menuTriggerUtilityWidth } = sizes;
  for (const state of possibleStates) {
    const searchWidth = hasSearch ? state.hideSearch ? searchUtilityWidth : searchSlotWidth : 0;
    const utilitiesWidth = (state.hideUtilityText ? utilityWithoutLabelWidths : utilityWithLabelWidths).filter((_width, i) => !state.hideUtilities || state.hideUtilities.indexOf(i) === -1).reduce((sum, width) => sum + width, 0);
    const menuTriggerWidth = state.hideUtilities ? menuTriggerUtilityWidth : 0;
    const identityWidth = state.hideTitle ? fullIdentityWidth - titleWidth : fullIdentityWidth;
    const expectedInnerWidth = identityWidth + searchWidth + utilitiesLeftPadding + utilitiesWidth + menuTriggerWidth;
    if (expectedInnerWidth <= availableWidth - RESPONSIVENESS_BUFFER) {
      return state;
    }
  }
  return possibleStates[possibleStates.length - 1];
}

// node_modules/@cloudscape-design/components/top-navigation/parts/utility.js
var import_react49 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button/internal.js
init_tslib_es6();
var import_react13 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/forward-focus/index.js
var import_react5 = __toESM(require_react());
function useForwardFocus(mainRef, controlRef) {
  (0, import_react5.useImperativeHandle)(mainRef, () => ({
    focus(...args) {
      var _a;
      (_a = controlRef.current) === null || _a === void 0 ? void 0 : _a.focus(...args);
    }
  }), [controlRef]);
}

// node_modules/@cloudscape-design/components/button/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/button/styles.scoped.css";
var styles_css_default2 = {
  "content": "awsui_content_vjswe_yaynu_97",
  "button": "awsui_button_vjswe_yaynu_101",
  "variant-normal": "awsui_variant-normal_vjswe_yaynu_152",
  "is-activated": "awsui_is-activated_vjswe_yaynu_165",
  "variant-icon": "awsui_variant-icon_vjswe_yaynu_195",
  "variant-modal-dismiss": "awsui_variant-modal-dismiss_vjswe_yaynu_195",
  "variant-flashbar-icon": "awsui_variant-flashbar-icon_vjswe_yaynu_195",
  "variant-inline-icon": "awsui_variant-inline-icon_vjswe_yaynu_216",
  "disabled": "awsui_disabled_vjswe_yaynu_237",
  "variant-primary": "awsui_variant-primary_vjswe_yaynu_245",
  "variant-link": "awsui_variant-link_vjswe_yaynu_338",
  "variant-inline-link": "awsui_variant-inline-link_vjswe_yaynu_617",
  "variant-breadcrumb-group": "awsui_variant-breadcrumb-group_vjswe_yaynu_899",
  "variant-menu-trigger": "awsui_variant-menu-trigger_vjswe_yaynu_996",
  "button-no-text": "awsui_button-no-text_vjswe_yaynu_1089",
  "button-no-wrap": "awsui_button-no-wrap_vjswe_yaynu_1093",
  "full-width": "awsui_full-width_vjswe_yaynu_1096",
  "icon-left": "awsui_icon-left_vjswe_yaynu_1115",
  "icon-right": "awsui_icon-right_vjswe_yaynu_1120",
  "icon": "awsui_icon_vjswe_yaynu_1115"
};

// node_modules/@cloudscape-design/components/button/icon-helper.js
init_tslib_es6();
var React4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/icon/internal.js
init_tslib_es6();
var import_react6 = __toESM(require_react());

// node_modules/@cloudscape-design/components/icon/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/icon/styles.scoped.css";
var styles_css_default3 = {
  "icon": "awsui_icon_h11ix_swv0j_98",
  "icon-flex-height": "awsui_icon-flex-height_h11ix_swv0j_104",
  "size-small": "awsui_size-small_h11ix_swv0j_129",
  "size-small-mapped-height": "awsui_size-small-mapped-height_h11ix_swv0j_133",
  "size-normal": "awsui_size-normal_h11ix_swv0j_148",
  "size-normal-mapped-height": "awsui_size-normal-mapped-height_h11ix_swv0j_152",
  "size-medium": "awsui_size-medium_h11ix_swv0j_167",
  "size-medium-mapped-height": "awsui_size-medium-mapped-height_h11ix_swv0j_171",
  "size-big": "awsui_size-big_h11ix_swv0j_186",
  "size-big-mapped-height": "awsui_size-big-mapped-height_h11ix_swv0j_190",
  "size-large": "awsui_size-large_h11ix_swv0j_205",
  "size-large-mapped-height": "awsui_size-large-mapped-height_h11ix_swv0j_209",
  "variant-normal": "awsui_variant-normal_h11ix_swv0j_224",
  "variant-disabled": "awsui_variant-disabled_h11ix_swv0j_227",
  "variant-inverted": "awsui_variant-inverted_h11ix_swv0j_230",
  "variant-subtle": "awsui_variant-subtle_h11ix_swv0j_233",
  "variant-warning": "awsui_variant-warning_h11ix_swv0j_236",
  "variant-error": "awsui_variant-error_h11ix_swv0j_239",
  "variant-success": "awsui_variant-success_h11ix_swv0j_242",
  "variant-link": "awsui_variant-link_h11ix_swv0j_245",
  "badge": "awsui_badge_h11ix_swv0j_249"
};

// node_modules/@cloudscape-design/components/icon/icons.js
var icons_default = {
  "add-plus": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M8 1v14M15 8H1"/></svg>',
  "anchor-link": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linecap-round" d="M11 8H5"/><path d="M7 4H5a4 4 0 0 0 0 8h2M9 4h2a4 4 0 0 1 0 8H9"/></svg>',
  "angle-down": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m1 4 7 7 7-7"/></svg>',
  "angle-left-double": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M14 1 7 8l7 7"/><path d="M9 1 2 8l7 7"/></svg>',
  "angle-left": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M12 1 5 8l7 7"/></svg>',
  "angle-right-double": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m2 1 7 7-7 7"/><path d="m7 1 7 7-7 7"/></svg>',
  "angle-right": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m4 1 7 7-7 7"/></svg>',
  "angle-up": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m1 12 7-7 7 7"/></svg>',
  "arrow-left": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M9 1 2 8l7 7M2 8h13"/></svg>',
  "audio-full": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M7 15V1L1 6v4l6 5ZM15 3v10M11 5v6"/></svg>',
  "audio-half": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M7 15V1L1 6v4l6 5ZM11 5v6"/></svg>',
  "audio-off": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M7 15V1L1 6v4l6 5Z"/><path d="m15.01 5.75-4.5 4.5M15.01 10.25l-4.5-4.5"/></svg>',
  "bug": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 5h6a1 1 0 0 1 1 1v5.5A3.5 3.5 0 0 1 8.5 15h-1A3.5 3.5 0 0 1 4 11.5V6a1 1 0 0 1 1-1ZM5 5a3 3 0 0 1 6 0"/><path d="M12 9h3M1 9h3M12 12h2l1 2M4 12H2l-1 2M12 6h2l1-2M4 6H2L1 4"/></svg>',
  "calendar": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/><path d="M4.99 8H5v.01h-.01zM7.99 8H8v.01h-.01zM10.99 8H11v.01h-.01zM4.99 5H5v.01h-.01zM7.99 5H8v.01h-.01zM10.99 5H11v.01h-.01zM4.99 11H5v.01h-.01zM7.99 11H8v.01h-.01z"/></svg>',
  "call": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M9 2c2.8 0 5 2.2 5 5M7.9 13c1.3 1.3 3.5 1.3 4.8 0l1-1c.4-.4.4-1 0-1.4l-1.5-1.5c-.3-.3-1-.2-1.3.1l-.1.1c-.5.5-1.4.5-2 0L6.6 7.2c-.5-.5-.5-1.4 0-2l.1-.1c.3-.3.4-1 .1-1.3L5.3 2.3c-.3-.4-1-.4-1.3 0l-1 1C1.7 4.6 1.7 6.7 3 8.1L7.9 13z"/></svg>',
  "caret-down-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M4 5h8l-4 6-4-6z"/></svg>',
  "caret-down": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4 5h8l-4 6-4-6z"/></svg>',
  "caret-left-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M11 4v8L5 8l6-4z"/></svg>',
  "caret-right-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M5 4v8l6-4-6-4z"/></svg>',
  "caret-up-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M4 11h8L8 5l-4 6z"/></svg>',
  "caret-up": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4 11h8L8 5l-4 6z"/></svg>',
  "check": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="m14.254 4.254-8.25 8.25L6 12.5l-.004.004-4.25-4.25.008-.008L6 12.493l8.246-8.247.008.008Z"/></svg>',
  "close": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="m2 2 12 12M14 2 2 14"/></svg>',
  "contact": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round stroke-linecap-round" d="M2 12.286h5.143L8.857 14l1.714-1.714H14V2H2v10.286z"/><path class="stroke-linecap-round" d="M4.99 7H5v.01h-.01zM7.99 7H8v.01h-.01zM10.99 7H11v.01h-.01z"/></svg>',
  "copy": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 5h9v9H2z"/><path class="stroke-linejoin-round" d="M5 5V2h9v9h-3"/></svg>',
  "delete-marker": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 7V1h6l5 5v9H9"/><path class="stroke-linejoin-round" d="M8 1v6h6M1 15l6-6M7 15 1 9"/></svg>',
  "download": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M11 2h3v12H2V2h3"/><path d="m4 6 4 4 4-4M8 1v9"/></svg>',
  "drag-indicator": '<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><circle cx="5.5" cy="2.5" r=".5" class="filled"/><circle cx="5.5" cy="13.5" r=".5" class="filled"/><circle cx="5.5" cy="8" r=".5" class="filled"/><circle cx="10.5" cy="2.5" r=".5" class="filled"/><circle cx="10.5" cy="13.5" r=".5" class="filled"/><circle cx="10.5" cy="8" r=".5" class="filled"/></svg>',
  "edit": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M8.2 13.9H14v.1H8.1l.1-.1Zm2.37-9.17.7.7-5.3 5.3-.7-.7 5.3-5.3Zm2.71-2.7a.1.1 0 0 1 .14 0l.57.57a.1.1 0 0 1 0 .14l-.58.58-.71-.71.58-.58ZM3.15 12.15l.7.71-.24.24a1 1 0 0 1-.43.26l-.74.2.21-.73a1 1 0 0 1 .26-.44l.24-.24Z"/></svg>',
  "ellipsis": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="filled" cx="8" cy="2.5" r=".5"/><circle class="filled" cx="8" cy="8" r=".5"/><circle class="filled" cx="8" cy="13.5" r=".5"/></svg>',
  "envelope": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M1 2h14v12H1z"/><path class="stroke-linejoin-round" d="m1 4 7 6 7-6"/></svg>',
  "expand": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M9 2h5v5M7 2H2v5M7 14H2V9M9 14h5V9M2 2l12 12M14 2 2 14"/></svg>',
  "external": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linecap-square" d="M10 2h4v4"/><path d="m6 10 8-8"/><path class="stroke-linejoin-round" d="M14 9.048V14H2V2h5"/></svg>',
  "file-open": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M8 1v4a1 1 0 0 0 1 1h4"/><path class="stroke-linejoin-round" d="M3 15h10V5L9 1H3v14z"/><path d="m3 8 7 7"/></svg>',
  "file": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 1v5h5"/><path class="stroke-linejoin-round" d="M3 15V1h6l4 4v10H3z"/></svg>',
  "filter": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M14.986 2.016A.01.01 0 0 0 14.98 2H1.02a.01.01 0 0 0-.007.016l4.984 5.981A.01.01 0 0 1 6 8.004v6.98a.01.01 0 0 0 .014.009l3.98-1.99a.01.01 0 0 0 .006-.01v-4.99c0-.002 0-.004.002-.006l4.984-5.98Z"/></svg>',
  "flag": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m2.71 9.18 1.11-.39C5.2 8.3 6.74 8.44 8 9.18c1.27.74 2.8.89 4.18.39l1.11-.39v-6l-1.11.39c-1.38.49-2.92.35-4.18-.39-1.27-.74-2.8-.89-4.18-.39l-1.11.39v11.83"/></svg>',
  "folder-open": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 7V2h7l1 2h5v9a1 1 0 0 1-1 1H3L1 7h10l2.006 7"/></svg>',
  "folder": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M14 14H2V2h5.143L9 5h5v9z"/></svg>',
  "gen-ai": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M7.981 1.047a.02.02 0 0 1 .038 0l1.96 4.973 4.974 1.961a.02.02 0 0 1 0 .038L9.98 9.979l-1.961 4.974a.02.02 0 0 1-.038 0L6.021 9.98 1.046 8.019a.02.02 0 0 1 0-.038l4.973-1.96 1.961-4.974Z"/><path d="m2.5 2.65.045-.095.095-.045-.095-.045L2.5 2.37l-.045.095-.095.045.095.045.045.095Z" class="filled"/></svg>',
  "group-active": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M14 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM9 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z"/><path class="filled stroke-linejoin-round" d="M6 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM1 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z"/></svg>',
  "group": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M14 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM9 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3ZM6 4a2 2 0 1 0-4 0 2 2 0 0 0 4 0ZM1 11v3h6v-3c0-1.66-1.34-3-3-3s-3 1.34-3 3Z"/></svg>',
  "heart": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M13.92 3.061a3.729 3.729 0 0 0-5.21 0L8 3.76l-.71-.699a3.729 3.729 0 0 0-5.21 0 3.58 3.58 0 0 0 0 5.123l5.21 5.124.003-.004L8 14l.707-.696.004.004 5.21-5.124a3.58 3.58 0 0 0 0-5.123Z"/></svg>',
  "insert-row": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M15 6V3H1v9h5M16 11H8M12 15V7"/></svg>',
  "key": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M9 10a5.023 5.023 0 0 1 0 1 3.996 3.996 0 1 1-3-3.874L13 1h2v5h-2v2h-2l.016 1.983Z"/><path d="M4.99 11H5v.01h-.01z"/></svg>',
  "keyboard": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M15 2H1v12h14V2Z"/><path d="M6 5H4M9 5H7M12 5h-2M6 8H4M12 11H4M9 8H7M12 8h-2"/></svg>',
  "lock-private": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 7h12v7H2z"/><path d="M4 7V5a4 4 0 0 1 8 0v2"/></svg>',
  "menu": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M15 8H1M15 3H1M15 13H1"/></svg>',
  "microphone-off": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M13.76 1.34 2.11 12.98M4.75 10.8A5.002 5.002 0 0 0 13 7V6M8 15v-3M3 15h10"/><path class="filled" d="M8 1c-1.1 0-2 .9-2 2v1.09l2.88-2.88C8.61 1.08 8.32 1 8 1ZM6.64 8.46A2 2 0 0 0 8 9c1.1 0 2-.9 2-2V5.09L6.64 8.45v.01Z"/><path class="stroke-linejoin-round" d="M3.37 8.53C3.024 8.184 3 7.537 3 7V6"/></svg>',
  "microphone": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><rect class="stroke-linejoin-round" x="6" y="1" width="4" height="8" rx="2"/><path class="stroke-linejoin-round" d="M3 6v1a5 5 0 0 0 10 0V6M8 12v3M3 15h10"/></svg>',
  "multiscreen": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M11 5H1v7h10V5Z"/><path class="stroke-linejoin-round" d="M11 8.229h4v-7H5V5M1 15h10M6 15v-3"/></svg>',
  "notification": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 2.167c-3.5 0-3.5 4.666-3.5 4.666L1 11.5h14l-3.5-4.667s0-4.666-3.5-4.666ZM5.667 11.5v1.167a2.333 2.333 0 0 0 4.666 0V11.5"/><path class="stroke-linecap-round" d="M8 1v1.167"/></svg>',
  "redo": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M12 5H6.38c-4.5 0-4.5 8 0 8H13"/><path class="stroke-linejoin-round" d="m10 8 3-3-3-3"/></svg>',
  "refresh": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M10 5h5V0"/><path d="M15 8a6.957 6.957 0 0 1-7 7 6.957 6.957 0 0 1-7-7 6.957 6.957 0 0 1 7-7 6.87 6.87 0 0 1 6.3 4"/></svg>',
  "remove": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m3 3 1 11h8l1-11H3ZM1 3h14M10 2H6v1h4V2Z"/></svg>',
  "resize-area": '<svg viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="m9.5 14.5 5-5M4 14.5 14.5 4"/></svg>',
  "script": '<svg viewBox="0 0 16 17" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m9.53 4.397-3.06 7.4M4.5 11.597 1 8.097l3.5-3.5M11.5 11.597l3.5-3.5-3.5-3.5"/></svg>',
  "search": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="7" cy="7" r="5"/><path d="m15 15-4.5-4.5"/></svg>',
  "security": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 14.83s-6-1.925-6-6.74V3.265c3.31 0 5.99-1.916 5.99-1.916s2.7 1.916 6.01 1.916V8.09c0 4.815-6 6.74-6 6.74Z"/><path d="M2 8.09V3.265c3.31 0 5.99-1.916 5.99-1.916M13.99 8.09V3.265C10.68 3.265 8 1.35 8 1.35"/><path class="stroke-linejoin-round" d="M8 4v5M8 10v2"/></svg>',
  "settings": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path d="M13.33 5.792a1.942 1.942 0 0 1 .287-1.97 6.984 6.984 0 0 0-1.44-1.439 1.943 1.943 0 0 1-3.159-1.308 6.965 6.965 0 0 0-2.037 0 1.943 1.943 0 0 1-3.158 1.308 6.962 6.962 0 0 0-1.44 1.44 1.943 1.943 0 0 1-1.308 3.158 6.972 6.972 0 0 0 0 2.037 1.943 1.943 0 0 1 1.308 3.159 6.952 6.952 0 0 0 1.44 1.44 1.942 1.942 0 0 1 3.159 1.308 6.962 6.962 0 0 0 2.036 0 1.942 1.942 0 0 1 3.159-1.308 6.974 6.974 0 0 0 1.44-1.44 1.943 1.943 0 0 1 1.308-3.159 6.974 6.974 0 0 0 0-2.037 1.942 1.942 0 0 1-1.596-1.189Z"/><circle cx="8" cy="8" r="2"/></svg>',
  "share": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="11" cy="4" r="2"/><circle cx="4" cy="8" r="2"/><circle cx="11" cy="12" r="2"/><path d="M9.2 4.9 5.8 7.1M9.2 11.1 5.8 8.9"/></svg>',
  "shrink": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M10 1v5h5M10 6l5-5M6 15v-5H1M6 10l-5 5"/></svg>',
  "star-filled": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round stroke-linecap-round" d="m8 1 2.16 4.61 4.84.74-3.5 3.58.83 5.07L8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1z"/></svg>',
  "star-half": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m8 1 2.16 4.61 4.84.74-3.5 3.58.83 5.07L8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1z"/><path class="filled" d="M8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1v11.61z"/></svg>',
  "star": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round stroke-linecap-round" d="m8 1 2.16 4.61 4.84.74-3.5 3.58.83 5.07L8 12.61 3.67 15l.83-5.07L1 6.35l4.84-.74L8 1z"/></svg>',
  "status-in-progress": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-round" d="M4.99 7.995H5v.01h-.01zM7.99 7.995H8v.01h-.01zM10.99 7.995H11v.01h-.01z"/></svg>',
  "status-info": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path d="M8 11V8H6"/><path class="stroke-linejoin-round" d="M10 11H6"/><path d="M7.99 5H8v.01h-.01z"/></svg>',
  "status-negative": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path d="m10.828 5.172-5.656 5.656M10.828 10.828 5.172 5.172"/></svg>',
  "status-pending": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-square" d="M8 5v4H5"/></svg>',
  "status-positive": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-square" d="m5 8 2 2 3.521-3.521"/></svg>',
  "status-stopped": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle class="stroke-linejoin-round" cx="8" cy="8" r="7"/><path class="stroke-linecap-square" d="M11 8H5"/></svg>',
  "status-warning": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="m8 1 7 14H1L8 1z"/><path d="M7.99 12H8v.01h-.01zM8 6v4"/></svg>',
  "suggestions": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M6 14h4"/><path d="M8 11h1c0-1.53 3-2.46 3-5.24.02-1.36-.61-2.4-1.57-3.09a4.208 4.208 0 0 0-4.86 0C4.61 3.36 3.98 4.4 4 5.76 4 8.54 7 9.47 7 11h1Z"/></svg>',
  "thumbs-down-filled": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M6 9.58c0 .27.06.55.19.79l1.64 3.28c.1.21.32.34.55.34.34 0 .62-.28.62-.62v-3.33h3.44a2 2 0 0 0 1.94-2.48l-1.01-4.05a2 2 0 0 0-1.94-1.52H6v7.59Z"/><path class="stroke-linejoin-round" d="M6 2H2v7h4"/></svg>',
  "thumbs-down": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M6 9.58c0 .27.06.55.19.79l1.64 3.28c.1.21.32.34.55.34.34 0 .62-.28.62-.62v-3.33h3.44a2 2 0 0 0 1.94-2.48l-1.01-4.05a2 2 0 0 0-1.94-1.52H6v7.59ZM6 2H2v7h4"/></svg>',
  "thumbs-up-filled": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M6 6.42c0-.27.06-.55.19-.79l1.64-3.28c.1-.21.32-.34.55-.34.34 0 .62.28.62.62v3.33h3.44a2 2 0 0 1 1.94 2.48l-1.01 4.05a2 2 0 0 1-1.94 1.52H6V6.42Z"/><path class="stroke-linejoin-round" d="M6 14H2V7h4"/></svg>',
  "thumbs-up": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M6 6.42c0-.27.06-.55.19-.79l1.64-3.28c.1-.21.32-.34.55-.34.34 0 .62.28.62.62v3.33h3.44a2 2 0 0 1 1.94 2.48l-1.01 4.05a2 2 0 0 1-1.94 1.52H6V6.42ZM6 14H2V7h4"/></svg>',
  "ticket": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M8 4.275a2 2 0 0 1-2-2H3v12h3a2 2 0 1 1 4 0h3v-12h-3a2 2 0 0 1-2 2Z"/></svg>',
  "treeview-collapse": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 8h6M2 2h12v12H2z"/></svg>',
  "treeview-expand": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 8h6M8 11V5M2 2h12v12H2z"/></svg>',
  "undo": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4 13h5.625c4.5 0 4.5-8 0-8H3"/><path class="stroke-linejoin-round" d="M6 2 3 5l3 3"/></svg>',
  "unlocked": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M2 7h12v7H2z"/><path d="M11.874 4A4 4 0 0 0 4 5v2"/></svg>',
  "upload-download": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M11 13.701v-10M8 6.702l3-3 3 3M4.98 2.662v10.04M7.98 9.662l-3 3-3-3"/></svg>',
  "upload": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M5 14H2V2h12v12h-3"/><path d="M12 10 8 6l-4 4M8 6v9"/></svg>',
  "user-profile-active": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled stroke-linejoin-round" d="M4.61 4.39C4.61 2.52 6.13 1 8 1s3.39 1.52 3.39 3.39S9.87 7.78 8 7.78 4.61 6.26 4.61 4.39M2.05 14.08h11.91c0-2.25-1.17-4.23-2.9-5.3A5.77 5.77 0 0 0 8 7.91c-3.29 0-5.95 2.76-5.95 6.17z"/></svg>',
  "user-profile": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M4.61 4.39C4.61 2.52 6.13 1 8 1s3.39 1.52 3.39 3.39S9.87 7.78 8 7.78 4.61 6.26 4.61 4.39M2.05 14.08h11.91c0-2.25-1.17-4.23-2.9-5.3A5.77 5.77 0 0 0 8 7.91c-3.29 0-5.95 2.76-5.95 6.17z"/></svg>',
  "video-off": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10ZM6 5l4 4M10 5 6 9"/></svg>',
  "video-on": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10Z"/><path class="stroke-linejoin-round" d="M8 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"/></svg>',
  "video-unavailable": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path class="stroke-linejoin-round" d="M3 15h10M8 15v-3M8 12A5 5 0 1 0 8 2a5 5 0 0 0 0 10ZM5.5 7h5"/></svg>',
  "view-full": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M5 5h6v6H5z"/><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/></svg>',
  "view-horizontal": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M5 9h6v2H5z"/><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/></svg>',
  "view-vertical": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><path class="filled" d="M11 5v6H9V5z"/><path class="stroke-linejoin-round" d="M2 2h12v12H2z"/></svg>',
  "zoom-in": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="6.885" cy="6.885" r="5.385"/><path d="m14.5 14.5-3.846-3.846M7 4v6M10 7H4"/></svg>',
  "zoom-out": '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" focusable="false" aria-hidden="true"><circle cx="6.885" cy="6.885" r="5.385"/><path d="m14.5 14.5-3.846-3.846M10 7H4"/></svg>',
  "zoom-to-fit": '<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg" focusable="false" aria-hidden="true"><path d="M14 11v3h-4M2 11v3h4M2 5V2h4M14 5V2h-4M10 6H6v4h4V6Z"/></svg>'
};

// node_modules/@cloudscape-design/components/icon/internal.js
function iconSizeMap(height) {
  if (height === null) {
    return "normal";
  }
  if (height >= 50) {
    return "large";
  } else if (height >= 36) {
    return "big";
  } else if (height >= 24) {
    return "medium";
  } else if (height <= 16) {
    return "small";
  } else {
    return "normal";
  }
}
var InternalIcon = (_a) => {
  var { name, size = "normal", variant = "normal", url, alt, svg, badge, __internalRootRef = null } = _a, props = __rest(_a, ["name", "size", "variant", "url", "alt", "svg", "badge", "__internalRootRef"]);
  const iconRef = (0, import_react6.useRef)(null);
  useVisualRefresh();
  const [parentHeight, setParentHeight] = (0, import_react6.useState)(null);
  const contextualSize = size === "inherit";
  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size;
  const inlineStyles = contextualSize && parentHeight !== null ? { height: `${parentHeight}px` } : {};
  const baseProps = getBaseProps(props);
  baseProps.className = clsx_m_default(baseProps.className, styles_css_default3.icon, contextualSize && styles_css_default3["icon-flex-height"], badge && styles_css_default3.badge, !contextualSize && styles_css_default3[`size-${iconSize}-mapped-height`], styles_css_default3[`size-${iconSize}`], styles_css_default3[`variant-${variant}`]);
  (0, import_react6.useLayoutEffect)(() => {
    if (!contextualSize || !iconRef.current) {
      return;
    }
    const { lineHeight } = getComputedStyle(iconRef.current);
    const newParentHeight = parseInt(lineHeight, 10);
    setParentHeight(newParentHeight);
  });
  const mergedRef = useMergeRefs(iconRef, __internalRootRef);
  if (svg) {
    if (url) {
      warnOnce("Icon", "You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.");
    }
    return import_react6.default.createElement("span", Object.assign({}, baseProps, { ref: mergedRef, "aria-hidden": "true", style: inlineStyles }), svg);
  }
  if (url) {
    return import_react6.default.createElement(
      "span",
      Object.assign({}, baseProps, { ref: mergedRef, style: inlineStyles }),
      import_react6.default.createElement("img", { src: url, alt })
    );
  }
  const validIcon = name && Object.prototype.hasOwnProperty.call(icons_default, name);
  function iconMap(name2) {
    const genAiFilledIcon = `<svg
        width="12"
        height="12"
        viewBox="0 0 16 16"
        xmlns="http://www.w3.org/2000/svg"
        focusable="false"
        aria-hidden="true"
        data-testid="gen-ai-filled"
      >
        <path d="m8 4.4 1.018 2.582L11.6 8 9.018 9.018 8 11.6 6.982 9.018 4.4 8l2.582-1.018L8 4.4ZM2.405 2.41l.002-.003.003-.002-.003-.002-.002-.003-.002.003-.003.002.003.002.002.003Z" class="filled"></path>
      </svg>`;
    if (name2 === "gen-ai" && iconSize === "small") {
      return genAiFilledIcon;
    } else {
      return icons_default[name2];
    }
  }
  return import_react6.default.createElement("span", Object.assign({}, baseProps, {
    // dangerouslySetInnerHTML is safe here, as we control the content coming from `icons`
    // eslint-disable-next-line react/no-danger
    dangerouslySetInnerHTML: validIcon ? { __html: iconMap(name) } : void 0,
    ref: mergedRef,
    style: inlineStyles
  }));
};
var internal_default = InternalIcon;

// node_modules/@cloudscape-design/components/spinner/internal.js
init_tslib_es6();
var import_react7 = __toESM(require_react());

// node_modules/@cloudscape-design/components/spinner/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/spinner/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_1612d_3zdze_127",
  "spinner-rotator": "awsui_spinner-rotator_1612d_3zdze_1",
  "size-normal": "awsui_size-normal_1612d_3zdze_135",
  "size-big": "awsui_size-big_1612d_3zdze_143",
  "size-large": "awsui_size-large_1612d_3zdze_151",
  "variant-normal": "awsui_variant-normal_1612d_3zdze_159",
  "variant-disabled": "awsui_variant-disabled_1612d_3zdze_162",
  "variant-inverted": "awsui_variant-inverted_1612d_3zdze_165",
  "circle": "awsui_circle_1612d_3zdze_169",
  "circle-left": "awsui_circle-left_1612d_3zdze_197",
  "spinner-line-left": "awsui_spinner-line-left_1612d_3zdze_1",
  "circle-right": "awsui_circle-right_1612d_3zdze_202",
  "spinner-line-right": "awsui_spinner-line-right_1612d_3zdze_1"
};

// node_modules/@cloudscape-design/components/spinner/internal.js
function InternalSpinner(_a) {
  var { size = "normal", variant = "normal", __internalRootRef } = _a, props = __rest(_a, ["size", "variant", "__internalRootRef"]);
  const baseProps = getBaseProps(props);
  return import_react7.default.createElement(
    "span",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default4.root, styles_css_default4[`size-${size}`], styles_css_default4[`variant-${variant}`]), ref: __internalRootRef }),
    import_react7.default.createElement("span", { className: clsx_m_default(styles_css_default4.circle, styles_css_default4["circle-left"]) }),
    import_react7.default.createElement("span", { className: clsx_m_default(styles_css_default4.circle, styles_css_default4["circle-right"]) })
  );
}

// node_modules/@cloudscape-design/components/button/icon-helper.js
function getIconAlign(props) {
  const standalone = props.variant === "icon" || props.variant === "inline-icon";
  return standalone ? "left" : props.iconAlign;
}
function IconWrapper(_a) {
  var { iconName, iconUrl, iconAlt, iconSvg, iconSize, badge } = _a, props = __rest(_a, ["iconName", "iconUrl", "iconAlt", "iconSvg", "iconSize", "badge"]);
  if (!iconName && !iconUrl && !iconSvg) {
    return null;
  }
  return React4.createElement(internal_default, { className: clsx_m_default(styles_css_default2.icon, styles_css_default2[`icon-${getIconAlign(props)}`], props.iconClass), name: iconName, url: iconUrl, svg: iconSvg, alt: iconAlt, size: iconSize, badge });
}
function LeftIcon(props) {
  if (props.loading) {
    return React4.createElement(InternalSpinner, { className: clsx_m_default(styles_css_default2.icon, styles_css_default2["icon-left"]) });
  } else if (getIconAlign(props) === "left") {
    return React4.createElement(IconWrapper, Object.assign({}, props));
  }
  return null;
}
function RightIcon(props) {
  if (getIconAlign(props) === "right") {
    return React4.createElement(IconWrapper, Object.assign({}, props));
  }
  return null;
}

// node_modules/@cloudscape-design/components/internal/utils/check-safe-url.js
var allowedJavascriptUrls = ["javascript:void(0)", "javascript:void(0);", "javascript:;"];
function checkSafeUrl(component, url) {
  if (!url) {
    return;
  }
  if (allowedJavascriptUrls.indexOf(url.toLowerCase()) !== -1) {
    return;
  }
  let parsedUrl;
  try {
    parsedUrl = new URL(url);
  } catch (e) {
    return;
  }
  if (parsedUrl.protocol === "javascript:") {
    warnOnce(component, `A javascript: URL was blocked as a security precaution. The URL was "${url}".`);
    throw new Error(`A javascript: URL was blocked as a security precaution.`);
  }
  return;
}

// node_modules/@cloudscape-design/components/internal/components/live-region/index.js
init_tslib_es6();
var import_react9 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/screenreader-only/index.js
var import_react8 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/screenreader-only/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/internal/components/screenreader-only/styles.scoped.css";
var styles_css_default5 = {
  "root": "awsui_root_xttbq_2qa0w_93"
};

// node_modules/@cloudscape-design/components/internal/components/screenreader-only/index.js
function ScreenreaderOnly(props) {
  return import_react8.default.createElement("span", Object.assign({}, props, { className: clsx_m_default(styles_css_default5.root, props.className) }));
}

// node_modules/@cloudscape-design/components/internal/components/live-region/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/internal/components/live-region/styles.scoped.css";
var styles_css_default6 = {
  "root": "awsui_root_3bgfn_im8v7_5"
};

// node_modules/@cloudscape-design/components/internal/components/live-region/index.js
var live_region_default = (0, import_react9.memo)(LiveRegion);
function LiveRegion(_a) {
  var { assertive = false, delay = 10, visible = false, tagName: TagName = "span", children: children2, id, source } = _a, restProps = __rest(_a, ["assertive", "delay", "visible", "tagName", "children", "id", "source"]);
  const sourceRef = (0, import_react9.useRef)(null);
  const targetRef = (0, import_react9.useRef)(null);
  (0, import_react9.useEffect)(() => {
    function getSourceContent() {
      if (source) {
        return source.map((item) => {
          if (!item) {
            return void 0;
          }
          if (typeof item === "string") {
            return item;
          }
          if (item.current) {
            return extractInnerText(item.current);
          }
        }).filter(Boolean).join(" ");
      }
      if (sourceRef.current) {
        return extractInnerText(sourceRef.current);
      }
    }
    function updateLiveRegion() {
      const sourceContent = getSourceContent();
      if (targetRef.current && sourceContent) {
        const targetContent = extractInnerText(targetRef.current);
        if (targetContent !== sourceContent) {
          targetRef.current.innerText = sourceContent;
        }
      }
    }
    let timeoutId;
    if (delay) {
      timeoutId = setTimeout(updateLiveRegion, delay);
    } else {
      updateLiveRegion();
    }
    return () => {
      if (timeoutId) {
        clearTimeout(timeoutId);
      }
    };
  });
  return import_react9.default.createElement(
    import_react9.default.Fragment,
    null,
    visible && !source && import_react9.default.createElement(TagName, { ref: sourceRef, id }, children2),
    import_react9.default.createElement(
      ScreenreaderOnly,
      Object.assign({}, restProps, { className: clsx_m_default(styles_css_default6.root, restProps.className) }),
      !visible && !source && import_react9.default.createElement(TagName, { ref: sourceRef, "aria-hidden": "true" }, children2),
      import_react9.default.createElement("span", { ref: targetRef, "aria-atomic": "true", "aria-live": assertive ? "assertive" : "polite" })
    )
  );
}
function extractInnerText(node) {
  return (node.innerText || "").replace(/\s+/g, " ").trim();
}

// node_modules/@cloudscape-design/components/internal/context/button-context.js
var import_react10 = __toESM(require_react());
var ButtonContext = (0, import_react10.createContext)({
  onClick: () => {
  }
});
function useButtonContext() {
  return (0, import_react10.useContext)(ButtonContext);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-performance-marks.js
var import_react11 = __toESM(require_react());
function usePerformanceMarks(name, enabled, elementRef, getDetails, dependencies) {
  const id = useUniqueId();
  (0, import_react11.useEffect)(() => {
    if (!enabled || !elementRef.current) {
      return;
    }
    const elementVisible = elementRef.current.offsetWidth > 0 && elementRef.current.offsetHeight > 0 && getComputedStyle(elementRef.current).visibility !== "hidden";
    if (!elementVisible) {
      return;
    }
    const renderedMarkName = `${name}Rendered`;
    performance.mark(renderedMarkName, {
      detail: Object.assign({ source: "awsui", instanceId: id }, getDetails())
    });
  }, []);
  useEffectOnUpdate(() => {
    if (!enabled || !elementRef.current) {
      return;
    }
    const elementVisible = elementRef.current.offsetWidth > 0 && elementRef.current.offsetHeight > 0 && getComputedStyle(elementRef.current).visibility !== "hidden";
    if (!elementVisible) {
      return;
    }
    const updatedMarkName = `${name}Updated`;
    performance.mark(updatedMarkName, {
      detail: Object.assign({ source: "awsui", instanceId: id }, getDetails())
    });
  }, dependencies);
}

// node_modules/@cloudscape-design/components/internal/context/single-tab-stop-navigation-context.js
var import_react12 = __toESM(require_react());
var SingleTabStopNavigationContext = (0, import_react12.createContext)({
  navigationActive: false,
  registerFocusable: () => () => {
  }
});
function useSingleTabStopNavigation(focusable, options) {
  var _a;
  const { navigationActive: contextNavigationActive, registerFocusable } = (0, import_react12.useContext)(SingleTabStopNavigationContext);
  const [focusTargetActive, setFocusTargetActive] = (0, import_react12.useState)(false);
  const navigationDisabled = (options === null || options === void 0 ? void 0 : options.tabIndex) && (options === null || options === void 0 ? void 0 : options.tabIndex) < 0;
  const navigationActive = contextNavigationActive && !navigationDisabled;
  (0, import_react12.useEffect)(() => {
    if (!navigationDisabled && focusable && focusable.current) {
      const unregister = registerFocusable(focusable.current, (isFocusable) => setFocusTargetActive(isFocusable));
      return () => unregister();
    }
  });
  let tabIndex = options === null || options === void 0 ? void 0 : options.tabIndex;
  if (navigationActive) {
    tabIndex = !focusTargetActive ? -1 : (_a = options === null || options === void 0 ? void 0 : options.tabIndex) !== null && _a !== void 0 ? _a : 0;
  }
  return { navigationActive, tabIndex };
}

// node_modules/@cloudscape-design/components/button/internal.js
var InternalButton = import_react13.default.forwardRef((_a, ref) => {
  var { children: children2, iconName, __iconClass, onClick, onFollow, iconAlign = "left", iconUrl, iconSvg, iconAlt, variant = "normal", loading = false, loadingText, disabled = false, wrapText = true, href, target, rel, download, formAction = "submit", ariaLabel, ariaDescribedby, ariaExpanded, ariaControls, fullWidth, badge, __nativeAttributes, __internalRootRef = null, __activated = false } = _a, props = __rest(_a, ["children", "iconName", "__iconClass", "onClick", "onFollow", "iconAlign", "iconUrl", "iconSvg", "iconAlt", "variant", "loading", "loadingText", "disabled", "wrapText", "href", "target", "rel", "download", "formAction", "ariaLabel", "ariaDescribedby", "ariaExpanded", "ariaControls", "fullWidth", "badge", "__nativeAttributes", "__internalRootRef", "__activated"]);
  checkSafeUrl("Button", href);
  const isAnchor = Boolean(href);
  const isNotInteractive = loading || disabled;
  const shouldHaveContent = children2 && ["icon", "inline-icon", "flashbar-icon", "modal-dismiss"].indexOf(variant) === -1;
  const buttonRef = (0, import_react13.useRef)(null);
  useForwardFocus(ref, buttonRef);
  const buttonContext = useButtonContext();
  const uniqueId = useUniqueId("button");
  const { funnelInteractionId } = useFunnel();
  const { stepNumber, stepNameSelector } = useFunnelStep();
  const { subStepSelector, subStepNameSelector } = useFunnelSubStep();
  usePerformanceMarks("primaryButton", variant === "primary", buttonRef, () => {
    var _a2;
    return {
      loading,
      disabled,
      text: (_a2 = buttonRef.current) === null || _a2 === void 0 ? void 0 : _a2.innerText
    };
  }, [loading, disabled]);
  const handleClick = (event) => {
    if (isNotInteractive) {
      return event.preventDefault();
    }
    if (isAnchor && isPlainLeftClick(event)) {
      fireCancelableEvent(onFollow, { href, target }, event);
      if ((iconName === "external" || target === "_blank") && funnelInteractionId) {
        const stepName = getNameFromSelector(stepNameSelector);
        const subStepName = getNameFromSelector(subStepNameSelector);
        FunnelMetrics.externalLinkInteracted({
          funnelInteractionId,
          stepNumber,
          stepName,
          stepNameSelector,
          subStepSelector,
          subStepName,
          subStepNameSelector,
          elementSelector: getFunnelValueSelector(uniqueId),
          subStepAllSelector: getSubStepAllSelector()
        });
      }
    }
    const { altKey, button, ctrlKey, metaKey, shiftKey } = event;
    fireCancelableEvent(onClick, { altKey, button, ctrlKey, metaKey, shiftKey }, event);
    buttonContext.onClick({ variant });
  };
  const buttonClass = clsx_m_default(props.className, styles_css_default2.button, styles_css_default2[`variant-${variant}`], {
    [styles_css_default2.disabled]: isNotInteractive,
    [styles_css_default2["button-no-wrap"]]: !wrapText,
    [styles_css_default2["button-no-text"]]: !shouldHaveContent,
    [styles_css_default2["is-activated"]]: __activated,
    [styles_css_default2["full-width"]]: shouldHaveContent && fullWidth
  });
  const explicitTabIndex = __nativeAttributes && "tabIndex" in __nativeAttributes ? __nativeAttributes.tabIndex : void 0;
  const { tabIndex } = useSingleTabStopNavigation(buttonRef, {
    tabIndex: isAnchor && isNotInteractive ? -1 : explicitTabIndex
  });
  const buttonProps = Object.assign(Object.assign(Object.assign({}, props), __nativeAttributes), {
    tabIndex,
    // https://github.com/microsoft/TypeScript/issues/36659
    ref: useMergeRefs(buttonRef, __internalRootRef),
    "aria-label": ariaLabel,
    "aria-describedby": ariaDescribedby,
    "aria-expanded": ariaExpanded,
    "aria-controls": ariaControls,
    // add ariaLabel as `title` as visible hint text
    title: ariaLabel,
    className: buttonClass,
    onClick: handleClick,
    [DATA_ATTR_FUNNEL_VALUE]: uniqueId
  });
  const iconProps = {
    loading,
    iconName,
    iconAlign,
    iconUrl,
    iconSvg,
    iconAlt,
    variant,
    badge,
    iconClass: __iconClass,
    iconSize: variant === "modal-dismiss" ? "medium" : "normal"
  };
  const buttonContent = import_react13.default.createElement(
    import_react13.default.Fragment,
    null,
    import_react13.default.createElement(LeftIcon, Object.assign({}, iconProps)),
    shouldHaveContent && import_react13.default.createElement("span", { className: styles_css_default2.content }, children2),
    import_react13.default.createElement(RightIcon, Object.assign({}, iconProps))
  );
  const { loadingButtonCount } = useFunnel();
  (0, import_react13.useEffect)(() => {
    if (loading) {
      loadingButtonCount.current++;
      return () => {
        loadingButtonCount.current--;
      };
    }
  }, [loading, loadingButtonCount]);
  if (isAnchor) {
    return (
      // https://github.com/yannickcr/eslint-plugin-react/issues/2962
      // eslint-disable-next-line react/jsx-no-target-blank
      import_react13.default.createElement(
        import_react13.default.Fragment,
        null,
        import_react13.default.createElement("a", Object.assign({}, buttonProps, {
          href,
          target,
          // security recommendation: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target
          rel: rel !== null && rel !== void 0 ? rel : target === "_blank" ? "noopener noreferrer" : void 0,
          "aria-disabled": isNotInteractive ? true : void 0,
          download
        }), buttonContent),
        loading && loadingText && import_react13.default.createElement(live_region_default, null, loadingText)
      )
    );
  }
  return import_react13.default.createElement(
    import_react13.default.Fragment,
    null,
    import_react13.default.createElement("button", Object.assign({}, buttonProps, { type: formAction === "none" ? "button" : "submit", disabled, "aria-disabled": loading && !disabled ? true : void 0 }), buttonContent),
    loading && loadingText && import_react13.default.createElement(live_region_default, null, loadingText)
  );
});
var internal_default2 = InternalButton;

// node_modules/@cloudscape-design/components/link/internal.js
init_tslib_es6();
var import_react17 = __toESM(require_react());

// node_modules/@cloudscape-design/components/link/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/link/styles.scoped.css";
var styles_css_default7 = {
  "link": "awsui_link_4c84z_34d8y_93",
  "variant-secondary": "awsui_variant-secondary_4c84z_34d8y_162",
  "variant-primary": "awsui_variant-primary_4c84z_34d8y_197",
  "variant-info": "awsui_variant-info_4c84z_34d8y_230",
  "variant-value-large": "awsui_variant-value-large_4c84z_34d8y_265",
  "variant-top-navigation": "awsui_variant-top-navigation_4c84z_34d8y_297",
  "variant-recovery": "awsui_variant-recovery_4c84z_34d8y_330",
  "button": "awsui_button_4c84z_34d8y_363",
  "color-inverted": "awsui_color-inverted_4c84z_34d8y_398",
  "font-size-body-s": "awsui_font-size-body-s_4c84z_34d8y_419",
  "font-size-body-m": "awsui_font-size-body-m_4c84z_34d8y_426",
  "font-size-heading-xs": "awsui_font-size-heading-xs_4c84z_34d8y_432",
  "font-size-heading-s": "awsui_font-size-heading-s_4c84z_34d8y_438",
  "font-size-heading-m": "awsui_font-size-heading-m_4c84z_34d8y_445",
  "font-size-heading-l": "awsui_font-size-heading-l_4c84z_34d8y_452",
  "font-size-heading-xl": "awsui_font-size-heading-xl_4c84z_34d8y_459",
  "font-size-display-l": "awsui_font-size-display-l_4c84z_34d8y_466",
  "font-size-inherit": "awsui_font-size-inherit_4c84z_34d8y_473",
  "icon-wrapper": "awsui_icon-wrapper_4c84z_34d8y_481",
  "icon": "awsui_icon_4c84z_34d8y_481"
};

// node_modules/@cloudscape-design/components/i18n/context.js
var import_react14 = __toESM(require_react());
var InternalI18nContext = import_react14.default.createContext({
  locale: null,
  format: (_namespace, _component, _key, provided) => provided
});
function useLocale() {
  return (0, import_react14.useContext)(InternalI18nContext).locale;
}
function useInternalI18n(componentName) {
  const { format } = (0, import_react14.useContext)(InternalI18nContext);
  return (key, provided, customHandler) => {
    return format("@cloudscape-design/components", componentName, key, provided, customHandler);
  };
}

// node_modules/@cloudscape-design/components/internal/context/info-link-label-context.js
var import_react15 = __toESM(require_react());
var InfoLinkLabelContext = (0, import_react15.createContext)(void 0);

// node_modules/@cloudscape-design/components/internal/context/link-default-variant-context.js
var import_react16 = __toESM(require_react());
var LinkDefaultVariantContext = (0, import_react16.createContext)({
  defaultVariant: "secondary"
});

// node_modules/@cloudscape-design/components/link/internal.js
var InternalLink = import_react17.default.forwardRef((_a, ref) => {
  var { variant: providedVariant, fontSize = "body-m", color = "normal", external = false, target, href, rel, ariaLabel, externalIconAriaLabel, onFollow, children: children2, __internalRootRef = null } = _a, props = __rest(_a, ["variant", "fontSize", "color", "external", "target", "href", "rel", "ariaLabel", "externalIconAriaLabel", "onFollow", "children", "__internalRootRef"]);
  checkSafeUrl("Link", href);
  const isButton = !href;
  const { defaultVariant } = (0, import_react17.useContext)(LinkDefaultVariantContext);
  const variant = providedVariant || defaultVariant;
  const specialStyles = ["top-navigation", "link", "recovery"];
  const hasSpecialStyle = specialStyles.indexOf(variant) > -1;
  const i18n = useInternalI18n("link");
  const baseProps = getBaseProps(props);
  const anchorTarget = target !== null && target !== void 0 ? target : external ? "_blank" : void 0;
  const anchorRel = rel !== null && rel !== void 0 ? rel : anchorTarget === "_blank" ? "noopener noreferrer" : void 0;
  const uniqueId = useUniqueId("link");
  const linkId = useUniqueId("link-self");
  const infoId = useUniqueId("link-info");
  const infoLinkLabelFromContext = (0, import_react17.useContext)(InfoLinkLabelContext);
  const { funnelInteractionId } = useFunnel();
  const { stepNumber, stepNameSelector } = useFunnelStep();
  const { subStepSelector, subStepNameSelector } = useFunnelSubStep();
  const fireFunnelEvent = (funnelInteractionId2) => {
    if (variant === "info") {
      const stepName = getNameFromSelector(stepNameSelector);
      const subStepName = getNameFromSelector(subStepNameSelector);
      FunnelMetrics.helpPanelInteracted({
        funnelInteractionId: funnelInteractionId2,
        stepNumber,
        stepName,
        stepNameSelector,
        subStepSelector,
        subStepName,
        subStepNameSelector,
        elementSelector: getFunnelValueSelector(uniqueId),
        subStepAllSelector: getSubStepAllSelector()
      });
    } else if (external) {
      const stepName = getNameFromSelector(stepNameSelector);
      const subStepName = getNameFromSelector(subStepNameSelector);
      FunnelMetrics.externalLinkInteracted({
        funnelInteractionId: funnelInteractionId2,
        stepNumber,
        stepName,
        stepNameSelector,
        subStepSelector,
        subStepName,
        subStepNameSelector,
        elementSelector: getFunnelValueSelector(uniqueId),
        subStepAllSelector: getSubStepAllSelector()
      });
    }
  };
  const fireFollowEvent = (event) => {
    if (funnelInteractionId) {
      fireFunnelEvent(funnelInteractionId);
    }
    fireCancelableEvent(onFollow, { href, external, target: anchorTarget }, event);
  };
  const handleLinkClick = (event) => {
    if (isPlainLeftClick(event)) {
      fireFollowEvent(event);
    }
  };
  const handleButtonClick = (event) => {
    fireFollowEvent(event);
  };
  const handleButtonKeyDown = (event) => {
    if (event.keyCode === KeyCode.space || event.keyCode === KeyCode.enter) {
      event.preventDefault();
      fireFollowEvent(event);
    }
  };
  const linkRef = (0, import_react17.useRef)(null);
  const isVisualRefresh = useVisualRefresh();
  useForwardFocus(ref, linkRef);
  const applyButtonStyles = isButton && isVisualRefresh && !hasSpecialStyle;
  const sharedProps = Object.assign(Object.assign({ id: linkId }, baseProps), {
    // https://github.com/microsoft/TypeScript/issues/36659
    ref: useMergeRefs(linkRef, __internalRootRef),
    className: clsx_m_default(styles_css_default7.link, baseProps.className, applyButtonStyles ? styles_css_default7.button : null, styles_css_default7[getVariantStyle(variant)], styles_css_default7[getFontSizeStyle(variant, fontSize)], styles_css_default7[getColorStyle(variant, color)]),
    "aria-label": ariaLabel,
    "aria-labelledby": "",
    [DATA_ATTR_FUNNEL_VALUE]: uniqueId
  });
  if (variant === "info" && infoLinkLabelFromContext && !ariaLabel) {
    sharedProps["aria-labelledby"] = `${sharedProps.id} ${infoId} ${infoLinkLabelFromContext}`;
  }
  const renderedExternalIconAriaLabel = i18n("externalIconAriaLabel", externalIconAriaLabel);
  const content = import_react17.default.createElement(
    import_react17.default.Fragment,
    null,
    children2,
    external && import_react17.default.createElement(
      "span",
      { className: styles_css_default7["icon-wrapper"] },
      " ",
      import_react17.default.createElement(
        "span",
        { className: styles_css_default7.icon, "aria-label": renderedExternalIconAriaLabel, role: renderedExternalIconAriaLabel ? "img" : void 0 },
        import_react17.default.createElement(internal_default, { name: "external", size: "inherit" })
      )
    ),
    variant === "info" && import_react17.default.createElement("span", { hidden: true, id: infoId }, ":")
  );
  const { tabIndex } = useSingleTabStopNavigation(linkRef, { tabIndex: isButton ? 0 : void 0 });
  if (isButton) {
    return import_react17.default.createElement("a", Object.assign({}, sharedProps, { role: "button", tabIndex, onKeyDown: handleButtonKeyDown, onClick: handleButtonClick }), content);
  }
  return (
    // we dynamically set proper rel in the code above
    // eslint-disable-next-line react/jsx-no-target-blank
    import_react17.default.createElement("a", Object.assign({}, sharedProps, { tabIndex, target: anchorTarget, rel: anchorRel, href, onClick: handleLinkClick }), content)
  );
});
function getVariantStyle(variant) {
  return `variant-${variant.replace(/^awsui-/, "")}`;
}
function getFontSizeStyle(variant, fontSize) {
  switch (variant) {
    case "info":
      return "font-size-body-s";
    case "awsui-value-large":
      return "font-size-display-l";
    default:
      return `font-size-${fontSize}`;
  }
}
function getColorStyle(variant, color) {
  return `color-${variant === "info" ? "normal" : color}`;
}
var internal_default3 = InternalLink;

// node_modules/@cloudscape-design/components/internal/components/menu-dropdown/index.js
init_tslib_es6();
var import_react48 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/internal.js
init_tslib_es6();
var import_react47 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/button-dropdown/styles.scoped.css";
var styles_css_default8 = {
  "button-dropdown": "awsui_button-dropdown_sne0l_qvwd2_93",
  "items-list-container": "awsui_items-list-container_sne0l_qvwd2_97",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_sne0l_qvwd2_1",
  "rotate-up": "awsui_rotate-up_sne0l_qvwd2_114",
  "rotate-down": "awsui_rotate-down_sne0l_qvwd2_129",
  "header": "awsui_header_sne0l_qvwd2_144",
  "title": "awsui_title_sne0l_qvwd2_153",
  "description": "awsui_description_sne0l_qvwd2_154",
  "split-trigger-wrapper": "awsui_split-trigger-wrapper_sne0l_qvwd2_158",
  "trigger-item": "awsui_trigger-item_sne0l_qvwd2_161",
  "trigger-button": "awsui_trigger-button_sne0l_qvwd2_164",
  "visual-refresh": "awsui_visual-refresh_sne0l_qvwd2_176",
  "split-trigger": "awsui_split-trigger_sne0l_qvwd2_158",
  "dropdown-trigger": "awsui_dropdown-trigger_sne0l_qvwd2_184",
  "test-utils-button-trigger": "awsui_test-utils-button-trigger_sne0l_qvwd2_188"
};

// node_modules/@cloudscape-design/components/internal/components/dropdown/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/internal/components/dropdown/styles.scoped.css";
var styles_css_default9 = {
  "dropdown-content-wrapper": "awsui_dropdown-content-wrapper_qwoo0_1632s_93",
  "awsui-motion-fade-in-dropdown": "awsui_awsui-motion-fade-in-dropdown_qwoo0_1632s_1",
  "refresh": "awsui_refresh_qwoo0_1632s_114",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_qwoo0_1632s_1",
  "root": "awsui_root_qwoo0_1632s_143",
  "interior": "awsui_interior_qwoo0_1632s_179",
  "dropdown": "awsui_dropdown_qwoo0_1632s_93",
  "use-portal": "awsui_use-portal_qwoo0_1632s_190",
  "is-empty": "awsui_is-empty_qwoo0_1632s_243",
  "dropdown-drop-up": "awsui_dropdown-drop-up_qwoo0_1632s_246",
  "with-limited-width": "awsui_with-limited-width_qwoo0_1632s_250",
  "dropdown-drop-left": "awsui_dropdown-drop-left_qwoo0_1632s_253",
  "dropdown-drop-right": "awsui_dropdown-drop-right_qwoo0_1632s_256",
  "occupy-entire-width": "awsui_occupy-entire-width_qwoo0_1632s_259",
  "stretch-beyond-trigger-width": "awsui_stretch-beyond-trigger-width_qwoo0_1632s_262",
  "hide-upper-border": "awsui_hide-upper-border_qwoo0_1632s_266",
  "open": "awsui_open_qwoo0_1632s_273",
  "nowrap": "awsui_nowrap_qwoo0_1632s_282",
  "dropdown-content": "awsui_dropdown-content_qwoo0_1632s_93",
  "stretch-trigger-height": "awsui_stretch-trigger-height_qwoo0_1632s_293"
};

// node_modules/@cloudscape-design/components/internal/components/dropdown/index.js
var import_react29 = __toESM(require_react());
var import_react_dom4 = __toESM(require_react_dom());

// node_modules/@cloudscape-design/components/internal/components/dropdown/dropdown-fit-handler.js
var AVAILABLE_SPACE_RESERVE_DEFAULT = 50;
var AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19;
var AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;
var getClosestParentDimensions = (element) => {
  const parents = getOverflowParents(element).map((el) => {
    const { height, width, top, left } = el.getBoundingClientRect();
    return {
      height,
      width,
      top,
      left
    };
  });
  return parents.shift();
};
var defaultMaxDropdownWidth = getBreakpointValue("xxs");
var getAvailableSpace = ({ trigger, overflowParents, stretchWidth = false, stretchHeight = false, isMobile }) => {
  const availableSpaceReserveVertical = stretchHeight ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  const availableSpaceReserveHorizontal = stretchWidth ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  const { bottom: triggerBottom, left: triggerLeft, right: triggerRight } = trigger.getBoundingClientRect();
  return overflowParents.reduce(({ above, below, left, right }, overflowParent) => {
    const offsetTop = triggerBottom - overflowParent.top;
    const currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;
    const currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;
    const currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;
    const currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;
    return {
      above: Math.min(above, currentAbove),
      below: Math.min(below, currentBelow),
      left: Math.min(left, currentLeft),
      right: Math.min(right, currentRight)
    };
  }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });
};
var getInteriorAvailableSpace = ({ trigger, overflowParents, isMobile }) => {
  const AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  const AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  const { bottom: triggerBottom, top: triggerTop, left: triggerLeft, right: triggerRight } = trigger.getBoundingClientRect();
  return overflowParents.reduce(({ above, below, left, right }, overflowParent) => {
    const currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;
    const currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;
    const currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;
    const currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;
    return {
      above: Math.min(above, currentAbove),
      below: Math.min(below, currentBelow),
      left: Math.min(left, currentLeft),
      right: Math.min(right, currentRight)
    };
  }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });
};
var getWidths = ({ triggerElement, dropdownElement, desiredMinWidth, stretchBeyondTriggerWidth = false }) => {
  const triggerWidth = triggerElement.getBoundingClientRect().width;
  const minWidth = desiredMinWidth ? Math.min(triggerWidth, desiredMinWidth) : triggerWidth;
  const maxWidth = stretchBeyondTriggerWidth ? Math.max(defaultMaxDropdownWidth, triggerWidth) : Number.MAX_VALUE;
  const requiredWidth = dropdownElement.getBoundingClientRect().width;
  const idealWidth = Math.min(Math.max(requiredWidth, minWidth), maxWidth);
  return { idealWidth, minWidth, triggerWidth };
};
var hasEnoughSpaceToStretchBeyondTriggerWidth = ({ triggerElement, dropdownElement, desiredMinWidth, expandToViewport, stretchWidth, stretchHeight, isMobile }) => {
  const overflowParents = getOverflowParentDimensions({
    element: dropdownElement,
    excludeClosestParent: false,
    expandToViewport,
    canExpandOutsideViewport: stretchHeight
  });
  const { idealWidth } = getWidths({
    triggerElement,
    dropdownElement,
    desiredMinWidth,
    stretchBeyondTriggerWidth: true
  });
  const availableSpace = getAvailableSpace({
    trigger: triggerElement,
    overflowParents,
    stretchWidth,
    stretchHeight,
    isMobile
  });
  return idealWidth <= availableSpace.left || idealWidth <= availableSpace.right;
};
var getDropdownPosition = ({ triggerElement, dropdownElement, overflowParents, minWidth: desiredMinWidth, preferCenter = false, stretchWidth = false, stretchHeight = false, isMobile = false, stretchBeyondTriggerWidth = false }) => {
  const availableSpace = getAvailableSpace({
    trigger: triggerElement,
    overflowParents,
    stretchWidth,
    stretchHeight,
    isMobile
  });
  const { idealWidth, minWidth, triggerWidth } = getWidths({
    triggerElement,
    dropdownElement,
    desiredMinWidth,
    stretchBeyondTriggerWidth
  });
  let dropLeft;
  let left = null;
  let width = idealWidth;
  if (idealWidth <= availableSpace.right) {
    dropLeft = false;
  } else if (idealWidth <= availableSpace.left) {
    dropLeft = true;
  } else {
    dropLeft = availableSpace.left > availableSpace.right;
    width = Math.max(availableSpace.left, availableSpace.right, minWidth);
  }
  if (preferCenter) {
    const spillOver = (idealWidth - triggerWidth) / 2;
    const availableOutsideLeft = availableSpace.left - triggerWidth;
    const availableOutsideRight = availableSpace.right - triggerWidth;
    const fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;
    if (fitsInCenter) {
      left = -spillOver;
    }
  }
  const dropUp = availableSpace.below < dropdownElement.offsetHeight && availableSpace.above > availableSpace.below;
  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;
  const croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;
  return {
    dropUp,
    dropLeft,
    left: left === null ? "auto" : `${left}px`,
    height: `${croppedHeight}px`,
    width: `${width}px`
  };
};
var getInteriorDropdownPosition = (trigger, dropdown, overflowParents, isMobile) => {
  const availableSpace = getInteriorAvailableSpace({ trigger, overflowParents, isMobile });
  const { bottom: triggerBottom, top: triggerTop, width: triggerWidth } = trigger.getBoundingClientRect();
  const { top: parentDropdownTop, height: parentDropdownHeight } = getClosestParentDimensions(trigger);
  let dropLeft;
  let width = dropdown.getBoundingClientRect().width;
  const top = triggerTop - parentDropdownTop;
  if (width <= availableSpace.right) {
    dropLeft = false;
  } else if (width <= availableSpace.left) {
    dropLeft = true;
  } else {
    dropLeft = availableSpace.left > availableSpace.right;
    width = Math.max(availableSpace.left, availableSpace.right);
  }
  const left = dropLeft ? 0 - width : triggerWidth;
  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;
  const bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;
  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;
  const croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;
  return {
    dropUp,
    dropLeft,
    height: `${croppedHeight}px`,
    width: `${width}px`,
    top: `${top}px`,
    bottom: `${bottom}px`,
    left: `${left}px`
  };
};
var calculatePosition = (dropdownElement, triggerElement, verticalContainerElement, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth, stretchBeyondTriggerWidth) => {
  verticalContainerElement.style.maxHeight = "";
  dropdownElement.style.width = "";
  dropdownElement.style.top = "";
  dropdownElement.style.bottom = "";
  dropdownElement.style.left = "";
  dropdownElement.classList.remove(styles_css_default9["dropdown-drop-left"]);
  dropdownElement.classList.remove(styles_css_default9["dropdown-drop-right"]);
  dropdownElement.classList.remove(styles_css_default9["dropdown-drop-up"]);
  const overflowParents = getOverflowParentDimensions({
    element: dropdownElement,
    excludeClosestParent: interior,
    expandToViewport,
    canExpandOutsideViewport: stretchHeight
  });
  const position = interior ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile) : getDropdownPosition({
    triggerElement,
    dropdownElement,
    overflowParents,
    minWidth,
    preferCenter,
    stretchWidth,
    stretchHeight,
    isMobile,
    stretchBeyondTriggerWidth
  });
  const triggerBox = triggerElement.getBoundingClientRect();
  return [position, triggerBox];
};

// node_modules/@cloudscape-design/components/internal/components/transition/index.js
init_tslib_es6();
var import_react25 = __toESM(require_react());
var import_react26 = __toESM(require_react());

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types3 = __toESM(require_prop_types());

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/CSSTransition.js
var import_react20 = __toESM(require_react());

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react19 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
  enter: import_prop_types.default.number,
  exit: import_prop_types.default.number,
  appear: import_prop_types.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  active: import_prop_types.default.string
}), import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  enterDone: import_prop_types.default.string,
  enterActive: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  exitDone: import_prop_types.default.string,
  exitActive: import_prop_types.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react18 = __toESM(require_react());
var TransitionGroupContext_default = import_react18.default.createContext(null);

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow = function forceReflow2(node) {
  return node.scrollTop;
};

// node_modules/react-transition-group/esm/Transition.js
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = function(_React$Component) {
  _inheritsLoose(Transition3, _React$Component);
  function Transition3(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var parentGroup = context;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this.state = {
      status: initialStatus
    };
    _this.nextCallback = null;
    return _this;
  }
  Transition3.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition3.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        if (this.props.unmountOnExit || this.props.mountOnEnter) {
          var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom2.default.findDOMNode(this);
          if (node)
            forceReflow(node);
        }
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this2 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom2.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this2.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this2.props.onEntering(maybeNode, maybeAppearing);
      _this2.onTransitionEnd(enterTimeout, function() {
        _this2.safeSetState({
          status: ENTERED
        }, function() {
          _this2.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom2.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      import_react19.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children2 === "function" ? children2(status, childProps) : import_react19.default.cloneElement(import_react19.default.Children.only(children2), childProps))
    );
  };
  return Transition3;
}(import_react19.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types2.default.shape({
    current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value = propValue[key];
      return import_prop_types2.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types2.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types2.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types2.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types2.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types2.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types2.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types2.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types2.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types2.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types2.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types2.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types2.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types2.default.func
} : {};
function noop() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop,
  onEntering: noop,
  onEntered: noop,
  onExit: noop,
  onExiting: noop,
  onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var _addClass = function addClass2(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return addClass(node, c);
  });
};
var removeClass2 = function removeClass3(node, classes) {
  return node && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node, c);
  });
};
var CSSTransition = function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this.removeClasses(node, "exit");
      _this.addClass(node, appearing ? "appear" : "enter", "base");
      if (_this.props.onEnter) {
        _this.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this.addClass(node, type, "active");
      if (_this.props.onEntering) {
        _this.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this.removeClasses(node, type);
      _this.addClass(node, type, "done");
      if (_this.props.onEntered) {
        _this.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
      _this.removeClasses(node, "appear");
      _this.removeClasses(node, "enter");
      _this.addClass(node, "exit", "base");
      if (_this.props.onExit) {
        _this.props.onExit(maybeNode);
      }
    };
    _this.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
      _this.addClass(node, "exit", "active");
      if (_this.props.onExiting) {
        _this.props.onExiting(maybeNode);
      }
    };
    _this.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
      _this.removeClasses(node, "exit");
      _this.addClass(node, "exit", "done");
      if (_this.props.onExited) {
        _this.props.onExited(maybeNode);
      }
    };
    _this.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this.getClassNames = function(type) {
      var classNames = _this.props.classNames;
      var isStringClassNames = typeof classNames === "string";
      var prefix = isStringClassNames && classNames ? classNames + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      if (node)
        forceReflow(node);
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node, className);
    }
  };
  _proto.removeClasses = function removeClasses(node, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node, doneClassName);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return import_react20.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react20.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types3.default.func
}) : {};
var CSSTransition_default = CSSTransition;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var import_prop_types5 = __toESM(require_prop_types());
var import_react23 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react22 = __toESM(require_react());

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react21 = __toESM(require_react());
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react21.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2)
    import_react21.Children.map(children2, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react21.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key) {
    var child = children2[key];
    if (!(0, import_react21.isValidElement)(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react21.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key] = (0, import_react21.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key] = (0, import_react21.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react21.isValidElement)(prevChild)) {
      children2[key] = (0, import_react21.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context) {
    var _this;
    _this = _React$Component.call(this, props, context) || this;
    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
    _this.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, Component = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component === null) {
      return import_react22.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return import_react22.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, import_react22.default.createElement(Component, props, children2));
  };
  return TransitionGroup2;
}(import_react22.default.Component);
TransitionGroup.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: import_prop_types4.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: import_prop_types4.default.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: import_prop_types4.default.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: import_prop_types4.default.func
} : {};
TransitionGroup.defaultProps = defaultProps;
var TransitionGroup_default = TransitionGroup;

// node_modules/react-transition-group/esm/ReplaceTransition.js
var ReplaceTransition = function(_React$Component) {
  _inheritsLoose(ReplaceTransition2, _React$Component);
  function ReplaceTransition2() {
    var _this;
    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
    _this.handleEnter = function() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return _this.handleLifecycle("onEnter", 0, args);
    };
    _this.handleEntering = function() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      return _this.handleLifecycle("onEntering", 0, args);
    };
    _this.handleEntered = function() {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return _this.handleLifecycle("onEntered", 0, args);
    };
    _this.handleExit = function() {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return _this.handleLifecycle("onExit", 1, args);
    };
    _this.handleExiting = function() {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      return _this.handleLifecycle("onExiting", 1, args);
    };
    _this.handleExited = function() {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      return _this.handleLifecycle("onExited", 1, args);
    };
    return _this;
  }
  var _proto = ReplaceTransition2.prototype;
  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
    var _child$props;
    var children2 = this.props.children;
    var child = import_react23.default.Children.toArray(children2)[idx];
    if (child.props[handler])
      (_child$props = child.props)[handler].apply(_child$props, originalArgs);
    if (this.props[handler]) {
      var maybeNode = child.props.nodeRef ? void 0 : import_react_dom3.default.findDOMNode(this);
      this.props[handler](maybeNode);
    }
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
    var _React$Children$toArr = import_react23.default.Children.toArray(children2), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
    delete props.onEnter;
    delete props.onEntering;
    delete props.onEntered;
    delete props.onExit;
    delete props.onExiting;
    delete props.onExited;
    return import_react23.default.createElement(TransitionGroup_default, props, inProp ? import_react23.default.cloneElement(first, {
      key: "first",
      onEnter: this.handleEnter,
      onEntering: this.handleEntering,
      onEntered: this.handleEntered
    }) : import_react23.default.cloneElement(second, {
      key: "second",
      onEnter: this.handleExit,
      onEntering: this.handleExiting,
      onEntered: this.handleExited
    }));
  };
  return ReplaceTransition2;
}(import_react23.default.Component);
ReplaceTransition.propTypes = true ? {
  in: import_prop_types5.default.bool.isRequired,
  children: function children(props, propName) {
    if (import_react23.default.Children.count(props[propName]) !== 2)
      return new Error('"' + propName + '" must be exactly two transition components.');
    return null;
  }
} : {};

// node_modules/react-transition-group/esm/SwitchTransition.js
var import_react24 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
var _leaveRenders;
var _enterRenders;
function areChildrenDifferent(oldChildren, newChildren) {
  if (oldChildren === newChildren)
    return false;
  if (import_react24.default.isValidElement(oldChildren) && import_react24.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
    return false;
  }
  return true;
}
var modes = {
  out: "out-in",
  in: "in-out"
};
var callHook = function callHook2(element, name, cb) {
  return function() {
    var _element$props;
    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
    cb();
  };
};
var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function(_ref) {
  var current = _ref.current, changeState = _ref.changeState;
  return import_react24.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERING, null);
    })
  });
}, _leaveRenders[modes.in] = function(_ref2) {
  var current = _ref2.current, changeState = _ref2.changeState, children2 = _ref2.children;
  return [current, import_react24.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERING);
    })
  })];
}, _leaveRenders);
var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function(_ref3) {
  var children2 = _ref3.children, changeState = _ref3.changeState;
  return import_react24.default.cloneElement(children2, {
    in: true,
    onEntered: callHook(children2, "onEntered", function() {
      changeState(ENTERED, import_react24.default.cloneElement(children2, {
        in: true
      }));
    })
  });
}, _enterRenders[modes.in] = function(_ref4) {
  var current = _ref4.current, children2 = _ref4.children, changeState = _ref4.changeState;
  return [import_react24.default.cloneElement(current, {
    in: false,
    onExited: callHook(current, "onExited", function() {
      changeState(ENTERED, import_react24.default.cloneElement(children2, {
        in: true
      }));
    })
  }), import_react24.default.cloneElement(children2, {
    in: true
  })];
}, _enterRenders);
var SwitchTransition = function(_React$Component) {
  _inheritsLoose(SwitchTransition2, _React$Component);
  function SwitchTransition2() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      status: ENTERED,
      current: null
    };
    _this.appeared = false;
    _this.changeState = function(status, current) {
      if (current === void 0) {
        current = _this.state.current;
      }
      _this.setState({
        status,
        current
      });
    };
    return _this;
  }
  var _proto = SwitchTransition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.appeared = true;
  };
  SwitchTransition2.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
    if (props.children == null) {
      return {
        current: null
      };
    }
    if (state.status === ENTERING && props.mode === modes.in) {
      return {
        status: ENTERING
      };
    }
    if (state.current && areChildrenDifferent(state.current, props.children)) {
      return {
        status: EXITING
      };
    }
    return {
      current: import_react24.default.cloneElement(props.children, {
        in: true
      })
    };
  };
  _proto.render = function render() {
    var _this$props = this.props, children2 = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
    var data = {
      children: children2,
      current,
      changeState: this.changeState,
      status
    };
    var component;
    switch (status) {
      case ENTERING:
        component = enterRenders[mode](data);
        break;
      case EXITING:
        component = leaveRenders[mode](data);
        break;
      case ENTERED:
        component = current;
    }
    return import_react24.default.createElement(TransitionGroupContext_default.Provider, {
      value: {
        isMounting: !this.appeared
      }
    }, component);
  };
  return SwitchTransition2;
}(import_react24.default.Component);
SwitchTransition.propTypes = true ? {
  /**
   * Transition modes.
   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.
   * `in-out`: New element transitions in first, then when complete, the current element transitions out.
   *
   * @type {'out-in'|'in-out'}
   */
  mode: import_prop_types6.default.oneOf([modes.in, modes.out]),
  /**
   * Any `Transition` or `CSSTransition` component.
   */
  children: import_prop_types6.default.oneOfType([import_prop_types6.default.element.isRequired])
} : {};
SwitchTransition.defaultProps = {
  mode: modes.out
};

// node_modules/@cloudscape-design/components/internal/components/transition/index.js
function Transition2(_a) {
  var { in: isIn, children: children2, exit = true, onStatusChange = () => void 0, disabled = false, transitionChangeDelay } = _a, rest = __rest(_a, ["in", "children", "exit", "onStatusChange", "disabled", "transitionChangeDelay"]);
  const transitionRootElement = (0, import_react26.useRef)(null);
  const [transitionState, setTransitionState] = (0, import_react25.useState)(isIn ? "entered" : "exited");
  const motionDisabled = useReducedMotion(transitionRootElement) || disabled;
  const addTransitionEndListener = (0, import_react26.useCallback)((done) => {
    const node = transitionRootElement.current;
    if (node === null) {
      return;
    }
    const listener = (e) => {
      if (e.target === node) {
        node.removeEventListener("transitionend", listener);
        node.removeEventListener("animationend", listener);
        done();
      }
    };
    node.addEventListener("transitionend", listener);
    node.addEventListener("animationend", listener);
  }, []);
  return import_react25.default.createElement(Transition_default, Object.assign({ addEndListener: addTransitionEndListener, timeout: motionDisabled ? 0 : void 0, in: isIn, nodeRef: transitionRootElement, exit, onEnter: (isAppearing) => {
    if (!isAppearing) {
      setTransitionState("enter");
      onStatusChange("enter");
    }
  }, onEntering: (isAppearing) => {
    var _a2;
    if (!isAppearing) {
      void ((_a2 = transitionRootElement.current) === null || _a2 === void 0 ? void 0 : _a2.offsetHeight);
      if (transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering) {
        setTimeout(() => {
          setTransitionState("entering");
          onStatusChange("entering");
        }, transitionChangeDelay === null || transitionChangeDelay === void 0 ? void 0 : transitionChangeDelay.entering);
      } else {
        setTransitionState("entering");
        onStatusChange("entering");
      }
    }
  }, onEntered: (isAppearing) => {
    if (!isAppearing) {
      setTransitionState("entered");
      onStatusChange("entered");
    }
  }, onExit: () => {
    setTransitionState("exit");
    onStatusChange("exit");
  }, onExiting: () => {
    setTransitionState("exiting");
    onStatusChange("exiting");
  }, onExited: () => {
    setTransitionState("exited");
    onStatusChange("exited");
  } }, rest), () => children2(transitionState, transitionRootElement));
}

// node_modules/@cloudscape-design/components/internal/hooks/use-portal-mode-classes/index.js
function usePortalModeClasses(ref) {
  const colorMode = useCurrentMode(ref);
  const densityMode = useDensityMode(ref);
  const context = useVisualContext(ref);
  const visualRefresh = useVisualRefresh();
  return clsx_m_default({
    "awsui-polaris-dark-mode awsui-dark-mode": colorMode === "dark",
    "awsui-polaris-compact-mode awsui-compact-mode": densityMode === "compact",
    "awsui-visual-refresh": visualRefresh,
    [`awsui-context-${context}`]: context
  });
}

// node_modules/@cloudscape-design/components/internal/components/dropdown/context.js
var import_react27 = __toESM(require_react());
var DropdownContext = import_react27.default.createContext({
  position: "bottom-right"
});
function DropdownContextProvider({ children: children2, position = "bottom-right" }) {
  return import_react27.default.createElement(DropdownContext.Provider, { value: { position } }, children2);
}
function useDropdownContext() {
  return (0, import_react27.useContext)(DropdownContext);
}

// node_modules/@cloudscape-design/components/internal/components/tab-trap/index.js
var import_react28 = __toESM(require_react());
function TabTrap({ focusNextCallback, disabled = false }) {
  return import_react28.default.createElement("div", { tabIndex: disabled ? -1 : 0, onFocus: focusNextCallback });
}

// node_modules/@cloudscape-design/components/internal/components/focus-lock/utils.js
var tabbables = [
  "button:enabled",
  "select:enabled",
  "textarea:enabled",
  "input:enabled",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[tabindex]",
  "[contenteditable]",
  "[autofocus]"
].join(",");
function getAllFocusables(container) {
  return Array.prototype.slice.call(container.querySelectorAll(tabbables));
}
function getFocusables(container) {
  return getAllFocusables(container).filter((element) => element.tabIndex !== -1);
}
function getFirstFocusable(container) {
  var _a;
  const focusables = getFocusables(container);
  return (_a = focusables[0]) !== null && _a !== void 0 ? _a : null;
}
function getLastFocusable(container) {
  var _a;
  const focusables = getFocusables(container);
  return (_a = focusables[focusables.length - 1]) !== null && _a !== void 0 ? _a : null;
}

// node_modules/@cloudscape-design/components/internal/components/dropdown/index.js
var DropdownContainer = ({ children: children2, renderWithPortal = false, id, referrerId, open }) => {
  if (renderWithPortal) {
    if (open) {
      return (0, import_react_dom4.createPortal)(import_react29.default.createElement("div", { id, "data-awsui-referrer-id": referrerId }, children2), document.body);
    } else {
      return null;
    }
  } else {
    return import_react29.default.createElement(import_react29.default.Fragment, null, children2);
  }
};
var TransitionContent = ({ state, transitionRef, dropdownClasses, stretchWidth, interior, isRefresh, dropdownRef, verticalContainerRef, expandToViewport, stretchBeyondTriggerWidth, header, children: children2, footer, position, open, onMouseDown, id, role, ariaLabelledby, ariaDescribedby }) => {
  const contentRef = useMergeRefs(dropdownRef, transitionRef);
  return import_react29.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default9.dropdown, dropdownClasses, {
      [styles_css_default9.open]: open,
      [styles_css_default9["with-limited-width"]]: !stretchWidth,
      [styles_css_default9["hide-upper-border"]]: stretchWidth,
      [styles_css_default9.interior]: interior,
      [styles_css_default9.refresh]: isRefresh,
      [styles_css_default9["use-portal"]]: expandToViewport && !interior,
      [styles_css_default9["stretch-beyond-trigger-width"]]: stretchBeyondTriggerWidth
    }), ref: contentRef, id, role, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "data-open": open, "data-animating": state !== "exited", "aria-hidden": !open, style: stretchBeyondTriggerWidth ? { [custom_css_properties_default.dropdownDefaultMaxWidth]: `${defaultMaxDropdownWidth}px` } : {}, onMouseDown },
    import_react29.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default9["dropdown-content-wrapper"], !header && !children2 && styles_css_default9["is-empty"], isRefresh && styles_css_default9.refresh) },
      import_react29.default.createElement(
        "div",
        { ref: verticalContainerRef, className: styles_css_default9["dropdown-content"] },
        import_react29.default.createElement(
          DropdownContextProvider,
          { position },
          header,
          children2,
          footer
        )
      )
    )
  );
};
var Dropdown = ({ children: children2, trigger, open, onDropdownClose, onMouseDown, header, footer, dropdownId, stretchTriggerHeight = false, stretchWidth = true, stretchHeight = false, stretchToTriggerWidth = true, stretchBeyondTriggerWidth = false, expandToViewport = false, preferCenter = false, interior = false, minWidth, scrollable = true, loopFocus = expandToViewport, onFocus, onBlur, contentKey, dropdownContentId, dropdownContentRole, ariaLabelledby, ariaDescribedby }) => {
  const wrapperRef = (0, import_react29.useRef)(null);
  const triggerRef = (0, import_react29.useRef)(null);
  const dropdownRef = (0, import_react29.useRef)(null);
  const dropdownContainerRef = (0, import_react29.useRef)(null);
  const verticalContainerRef = (0, import_react29.useRef)(null);
  const fixedPosition = (0, import_react29.useRef)(null);
  const isRefresh = useVisualRefresh();
  const dropdownClasses = usePortalModeClasses(triggerRef);
  const [position, setPosition] = (0, import_react29.useState)("bottom-right");
  const isMobile = useMobile();
  const setDropdownPosition = (position2, triggerBox, target, verticalContainer) => {
    const entireWidth = !interior && stretchWidth;
    if (!stretchWidth) {
      verticalContainer.style.maxHeight = `${parseInt(position2.height) + 1}px`;
    } else {
      verticalContainer.style.maxHeight = position2.height;
    }
    if (entireWidth && !expandToViewport) {
      if (stretchToTriggerWidth) {
        target.classList.add(styles_css_default9["occupy-entire-width"]);
      }
    } else {
      target.style.width = position2.width;
    }
    if (position2.dropUp && !interior) {
      target.classList.add(styles_css_default9["dropdown-drop-up"]);
      if (!expandToViewport) {
        target.style.bottom = "100%";
      }
    } else {
      target.classList.remove(styles_css_default9["dropdown-drop-up"]);
    }
    target.classList.add(position2.dropLeft ? styles_css_default9["dropdown-drop-left"] : styles_css_default9["dropdown-drop-right"]);
    if (position2.left && position2.left !== "auto") {
      target.style.left = position2.left;
    }
    if (expandToViewport && !interior) {
      target.style.position = "fixed";
      if (position2.dropUp) {
        target.style.bottom = `calc(100% - ${triggerBox.top}px)`;
      } else {
        target.style.top = `${triggerBox.bottom}px`;
      }
      if (position2.dropLeft) {
        target.style.left = `calc(${triggerBox.right}px - ${position2.width})`;
      } else {
        target.style.left = `${triggerBox.left}px`;
      }
      fixedPosition.current = position2;
      return;
    }
    if (interior && isInteriorPosition(position2)) {
      if (position2.dropUp) {
        target.style.bottom = position2.bottom;
      } else {
        target.style.top = position2.top;
      }
      target.style.left = position2.left;
    }
    if (position2.dropUp && position2.dropLeft) {
      setPosition("top-left");
    } else if (position2.dropUp) {
      setPosition("top-right");
    } else if (position2.dropLeft) {
      setPosition("bottom-left");
    } else {
      setPosition("bottom-right");
    }
  };
  const isOutsideDropdown = (element) => (!wrapperRef.current || !wrapperRef.current.contains(element)) && (!dropdownContainerRef.current || !dropdownContainerRef.current.contains(element));
  const focusHandler = (event) => {
    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {
      fireNonCancelableEvent(onFocus, event);
    }
  };
  const blurHandler = (event) => {
    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {
      fireNonCancelableEvent(onBlur, event);
    }
  };
  const fixStretching = () => {
    const classNameToRemove = styles_css_default9["stretch-beyond-trigger-width"];
    if (open && stretchBeyondTriggerWidth && dropdownRef.current && triggerRef.current && dropdownRef.current.classList.contains(classNameToRemove) && !hasEnoughSpaceToStretchBeyondTriggerWidth({
      triggerElement: triggerRef.current,
      dropdownElement: dropdownRef.current,
      desiredMinWidth: minWidth,
      expandToViewport,
      stretchWidth,
      stretchHeight,
      isMobile
    })) {
      dropdownRef.current.classList.remove(classNameToRemove);
    }
  };
  useResizeObserver(() => dropdownRef.current, fixStretching);
  (0, import_react29.useLayoutEffect)(() => {
    const onDropdownOpen = () => {
      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {
        if (scrollable) {
          dropdownRef.current.classList.add(styles_css_default9.nowrap);
        }
        setDropdownPosition(...calculatePosition(dropdownRef.current, triggerRef.current, verticalContainerRef.current, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth, stretchBeyondTriggerWidth), dropdownRef.current, verticalContainerRef.current);
        if (scrollable) {
          dropdownRef.current.classList.remove(styles_css_default9.nowrap);
        }
      }
    };
    onDropdownOpen();
    if (open) {
      window.addEventListener("scroll", onDropdownOpen);
      const timeoutId = setTimeout(() => {
        window.removeEventListener("scroll", onDropdownOpen);
      }, 500);
      return () => {
        clearTimeout(timeoutId);
        window.removeEventListener("scroll", onDropdownOpen);
      };
    }
  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);
  (0, import_react29.useEffect)(() => {
    if (!open) {
      return;
    }
    const clickListener = (e) => {
      var _a, _b;
      if (!((_a = dropdownRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) && !((_b = triggerRef.current) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {
        fireNonCancelableEvent(onDropdownClose);
      }
    };
    window.addEventListener("click", clickListener, true);
    return () => {
      window.removeEventListener("click", clickListener, true);
    };
  }, [open, onDropdownClose]);
  (0, import_react29.useLayoutEffect)(() => {
    if (!expandToViewport || !open) {
      return;
    }
    const updateDropdownPosition = () => {
      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {
        const triggerRect = triggerRef.current.getBoundingClientRect();
        const target = dropdownRef.current;
        if (fixedPosition.current) {
          if (fixedPosition.current.dropUp) {
            dropdownRef.current.style.bottom = `calc(100% - ${triggerRect.top}px)`;
          } else {
            target.style.top = `${triggerRect.bottom}px`;
          }
          if (fixedPosition.current.dropLeft) {
            target.style.left = `calc(${triggerRect.right}px - ${fixedPosition.current.width})`;
          } else {
            target.style.left = `${triggerRect.left}px`;
          }
        }
      }
    };
    updateDropdownPosition();
    window.addEventListener("scroll", updateDropdownPosition, true);
    window.addEventListener("resize", updateDropdownPosition, true);
    return () => {
      window.removeEventListener("scroll", updateDropdownPosition, true);
      window.removeEventListener("resize", updateDropdownPosition, true);
    };
  }, [open, expandToViewport]);
  const referrerId = useUniqueId();
  return import_react29.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default9.root, interior && styles_css_default9.interior, stretchTriggerHeight && styles_css_default9["stretch-trigger-height"]), ref: wrapperRef, onFocus: focusHandler, onBlur: blurHandler },
    import_react29.default.createElement("div", { id: referrerId, className: clsx_m_default(stretchTriggerHeight && styles_css_default9["stretch-trigger-height"]), ref: triggerRef }, trigger),
    import_react29.default.createElement(TabTrap, { focusNextCallback: () => {
      var _a;
      return dropdownRef.current && ((_a = getFirstFocusable(dropdownRef.current)) === null || _a === void 0 ? void 0 : _a.focus());
    }, disabled: !open || !loopFocus }),
    import_react29.default.createElement(
      DropdownContainer,
      { renderWithPortal: expandToViewport && !interior, id: dropdownId, referrerId, open },
      import_react29.default.createElement(Transition2, { in: open !== null && open !== void 0 ? open : false, exit: false }, (state, ref) => import_react29.default.createElement(
        "div",
        { ref: dropdownContainerRef },
        import_react29.default.createElement(TabTrap, { focusNextCallback: () => {
          var _a;
          return triggerRef.current && ((_a = getLastFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());
        }, disabled: !open || !loopFocus }),
        import_react29.default.createElement(TransitionContent, { state, transitionRef: ref, dropdownClasses, open, stretchWidth, interior, header, expandToViewport, stretchBeyondTriggerWidth, footer, onMouseDown, isRefresh, dropdownRef, verticalContainerRef, position, id: dropdownContentId, role: dropdownContentRole, ariaLabelledby, ariaDescribedby }, children2),
        import_react29.default.createElement(TabTrap, { focusNextCallback: () => {
          var _a;
          return triggerRef.current && ((_a = getFirstFocusable(triggerRef.current)) === null || _a === void 0 ? void 0 : _a.focus());
        }, disabled: !open || !loopFocus })
      ))
    )
  );
};
var isInteriorPosition = (position) => position.bottom !== void 0;
var dropdown_default = Dropdown;

// node_modules/@cloudscape-design/components/button-dropdown/items-list.js
var import_react42 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/item-element/index.js
var import_react37 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/utils/utils.js
var isItemGroup = (item) => item && item.items !== void 0;
var isLinkItem = (item) => item && item.href !== void 0;
var getItemTarget = (item) => item.external ? "_blank" : void 0;
function indexIncludes(source, target) {
  for (let index = 0; index < source.length; index++) {
    if (source[index] !== target[index]) {
      return false;
    }
  }
  return true;
}
function indexEquals(left, right) {
  if (left.length !== right.length) {
    return false;
  }
  for (let index = 0; index < left.length; index++) {
    if (left[index] !== right[index]) {
      return false;
    }
  }
  return true;
}

// node_modules/@cloudscape-design/components/button-dropdown/item-element/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/button-dropdown/item-element/styles.scoped.css";
var styles_css_default10 = {
  "item-element": "awsui_item-element_93a1u_1pbdh_93",
  "disabled": "awsui_disabled_93a1u_1pbdh_103",
  "last": "awsui_last_93a1u_1pbdh_110",
  "highlighted": "awsui_highlighted_93a1u_1pbdh_113",
  "variant-icon": "awsui_variant-icon_93a1u_1pbdh_117",
  "variant-inline-icon": "awsui_variant-inline-icon_93a1u_1pbdh_117",
  "variant-normal": "awsui_variant-normal_93a1u_1pbdh_117",
  "variant-primary": "awsui_variant-primary_93a1u_1pbdh_117",
  "is-focused": "awsui_is-focused_93a1u_1pbdh_127",
  "variant-navigation": "awsui_variant-navigation_93a1u_1pbdh_131",
  "first": "awsui_first_93a1u_1pbdh_134",
  "has-category-header": "awsui_has-category-header_93a1u_1pbdh_134",
  "menu-item": "awsui_menu-item_93a1u_1pbdh_148",
  "icon": "awsui_icon_93a1u_1pbdh_165",
  "external-icon": "awsui_external-icon_93a1u_1pbdh_170"
};

// node_modules/@cloudscape-design/components/button-dropdown/tooltip.js
var import_react35 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/arrow.js
var import_react30 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/popover/styles.scoped.css";
var styles_css_default11 = {
  "arrow": "awsui_arrow_xjuzf_nljtu_185",
  "arrow-outer": "awsui_arrow-outer_xjuzf_nljtu_189",
  "arrow-inner": "awsui_arrow-inner_xjuzf_nljtu_189",
  "refresh": "awsui_refresh_xjuzf_nljtu_219",
  "arrow-position-right-top": "awsui_arrow-position-right-top_xjuzf_nljtu_229",
  "arrow-position-right-bottom": "awsui_arrow-position-right-bottom_xjuzf_nljtu_229",
  "arrow-position-left-top": "awsui_arrow-position-left-top_xjuzf_nljtu_232",
  "arrow-position-left-bottom": "awsui_arrow-position-left-bottom_xjuzf_nljtu_232",
  "arrow-position-top-center": "awsui_arrow-position-top-center_xjuzf_nljtu_235",
  "arrow-position-top-right": "awsui_arrow-position-top-right_xjuzf_nljtu_235",
  "arrow-position-top-left": "awsui_arrow-position-top-left_xjuzf_nljtu_235",
  "arrow-position-top-responsive": "awsui_arrow-position-top-responsive_xjuzf_nljtu_235",
  "arrow-position-bottom-center": "awsui_arrow-position-bottom-center_xjuzf_nljtu_238",
  "arrow-position-bottom-right": "awsui_arrow-position-bottom-right_xjuzf_nljtu_238",
  "arrow-position-bottom-left": "awsui_arrow-position-bottom-left_xjuzf_nljtu_238",
  "arrow-position-bottom-responsive": "awsui_arrow-position-bottom-responsive_xjuzf_nljtu_238",
  "body": "awsui_body_xjuzf_nljtu_334",
  "body-overflow-visible": "awsui_body-overflow-visible_xjuzf_nljtu_373",
  "has-dismiss": "awsui_has-dismiss_xjuzf_nljtu_377",
  "dismiss": "awsui_dismiss_xjuzf_nljtu_382",
  "dismiss-control": "awsui_dismiss-control_xjuzf_nljtu_390",
  "header-row": "awsui_header-row_xjuzf_nljtu_394",
  "header": "awsui_header_xjuzf_nljtu_394",
  "content": "awsui_content_xjuzf_nljtu_420",
  "content-overflow-visible": "awsui_content-overflow-visible_xjuzf_nljtu_428",
  "container": "awsui_container_xjuzf_nljtu_524",
  "container-body": "awsui_container-body_xjuzf_nljtu_532",
  "container-body-variant-annotation": "awsui_container-body-variant-annotation_xjuzf_nljtu_575",
  "container-body-size-small": "awsui_container-body-size-small_xjuzf_nljtu_580",
  "fixed-width": "awsui_fixed-width_xjuzf_nljtu_583",
  "container-body-size-medium": "awsui_container-body-size-medium_xjuzf_nljtu_587",
  "container-body-size-large": "awsui_container-body-size-large_xjuzf_nljtu_594",
  "container-arrow": "awsui_container-arrow_xjuzf_nljtu_606",
  "container-arrow-position-right-top": "awsui_container-arrow-position-right-top_xjuzf_nljtu_610",
  "container-arrow-position-right-bottom": "awsui_container-arrow-position-right-bottom_xjuzf_nljtu_610",
  "container-arrow-position-left-top": "awsui_container-arrow-position-left-top_xjuzf_nljtu_622",
  "container-arrow-position-left-bottom": "awsui_container-arrow-position-left-bottom_xjuzf_nljtu_622",
  "container-arrow-position-top-center": "awsui_container-arrow-position-top-center_xjuzf_nljtu_634",
  "container-arrow-position-top-right": "awsui_container-arrow-position-top-right_xjuzf_nljtu_634",
  "container-arrow-position-top-left": "awsui_container-arrow-position-top-left_xjuzf_nljtu_634",
  "container-arrow-position-top-responsive": "awsui_container-arrow-position-top-responsive_xjuzf_nljtu_634",
  "container-arrow-position-bottom-center": "awsui_container-arrow-position-bottom-center_xjuzf_nljtu_650",
  "container-arrow-position-bottom-right": "awsui_container-arrow-position-bottom-right_xjuzf_nljtu_654",
  "container-arrow-position-bottom-left": "awsui_container-arrow-position-bottom-left_xjuzf_nljtu_658",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_xjuzf_nljtu_1",
  "root": "awsui_root_xjuzf_nljtu_798",
  "trigger": "awsui_trigger_xjuzf_nljtu_834",
  "trigger-type-text": "awsui_trigger-type-text_xjuzf_nljtu_841",
  "trigger-inner-text": "awsui_trigger-inner-text_xjuzf_nljtu_876",
  "popover-content": "awsui_popover-content_xjuzf_nljtu_880"
};

// node_modules/@cloudscape-design/components/popover/arrow.js
var Arrow = (props) => {
  const isVisualRefresh = useVisualRefresh();
  return import_react30.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default11.arrow, props.position && styles_css_default11[`arrow-position-${props.position}`]) },
    import_react30.default.createElement("div", { className: styles_css_default11["arrow-outer"] }),
    import_react30.default.createElement("div", { className: clsx_m_default(styles_css_default11["arrow-inner"], isVisualRefresh && styles_css_default11.refresh) })
  );
};
var arrow_default = import_react30.default.memo(Arrow);

// node_modules/@cloudscape-design/components/popover/container.js
var import_react32 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/use-popover-position.js
var import_react31 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/utils/positions.js
var ARROW_OFFSET = 12;
var PRIORITY_MAPPING = {
  top: [
    "top-center",
    "top-right",
    "top-left",
    "bottom-center",
    "bottom-right",
    "bottom-left",
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom"
  ],
  bottom: [
    "bottom-center",
    "bottom-right",
    "bottom-left",
    "top-center",
    "top-right",
    "top-left",
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom"
  ],
  left: [
    "left-top",
    "left-bottom",
    "right-top",
    "right-bottom",
    "bottom-center",
    "top-center",
    "bottom-left",
    "top-left",
    "bottom-right",
    "top-right"
  ],
  right: [
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom",
    "bottom-center",
    "top-center",
    "bottom-right",
    "top-right",
    "bottom-left",
    "top-left"
  ]
};
var RECTANGLE_CALCULATIONS = {
  "top-center": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top - body.height - arrow.height,
      left: trigger.left + trigger.width / 2 - body.width / 2,
      width: body.width,
      height: body.height
    };
  },
  "top-right": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top - body.height - arrow.height,
      left: trigger.left + trigger.width / 2 - ARROW_OFFSET - arrow.width / 2,
      width: body.width,
      height: body.height
    };
  },
  "top-left": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top - body.height - arrow.height,
      left: trigger.left + trigger.width / 2 + ARROW_OFFSET + arrow.width / 2 - body.width,
      width: body.width,
      height: body.height
    };
  },
  "bottom-center": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height + arrow.height,
      left: trigger.left + trigger.width / 2 - body.width / 2,
      width: body.width,
      height: body.height
    };
  },
  "bottom-right": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height + arrow.height,
      left: trigger.left + trigger.width / 2 - ARROW_OFFSET - arrow.width / 2,
      width: body.width,
      height: body.height
    };
  },
  "bottom-left": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height + arrow.height,
      left: trigger.left + trigger.width / 2 + ARROW_OFFSET + arrow.width / 2 - body.width,
      width: body.width,
      height: body.height
    };
  },
  "right-top": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,
      left: trigger.left + trigger.width + arrow.height,
      width: body.width,
      height: body.height
    };
  },
  "right-bottom": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,
      left: trigger.left + trigger.width + arrow.height,
      width: body.width,
      height: body.height
    };
  },
  "left-top": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,
      left: trigger.left - body.width - arrow.height,
      width: body.width,
      height: body.height
    };
  },
  "left-bottom": ({ body, trigger, arrow }) => {
    return {
      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,
      left: trigger.left - body.width - arrow.height,
      width: body.width,
      height: body.height
    };
  }
};
function fitIntoContainer(inner, outer) {
  let { left, width, top, height } = inner;
  if (left < outer.left) {
    width = left + width - outer.left;
    left = outer.left;
  } else if (left + width > outer.left + outer.width) {
    width = outer.left + outer.width - left;
  }
  if (top < outer.top) {
    height = top + height - outer.top;
    top = outer.top;
  } else if (top + height > outer.top + outer.height) {
    height = outer.top + outer.height - top;
  }
  return { left, width, top, height };
}
function getTallestRect(rect1, rect2) {
  return rect1.height >= rect2.height ? rect1 : rect2;
}
function getIntersection(rectangles) {
  let boundingBox = null;
  for (const currentRect of rectangles) {
    if (!boundingBox) {
      boundingBox = currentRect;
      continue;
    }
    const left = Math.max(boundingBox.left, currentRect.left);
    const top = Math.max(boundingBox.top, currentRect.top);
    const right = Math.min(boundingBox.left + boundingBox.width, currentRect.left + currentRect.width);
    const bottom = Math.min(boundingBox.top + boundingBox.height, currentRect.top + currentRect.height);
    if (right < left || bottom < top) {
      return null;
    }
    boundingBox = {
      left,
      top,
      width: right - left,
      height: bottom - top
    };
  }
  return boundingBox;
}
function calculatePosition2({
  preferredPosition,
  fixedInternalPosition,
  trigger,
  arrow,
  body,
  container,
  viewport,
  // the popover is only bound by the viewport if it is rendered in a portal
  renderWithPortal,
  allowVerticalOverflow
}) {
  let bestOption = null;
  const preferredInternalPositions = fixedInternalPosition ? [fixedInternalPosition] : PRIORITY_MAPPING[preferredPosition];
  for (const internalPosition2 of preferredInternalPositions) {
    const rect2 = RECTANGLE_CALCULATIONS[internalPosition2]({ body, trigger, arrow });
    const visibleArea = renderWithPortal ? getIntersection([rect2, viewport]) : getIntersection([rect2, viewport, container]);
    const fitsWithoutOverflow = visibleArea && visibleArea.width === body.width && visibleArea.height === body.height;
    if (fitsWithoutOverflow) {
      return { internalPosition: internalPosition2, rect: rect2 };
    }
    const newOption = { rect: rect2, internalPosition: internalPosition2, visibleArea };
    bestOption = getBestOption(newOption, bestOption);
  }
  const internalPosition = (bestOption === null || bestOption === void 0 ? void 0 : bestOption.internalPosition) || "right-top";
  const rect = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });
  const tallestBoundingContainer = getTallestRect(viewport, container);
  const boundingContainer = allowVerticalOverflow && isTopOrBottom(internalPosition) ? {
    top: tallestBoundingContainer.top,
    height: tallestBoundingContainer.height,
    left: viewport.left,
    width: viewport.width
  } : viewport;
  const optimizedRect = fitIntoContainer(rect, boundingContainer);
  const scrollable = optimizedRect.height < rect.height;
  return { internalPosition, rect: optimizedRect, scrollable };
}
function getBestOption(option1, option2) {
  if (!(option2 === null || option2 === void 0 ? void 0 : option2.visibleArea)) {
    return option1;
  }
  if (!option1.visibleArea) {
    return option2;
  }
  if (option1.visibleArea.width === option2.visibleArea.width) {
    return option1.visibleArea.height > option2.visibleArea.height ? option1 : option2;
  }
  return option1.visibleArea.width > option2.visibleArea.width ? option1 : option2;
}
function getOffsetDimensions(element) {
  return { offsetHeight: element.offsetHeight, offsetWidth: element.offsetWidth };
}
function getDimensions(element) {
  const computedStyle = getComputedStyle(element);
  return {
    width: parseFloat(computedStyle.width),
    height: parseFloat(computedStyle.height)
  };
}
function isTopOrBottom(internalPosition) {
  return ["top", "bottom"].includes(internalPosition.split("-")[0]);
}

// node_modules/@cloudscape-design/components/popover/use-popover-position.js
function usePopoverPosition({ popoverRef, bodyRef, arrowRef, trackRef, contentRef, allowScrollToFit, allowVerticalOverflow, preferredPosition, renderWithPortal, keepPosition }) {
  const previousInternalPositionRef = (0, import_react31.useRef)(null);
  const [popoverStyle, setPopoverStyle] = (0, import_react31.useState)({});
  const [internalPosition, setInternalPosition] = (0, import_react31.useState)(null);
  const positionHandlerRef = (0, import_react31.useRef)(() => {
  });
  const updatePositionHandler = (0, import_react31.useCallback)((onContentResize = false) => {
    var _a;
    if (!trackRef.current || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {
      return;
    }
    const popover = popoverRef.current;
    const body = bodyRef.current;
    const arrow = arrowRef.current;
    const document2 = popover.ownerDocument;
    const track = trackRef.current;
    const { offsetWidth, offsetHeight } = getOffsetDimensions(popover);
    if (offsetWidth === 0 || offsetHeight === 0 || !nodeContains(document2.body, track)) {
      return;
    }
    const prevTop = popover.style.top;
    const prevLeft = popover.style.left;
    popover.style.top = "0";
    popover.style.left = "0";
    body.style.maxHeight = "";
    body.style.overflowX = "";
    body.style.overflowY = "";
    const viewportRect = getViewportRect(document2.defaultView);
    const trackRect = track.getBoundingClientRect();
    const arrowRect = getDimensions(arrow);
    const containingBlock = getContainingBlock(popover);
    const containingBlockRect = containingBlock ? containingBlock.getBoundingClientRect() : viewportRect;
    const bodyBorderWidth = getBorderWidth(body);
    const contentRect = contentRef.current.getBoundingClientRect();
    const contentBoundingBox = {
      width: contentRect.width + 2 * bodyBorderWidth,
      height: contentRect.height + 2 * bodyBorderWidth
    };
    const shouldKeepPosition = keepPosition && onContentResize && !!previousInternalPositionRef.current;
    const fixedInternalPosition = (_a = shouldKeepPosition && previousInternalPositionRef.current) !== null && _a !== void 0 ? _a : void 0;
    const { scrollable, internalPosition: newInternalPosition, rect } = calculatePosition2({
      preferredPosition,
      fixedInternalPosition,
      trigger: trackRect,
      arrow: arrowRect,
      body: contentBoundingBox,
      container: containingBlock ? containingBlockRect : getDocumentRect(document2),
      viewport: viewportRect,
      renderWithPortal,
      allowVerticalOverflow
    });
    const popoverOffset = toRelativePosition(rect, containingBlockRect);
    const trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));
    popover.style.top = prevTop;
    popover.style.left = prevLeft;
    if (scrollable) {
      body.style.maxHeight = rect.height + "px";
      body.style.overflowX = "hidden";
      body.style.overflowY = "auto";
    }
    previousInternalPositionRef.current = newInternalPosition;
    setInternalPosition(newInternalPosition);
    const shouldScroll = allowScrollToFit && !shouldKeepPosition;
    const top = shouldScroll ? popoverOffset.top + calculateScroll(rect) : popoverOffset.top;
    setPopoverStyle({ top, left: popoverOffset.left });
    if (shouldScroll) {
      const scrollableParent = getFirstScrollableParent(popover);
      scrollRectangleIntoView(rect, scrollableParent);
    }
    positionHandlerRef.current = () => {
      const newTrackOffset = toRelativePosition(track.getBoundingClientRect(), containingBlock ? containingBlock.getBoundingClientRect() : viewportRect);
      setPopoverStyle({
        top: newTrackOffset.top + trackRelativeOffset.top,
        left: newTrackOffset.left + trackRelativeOffset.left
      });
    };
  }, [
    trackRef,
    popoverRef,
    bodyRef,
    contentRef,
    arrowRef,
    keepPosition,
    allowScrollToFit,
    preferredPosition,
    renderWithPortal,
    allowVerticalOverflow
  ]);
  return { updatePositionHandler, popoverStyle, internalPosition, positionHandlerRef };
}
function getBorderWidth(element) {
  return parseInt(getComputedStyle(element).borderWidth) || 0;
}
function toRelativePosition(element, parent) {
  return {
    top: element.top - parent.top,
    left: element.left - parent.left
  };
}
function getViewportRect(window2) {
  return {
    top: 0,
    left: 0,
    width: window2.innerWidth,
    height: window2.innerHeight
  };
}
function getDocumentRect(document2) {
  const { top, left } = document2.documentElement.getBoundingClientRect();
  return {
    top,
    left,
    width: document2.documentElement.scrollWidth,
    height: document2.documentElement.scrollHeight
  };
}

// node_modules/@cloudscape-design/components/popover/container.js
function PopoverContainer({ position, trackRef, trackKey, arrow, children: children2, zIndex, renderWithPortal, size, fixedWidth, variant, keepPosition, allowScrollToFit, allowVerticalOverflow }) {
  const bodyRef = (0, import_react32.useRef)(null);
  const contentRef = (0, import_react32.useRef)(null);
  const popoverRef = (0, import_react32.useRef)(null);
  const arrowRef = (0, import_react32.useRef)(null);
  const isRefresh = useVisualRefresh();
  const { updatePositionHandler, popoverStyle, internalPosition, positionHandlerRef } = usePopoverPosition({
    popoverRef,
    bodyRef,
    arrowRef,
    trackRef,
    contentRef,
    allowScrollToFit,
    allowVerticalOverflow,
    preferredPosition: position,
    renderWithPortal,
    keepPosition
  });
  (0, import_react32.useLayoutEffect)(() => {
    updatePositionHandler();
  }, [updatePositionHandler, trackKey]);
  useResizeObserver(contentRef, () => {
    updatePositionHandler(true);
  });
  (0, import_react32.useLayoutEffect)(() => {
    const onClick = (event) => {
      if (
        // Do not update position if keepPosition is true.
        keepPosition || // If the click was on the trigger, this will make the popover appear or disappear,
        // so no need to update its position either in this case.
        nodeContains(trackRef.current, event.target)
      ) {
        return;
      }
      requestAnimationFrame(() => {
        updatePositionHandler();
      });
    };
    const updatePositionOnResize = () => requestAnimationFrame(() => updatePositionHandler());
    const refreshPosition = () => requestAnimationFrame(() => positionHandlerRef.current());
    window.addEventListener("click", onClick);
    window.addEventListener("resize", updatePositionOnResize);
    window.addEventListener("scroll", refreshPosition, true);
    return () => {
      window.removeEventListener("click", onClick);
      window.removeEventListener("resize", updatePositionOnResize);
      window.removeEventListener("scroll", refreshPosition, true);
    };
  }, [keepPosition, positionHandlerRef, trackRef, updatePositionHandler]);
  return import_react32.default.createElement(
    "div",
    { ref: popoverRef, style: Object.assign(Object.assign({}, popoverStyle), { zIndex }), className: clsx_m_default(styles_css_default11.container, isRefresh && styles_css_default11.refresh) },
    import_react32.default.createElement("div", { ref: arrowRef, className: clsx_m_default(styles_css_default11[`container-arrow`], styles_css_default11[`container-arrow-position-${internalPosition}`]), "aria-hidden": true }, arrow(internalPosition)),
    import_react32.default.createElement(
      "div",
      { ref: bodyRef, className: clsx_m_default(styles_css_default11["container-body"], styles_css_default11[`container-body-size-${size}`], {
        [styles_css_default11["fixed-width"]]: fixedWidth,
        [styles_css_default11[`container-body-variant-${variant}`]]: variant
      }) },
      import_react32.default.createElement("div", { ref: contentRef }, children2)
    )
  );
}

// node_modules/@cloudscape-design/components/popover/body.js
var import_react34 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
var import_react33 = __toESM(require_react());
function FocusLock({ className, disabled, autoFocus, restoreFocus, children: children2 }, ref) {
  const returnFocusToRef = (0, import_react33.useRef)(null);
  const containerRef = (0, import_react33.useRef)(null);
  const focusFirst = () => {
    var _a;
    if (containerRef.current) {
      (_a = getFirstFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  const focusLast = () => {
    var _a;
    if (containerRef.current) {
      (_a = getLastFocusable(containerRef.current)) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  (0, import_react33.useEffect)(() => {
    if (autoFocus && !disabled) {
      returnFocusToRef.current = document.activeElement;
      focusFirst();
    }
  }, [autoFocus, disabled]);
  const [previouslyDisabled, setPreviouslyDisabled] = (0, import_react33.useState)(!!disabled);
  (0, import_react33.useEffect)(() => {
    var _a;
    if (previouslyDisabled !== !!disabled) {
      setPreviouslyDisabled(!!disabled);
      if (restoreFocus && disabled) {
        (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        returnFocusToRef.current = null;
      }
    }
  }, [previouslyDisabled, disabled, restoreFocus]);
  const restoreFocusHandler = (0, import_react33.useCallback)((elem) => {
    var _a;
    if (elem === null && restoreFocus) {
      (_a = returnFocusToRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      returnFocusToRef.current = null;
    }
  }, [restoreFocus]);
  (0, import_react33.useImperativeHandle)(ref, () => ({ focusFirst }));
  const mergedRef = useMergeRefs(containerRef, restoreFocusHandler);
  return import_react33.default.createElement(
    import_react33.default.Fragment,
    null,
    import_react33.default.createElement(TabTrap, { disabled, focusNextCallback: focusLast }),
    import_react33.default.createElement("div", { className, ref: mergedRef }, children2),
    import_react33.default.createElement(TabTrap, { disabled, focusNextCallback: focusFirst })
  );
}
var focus_lock_default = import_react33.default.forwardRef(FocusLock);

// node_modules/@cloudscape-design/components/popover/body.js
function PopoverBody({ dismissButton: showDismissButton, dismissAriaLabel, header, children: children2, onDismiss, variant, overflowVisible, className, ariaLabelledby }) {
  const i18n = useInternalI18n("popover");
  const labelledById = useUniqueId("awsui-popover-");
  const dismissButtonFocused = (0, import_react34.useRef)(false);
  const dismissButtonRef = (0, import_react34.useRef)(null);
  const onKeyDown = (0, import_react34.useCallback)((event) => {
    if (event.keyCode === KeyCode.escape) {
      event.stopPropagation();
      onDismiss();
    }
  }, [onDismiss]);
  (0, import_react34.useEffect)(() => {
    var _a;
    if (showDismissButton && !dismissButtonFocused.current) {
      (_a = dismissButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
    }
    dismissButtonFocused.current = showDismissButton;
  }, [showDismissButton]);
  const dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && import_react34.default.createElement(
    "div",
    { className: styles_css_default11.dismiss },
    import_react34.default.createElement(InternalButton, { variant: "icon", formAction: "none", iconName: "close", className: styles_css_default11["dismiss-control"], ariaLabel: i18n("dismissAriaLabel", dismissAriaLabel), onClick: () => onDismiss(), ref: dismissButtonRef })
  );
  const isDialog = showDismissButton;
  const shouldTrapFocus = showDismissButton && variant !== "annotation";
  const dialogProps = isDialog ? {
    role: "dialog",
    "aria-modal": shouldTrapFocus ? true : void 0,
    "aria-labelledby": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : header ? labelledById : void 0
  } : {};
  return import_react34.default.createElement(
    "div",
    Object.assign({ className: clsx_m_default(styles_css_default11.body, className, {
      [styles_css_default11["body-overflow-visible"]]: overflowVisible === "both"
    }), onKeyDown }, dialogProps),
    import_react34.default.createElement(
      focus_lock_default,
      { disabled: !shouldTrapFocus, autoFocus: false },
      header && import_react34.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default11["header-row"], showDismissButton && styles_css_default11["has-dismiss"]) },
        dismissButton,
        import_react34.default.createElement(
          "div",
          { className: styles_css_default11.header, id: labelledById },
          import_react34.default.createElement("h2", null, header)
        )
      ),
      import_react34.default.createElement(
        "div",
        { className: !header && showDismissButton ? styles_css_default11["has-dismiss"] : void 0 },
        !header && dismissButton,
        import_react34.default.createElement("div", { className: clsx_m_default(styles_css_default11.content, { [styles_css_default11["content-overflow-visible"]]: !!overflowVisible }) }, children2)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/button-dropdown/tooltip.js
var DEFAULT_OPEN_TIMEOUT_IN_MS = 120;
function Tooltip({ children: children2, content, position = "right" }) {
  const ref = (0, import_react35.useRef)(null);
  const isReducedMotion = useReducedMotion(ref);
  const { open, triggerProps } = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS);
  const portalClasses = usePortalModeClasses(ref);
  return import_react35.default.createElement(
    "span",
    Object.assign({ ref }, triggerProps),
    children2,
    open && import_react35.default.createElement(
      Portal,
      null,
      import_react35.default.createElement(
        "span",
        { className: portalClasses },
        import_react35.default.createElement(
          PopoverContainer,
          { size: "small", fixedWidth: false, position, trackRef: ref, arrow: (position2) => import_react35.default.createElement(arrow_default, { position: position2 }), renderWithPortal: true, zIndex: 7e3 },
          import_react35.default.createElement(
            PopoverBody,
            { dismissButton: false, dismissAriaLabel: void 0, header: null, onDismiss: () => {
            }, overflowVisible: "both" },
            import_react35.default.createElement("span", { "data-testid": "button-dropdown-disabled-reason", role: "tooltip" }, content)
          )
        )
      )
    )
  );
}
function useTooltipOpen(timeout2) {
  const handle = (0, import_react35.useRef)();
  const [isOpen, setIsOpen] = (0, import_react35.useState)(false);
  const close = () => {
    clearTimeout(handle.current);
    setIsOpen(false);
  };
  const open = () => setIsOpen(true);
  const openDelayed = () => {
    handle.current = setTimeout(open, timeout2);
  };
  const onKeyDown = (e) => {
    if (isOpen && isEscape(e.key)) {
      e.preventDefault();
      e.stopPropagation();
      close();
    }
  };
  const onFocus = openDelayed;
  const onBlur = close;
  return {
    open: isOpen,
    triggerProps: {
      onBlur,
      onFocus,
      onKeyDown
    }
  };
}
var isEscape = (key) => key === "Escape" || key === "Esc";

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-hidden-description.js
var import_react36 = __toESM(require_react());
function useHiddenDescription(description) {
  const id = useUniqueId();
  return {
    targetProps: {
      "aria-describedby": description ? id : void 0
    },
    descriptionEl: description ? import_react36.default.createElement("span", { id, hidden: true }, description) : null
  };
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/menu-item.js
var getMenuItemProps = ({ disabled, parent, expanded }) => ({
  role: "menuitem",
  "aria-disabled": disabled ? "true" : void 0,
  "aria-haspopup": parent ? "true" : void 0,
  "aria-expanded": expanded ? "true" : parent ? "false" : void 0
});

// node_modules/@cloudscape-design/components/button-dropdown/item-element/index.js
var ItemElement = ({ item, disabled, onItemActivate, highlighted, highlightItem, first = false, last, hasCategoryHeader, isKeyboardHighlighted = false, variant = "normal" }) => {
  const isLink = isLinkItem(item);
  const onClick = (event) => {
    event.stopPropagation();
    if (!isLink) {
      event.preventDefault();
    }
    if (!disabled) {
      onItemActivate(item, event);
    }
  };
  const onHover = () => {
    highlightItem(item);
  };
  return import_react37.default.createElement(
    "li",
    { className: clsx_m_default(styles_css_default10["item-element"], styles_css_default10[`variant-${variant}`], {
      [styles_css_default10.highlighted]: highlighted,
      [styles_css_default10.disabled]: disabled,
      [styles_css_default10.first]: first,
      [styles_css_default10.last]: last,
      [styles_css_default10["has-category-header"]]: hasCategoryHeader,
      [styles_css_default10["is-focused"]]: isKeyboardHighlighted
    }), role: "presentation", "data-testid": item.id, "data-description": item.description, onClick, onMouseEnter: onHover, onTouchStart: onHover },
    import_react37.default.createElement(MenuItem, { item, disabled, highlighted })
  );
};
function MenuItem({ item, disabled, highlighted }) {
  const menuItemRef = (0, import_react37.useRef)(null);
  (0, import_react37.useEffect)(() => {
    if (highlighted && menuItemRef.current) {
      menuItemRef.current.focus();
    }
  }, [highlighted]);
  const isDisabledWithReason = disabled && item.disabledReason;
  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);
  const menuItemProps = Object.assign(Object.assign({
    className: styles_css_default10["menu-item"],
    lang: item.lang,
    ref: menuItemRef,
    // We are using the roving tabindex technique to manage the focus state of the dropdown.
    // The current element will always have tabindex=0 which means that it can be tabbed to,
    // while all other items have tabindex=-1 so we can focus them when necessary.
    tabIndex: highlighted ? 0 : -1
  }, getMenuItemProps({ disabled })), isDisabledWithReason ? targetProps : {});
  const menuItem = isLinkItem(item) ? import_react37.default.createElement(
    "a",
    Object.assign({}, menuItemProps, { href: !disabled ? item.href : void 0, target: getItemTarget(item), rel: item.external ? "noopener noreferrer" : void 0 }),
    import_react37.default.createElement(MenuItemContent, { item, disabled })
  ) : import_react37.default.createElement(
    "span",
    Object.assign({}, menuItemProps),
    import_react37.default.createElement(MenuItemContent, { item, disabled })
  );
  const { position } = useDropdownContext();
  const tooltipPosition = position === "bottom-left" || position === "top-left" ? "left" : "right";
  return isDisabledWithReason ? import_react37.default.createElement(
    Tooltip,
    { content: item.disabledReason, position: tooltipPosition },
    menuItem,
    descriptionEl
  ) : menuItem;
}
var MenuItemContent = ({ item, disabled }) => {
  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);
  const hasExternal = isLinkItem(item) && item.external;
  return import_react37.default.createElement(
    import_react37.default.Fragment,
    null,
    hasIcon && import_react37.default.createElement(MenuItemIcon, { name: item.iconName, url: item.iconUrl, svg: item.iconSvg, alt: item.iconAlt, badge: item.badge }),
    " ",
    item.text,
    " ",
    hasExternal && import_react37.default.createElement(ExternalIcon, { disabled, ariaLabel: item.externalIconAriaLabel })
  );
};
var MenuItemIcon = (props) => import_react37.default.createElement(
  "span",
  { className: styles_css_default10.icon },
  import_react37.default.createElement(internal_default, Object.assign({}, props))
);
var ExternalIcon = ({ disabled, ariaLabel }) => {
  const icon = import_react37.default.createElement(internal_default, { variant: disabled ? "disabled" : "normal", name: "external" });
  return import_react37.default.createElement("span", { className: styles_css_default10["external-icon"], role: ariaLabel ? "img" : void 0, "aria-label": ariaLabel }, icon);
};
var item_element_default = ItemElement;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/expandable-category-element.js
var import_react38 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/button-dropdown/category-elements/styles.scoped.css";
var styles_css_default12 = {
  "header": "awsui_header_16mm3_q0qrm_93",
  "disabled": "awsui_disabled_16mm3_q0qrm_108",
  "expandable-header": "awsui_expandable-header_16mm3_q0qrm_112",
  "rolled-down": "awsui_rolled-down_16mm3_q0qrm_123",
  "highlighted": "awsui_highlighted_16mm3_q0qrm_126",
  "is-focused": "awsui_is-focused_16mm3_q0qrm_139",
  "variant-navigation": "awsui_variant-navigation_16mm3_q0qrm_143",
  "category": "awsui_category_16mm3_q0qrm_155",
  "expandable": "awsui_expandable_16mm3_q0qrm_112",
  "expand-icon": "awsui_expand-icon_16mm3_q0qrm_176",
  "expand-icon-up": "awsui_expand-icon-up_16mm3_q0qrm_183",
  "expand-icon-right": "awsui_expand-icon-right_16mm3_q0qrm_186",
  "items-list-container": "awsui_items-list-container_16mm3_q0qrm_200"
};

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/expandable-category-element.js
var ExpandableCategoryElement = ({ item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled, expandToViewport, variant }) => {
  const highlighted = isHighlighted(item);
  const expanded = isExpanded(item);
  const isKeyboardHighlighted = isKeyboardHighlight(item);
  const triggerRef = import_react38.default.useRef(null);
  const ref = (0, import_react38.useRef)(null);
  (0, import_react38.useEffect)(() => {
    if (triggerRef.current && highlighted && !expanded) {
      triggerRef.current.focus();
    }
  }, [expanded, highlighted]);
  const onClick = (event) => {
    var _a;
    if (!disabled) {
      event.preventDefault();
      onGroupToggle(item, event);
      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }
  };
  const onHover = () => {
    highlightItem(item);
  };
  const isDisabledWithReason = !!item.disabledReason && item.disabled;
  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);
  const trigger = item.text && import_react38.default.createElement(
    "span",
    Object.assign({
      className: clsx_m_default(styles_css_default12.header, styles_css_default12["expandable-header"], styles_css_default12[`variant-${variant}`], {
        [styles_css_default12.disabled]: disabled,
        [styles_css_default12.highlighted]: highlighted,
        [styles_css_default12["is-focused"]]: isKeyboardHighlighted
      }),
      // We are using the roving tabindex technique to manage the focus state of the dropdown.
      // The current element will always have tabindex=0 which means that it can be tabbed to,
      // while all other items have tabindex=-1 so we can focus them when necessary.
      tabIndex: highlighted ? 0 : -1,
      ref: triggerRef
    }, getMenuItemProps({ parent: true, expanded, disabled }), isDisabledWithReason ? targetProps : {}),
    item.text,
    import_react38.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default12["expand-icon"], styles_css_default12["expand-icon-right"]) },
      import_react38.default.createElement(internal_default, { name: "caret-down-filled" })
    )
  );
  let content;
  if (isDisabledWithReason) {
    content = import_react38.default.createElement(
      Tooltip,
      { content: item.disabledReason },
      trigger,
      descriptionEl
    );
  } else if (disabled) {
    content = trigger;
  } else {
    content = import_react38.default.createElement(dropdown_default, { open: expanded, stretchWidth: false, interior: true, expandToViewport, trigger }, item.items && expanded && import_react38.default.createElement(
      "ul",
      { role: "menu", "aria-label": item.text, className: clsx_m_default(styles_css_default12["items-list-container"]) },
      import_react38.default.createElement(ItemsList, { items: item.items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, variant })
    ));
  }
  return import_react38.default.createElement("li", { className: clsx_m_default(styles_css_default12.category, styles_css_default12[`variant-${variant}`], styles_css_default12.expandable, {
    [styles_css_default12.expanded]: expanded,
    [styles_css_default12.disabled]: disabled,
    [styles_css_default12.highlighted]: highlighted
  }), role: "presentation", "data-testid": item.id, ref, onClick, onMouseEnter: onHover, onTouchStart: onHover }, content);
};
var expandable_category_element_default = ExpandableCategoryElement;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/category-element.js
var import_react39 = __toESM(require_react());
var CategoryElement = ({ item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled, variant }) => {
  return import_react39.default.createElement(
    "li",
    { className: clsx_m_default(styles_css_default12.category, styles_css_default12[`variant-${variant}`], disabled && styles_css_default12.disabled), role: "presentation", "aria-disabled": disabled ? "true" : void 0 },
    item.text && import_react39.default.createElement("p", { className: clsx_m_default(styles_css_default12.header, { [styles_css_default12.disabled]: disabled }), "aria-hidden": "true" }, item.text),
    import_react39.default.createElement("ul", { className: clsx_m_default(styles_css_default12["items-list-container"]), role: "group", "aria-label": item.text }, item.items && import_react39.default.createElement(ItemsList, { items: item.items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, categoryDisabled: disabled, hasCategoryHeader: !!item.text, variant }))
  );
};
var category_element_default = CategoryElement;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/mobile-expandable-category-element.js
var import_react41 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/mobile-expandable-group.js
var import_react40 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.scoped.css";
var styles_css_default13 = {
  "root": "awsui_root_14cnr_1f1lr_93",
  "trigger": "awsui_trigger_14cnr_1f1lr_130",
  "dropdown": "awsui_dropdown_14cnr_1f1lr_133",
  "nowrap": "awsui_nowrap_14cnr_1f1lr_144",
  "open": "awsui_open_14cnr_1f1lr_147"
};

// node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/mobile-expandable-group.js
var MobileExpandableGroup = ({ children: children2, trigger, open }) => {
  return import_react40.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default13.root) },
    import_react40.default.createElement("div", { className: styles_css_default13.trigger }, trigger),
    import_react40.default.createElement("div", { className: clsx_m_default(styles_css_default13.dropdown, { [styles_css_default13.open]: open }), "data-open": open }, children2)
  );
};
var mobile_expandable_group_default = MobileExpandableGroup;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/mobile-expandable-category-element.js
var MobileExpandableCategoryElement = ({ item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled, variant }) => {
  const highlighted = isHighlighted(item);
  const expanded = isExpanded(item);
  const isKeyboardHighlighted = isKeyboardHighlight(item);
  const triggerRef = import_react41.default.useRef(null);
  (0, import_react41.useEffect)(() => {
    if (triggerRef.current && highlighted && !expanded) {
      triggerRef.current.focus();
    }
  }, [expanded, highlighted]);
  const onClick = (e) => {
    if (!disabled) {
      e.preventDefault();
      onGroupToggle(item, e);
    }
  };
  const onHover = () => {
    highlightItem(item);
  };
  const isDisabledWithReason = !!item.disabledReason && item.disabled;
  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);
  const trigger = item.text && import_react41.default.createElement(
    "span",
    Object.assign({
      className: clsx_m_default(styles_css_default12.header, styles_css_default12["expandable-header"], styles_css_default12[`variant-${variant}`], {
        [styles_css_default12.highlighted]: highlighted,
        [styles_css_default12["rolled-down"]]: expanded,
        [styles_css_default12.disabled]: disabled,
        [styles_css_default12["is-focused"]]: isKeyboardHighlighted
      }),
      // We are using the roving tabindex technique to manage the focus state of the dropdown.
      // The current element will always have tabindex=0 which means that it can be tabbed to,
      // while all other items have tabindex=-1 so we can focus them when necessary.
      tabIndex: highlighted ? 0 : -1,
      ref: triggerRef
    }, getMenuItemProps({ parent: true, disabled, expanded }), isDisabledWithReason ? targetProps : {}),
    item.text,
    import_react41.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default12["expand-icon"], {
        [styles_css_default12["expand-icon-up"]]: expanded
      }) },
      import_react41.default.createElement(internal_default, { name: "caret-down-filled" })
    )
  );
  let content;
  if (isDisabledWithReason) {
    content = import_react41.default.createElement(
      import_react41.default.Fragment,
      null,
      descriptionEl,
      import_react41.default.createElement(Tooltip, { content: item.disabledReason }, trigger)
    );
  } else if (disabled) {
    content = trigger;
  } else {
    content = import_react41.default.createElement(mobile_expandable_group_default, { open: expanded, trigger }, item.items && expanded && import_react41.default.createElement(
      "ul",
      { role: "menu", "aria-label": item.text, className: clsx_m_default(styles_css_default12["items-list-container"]) },
      import_react41.default.createElement(ItemsList, { items: item.items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, hasCategoryHeader: true, variant })
    ));
  }
  return import_react41.default.createElement("li", { className: clsx_m_default(styles_css_default12.category, styles_css_default12[`variant-${variant}`], styles_css_default12.expandable, {
    [styles_css_default12.expanded]: expanded,
    [styles_css_default12.disabled]: disabled,
    [styles_css_default12.highlighted]: highlighted || expanded,
    [styles_css_default12.expandable]: true
  }), role: "presentation", onClick, onMouseEnter: onHover, onTouchStart: onHover, "data-testid": item.id }, content);
};
var mobile_expandable_category_element_default = MobileExpandableCategoryElement;

// node_modules/@cloudscape-design/components/button-dropdown/items-list.js
function ItemsList({ items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, categoryDisabled = false, hasExpandableGroups = false, hasCategoryHeader = false, expandToViewport = false, variant = "normal" }) {
  const isMobile = useMobile();
  const elements = items.map((item, index) => {
    var _a, _b, _c, _d;
    if (!isItemGroup(item)) {
      return import_react42.default.createElement(item_element_default, { key: index, item, onItemActivate, disabled: (_a = item.disabled) !== null && _a !== void 0 ? _a : categoryDisabled, highlighted: isHighlighted(item), isKeyboardHighlighted: isKeyboardHighlight(item), highlightItem, first: index === 0 || isItemGroup(items[index - 1]), last: index === items.length - 1 || isItemGroup(items[index + 1]), hasCategoryHeader, variant });
    }
    if (hasExpandableGroups) {
      return item.text ? isMobile ? import_react42.default.createElement(mobile_expandable_category_element_default, { key: index, item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled: (_b = item.disabled) !== null && _b !== void 0 ? _b : false, variant }) : import_react42.default.createElement(expandable_category_element_default, { key: index, item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled: (_c = item.disabled) !== null && _c !== void 0 ? _c : false, expandToViewport, variant }) : null;
    }
    return import_react42.default.createElement(category_element_default, { key: index, item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled: (_d = item.disabled) !== null && _d !== void 0 ? _d : false, variant });
  });
  return import_react42.default.createElement(import_react42.default.Fragment, null, elements);
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-button-dropdown.js
init_tslib_es6();

// node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-open-state.js
var import_react43 = __toESM(require_react());
var useOpenState = ({ onOpen, onClose }) => {
  const [isOpen, setIsOpen] = (0, import_react43.useState)(false);
  const [openedWithKeyboard, setOpenedWithKeyboard] = (0, import_react43.useState)(false);
  const openDropdown = (isKeyboard) => {
    if (!isOpen) {
      setIsOpen(true);
      setOpenedWithKeyboard(!!isKeyboard);
      onOpen === null || onOpen === void 0 ? void 0 : onOpen();
    }
  };
  const closeDropdown = () => {
    if (isOpen) {
      setIsOpen(false);
      onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  };
  const toggleDropdown = () => {
    if (isOpen) {
      closeDropdown();
    } else {
      openDropdown(false);
    }
  };
  return { isOpen, openDropdown, closeDropdown, toggleDropdown, openedWithKeyboard };
};

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-highlighted-menu.js
var import_react44 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/utils/create-items-tree.js
function createItemsTree(items) {
  const itemToIndex = /* @__PURE__ */ new Map();
  const indexToItem = /* @__PURE__ */ new Map();
  const flatIndices = [];
  traverseItems(items, (item, index) => {
    const indexKey = stringifyIndex(index);
    itemToIndex.set(item, indexKey);
    indexToItem.set(indexKey, item);
    flatIndices.push(indexKey);
  });
  return {
    getItem: (index) => {
      const indexKey = stringifyIndex(index);
      return indexToItem.get(indexKey) || null;
    },
    getItemIndex: (item) => {
      const indexKey = itemToIndex.get(item);
      if (!indexKey) {
        throw new Error("Invariant violation: item is not found.");
      }
      return parseIndex(indexKey);
    },
    getSequentialIndex: (index, direction) => {
      const indexKey = stringifyIndex(index);
      const position = flatIndices.indexOf(indexKey);
      const nextIndexKey = flatIndices[position + direction];
      if (!nextIndexKey) {
        return null;
      }
      return parseIndex(nextIndexKey);
    },
    getParentIndex: (item) => {
      const indexKey = itemToIndex.get(item);
      if (!indexKey) {
        throw new Error("Invariant violation: item is not found.");
      }
      const index = parseIndex(indexKey);
      if (index.length === 1) {
        return null;
      }
      return index.slice(0, index.length - 1);
    }
  };
}
function traverseItems(items, act, parentIndex = []) {
  items.forEach((item, index) => {
    const itemIndex = [...parentIndex, index];
    act(item, itemIndex);
    if (isItemGroup(item)) {
      traverseItems(item.items, act, itemIndex);
    }
  });
}
function stringifyIndex(index) {
  return index.join("-");
}
function parseIndex(index) {
  return index.split("-").map((it) => parseInt(it));
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/move-highlight.js
function moveHighlight({ startIndex, expandedIndex, getNext, hasExpandableGroups, isInRestrictedView }) {
  const tryMove = (currentIndex) => {
    var _a;
    const next = getNext(currentIndex);
    if (!next) {
      return null;
    }
    if (((_a = next.parent) === null || _a === void 0 ? void 0 : _a.disabled) && hasExpandableGroups) {
      return tryMove(next.index);
    }
    if (isItemGroup(next.item) && !hasExpandableGroups) {
      return tryMove(next.index);
    }
    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {
      return tryMove(next.index);
    }
    if (hasExpandableGroups && isInRestrictedView && !isSameLevel(next.index, expandedIndex) && !isIncluded(expandedIndex, next.index)) {
      return tryMove(next.index);
    }
    return next.index;
  };
  return tryMove(startIndex);
}
function isSameParent(left, right) {
  return indexEquals(left.slice(0, -1), right.slice(0, -1));
}
function isSameLevel(left, right) {
  return left.length === right.length;
}
function isIncluded(parent, child) {
  return indexEquals(parent, child.slice(0, -1));
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-highlighted-menu.js
function useHighlightedMenu({ items, hasExpandableGroups, isInRestrictedView = false }) {
  const [targetIndex, setTargetIndex] = (0, import_react44.useState)([]);
  const [expandedIndex, setExpandedIndex] = (0, import_react44.useState)([]);
  const [isUsingMouse, setIsUsingMouse] = (0, import_react44.useState)(true);
  const { getItem, getItemIndex: getItemIndex2, getSequentialIndex, getParentIndex } = (0, import_react44.useMemo)(() => createItemsTree(items), [items]);
  const targetItem = (0, import_react44.useMemo)(() => getItem(targetIndex), [targetIndex, getItem]);
  const isHighlighted = (0, import_react44.useCallback)((item) => {
    const index = getItemIndex2(item);
    return indexIncludes(index, targetIndex);
  }, [targetIndex, getItemIndex2]);
  const isKeyboardHighlight = (0, import_react44.useCallback)((item) => {
    const index = getItemIndex2(item);
    return !isUsingMouse && indexEquals(index, targetIndex);
  }, [targetIndex, getItemIndex2, isUsingMouse]);
  const isExpanded = (0, import_react44.useCallback)((group) => {
    const index = getItemIndex2(group);
    return indexIncludes(index, expandedIndex);
  }, [expandedIndex, getItemIndex2]);
  const moveHighlight2 = (0, import_react44.useCallback)((direction) => {
    const getNext = (index) => {
      const nextIndex2 = getSequentialIndex(index, direction);
      const item = getItem(nextIndex2 || [-1]);
      if (!nextIndex2 || !item) {
        return null;
      }
      const parentIndex = getParentIndex(item);
      const parentItem = parentIndex && getItem(parentIndex);
      return { index: nextIndex2, item, parent: parentItem || void 0 };
    };
    const nextIndex = moveHighlight({
      startIndex: targetIndex,
      expandedIndex,
      getNext,
      hasExpandableGroups,
      isInRestrictedView
    });
    if (nextIndex) {
      setTargetIndex(nextIndex);
    }
  }, [targetIndex, expandedIndex, getItem, getSequentialIndex, getParentIndex, hasExpandableGroups, isInRestrictedView]);
  const highlightItem = (0, import_react44.useCallback)((item) => {
    setTargetIndex(getItemIndex2(item));
  }, [getItemIndex2]);
  const expandGroup = (0, import_react44.useCallback)((group) => {
    const groupIndex = group ? getItemIndex2(group) : targetIndex;
    const firstChildIndex = [...groupIndex, 0];
    setTargetIndex(isInRestrictedView ? groupIndex : firstChildIndex);
    setExpandedIndex(groupIndex);
  }, [targetIndex, getItemIndex2, isInRestrictedView]);
  const collapseGroup = (0, import_react44.useCallback)(() => {
    if (expandedIndex.length > 0) {
      setTargetIndex(expandedIndex);
      setExpandedIndex(expandedIndex.slice(0, -1));
    }
  }, [expandedIndex]);
  const reset = (0, import_react44.useCallback)(() => {
    setTargetIndex([]);
    setExpandedIndex([]);
  }, []);
  return {
    targetItem,
    isHighlighted,
    isKeyboardHighlight,
    isExpanded,
    moveHighlight: moveHighlight2,
    highlightItem,
    expandGroup,
    collapseGroup,
    reset,
    setIsUsingMouse
  };
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-button-dropdown.js
function useButtonDropdown({ items, onItemClick, onItemFollow, onReturnFocus, hasExpandableGroups, isInRestrictedView = false, expandToViewport = false }) {
  const { targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, moveHighlight: moveHighlight2, expandGroup, collapseGroup, reset, setIsUsingMouse } = useHighlightedMenu({
    items,
    hasExpandableGroups,
    isInRestrictedView
  });
  const _a = useOpenState({ onClose: reset }), { isOpen, closeDropdown } = _a, openStateProps = __rest(_a, ["isOpen", "closeDropdown"]);
  const toggleDropdown = (options = {}) => {
    var _a2;
    const moveHighlightOnOpen = (_a2 = options.moveHighlightOnOpen) !== null && _a2 !== void 0 ? _a2 : true;
    if (!isOpen && moveHighlightOnOpen) {
      moveHighlight2(1);
    }
    openStateProps.toggleDropdown();
  };
  const onGroupToggle = (item) => !isExpanded(item) ? expandGroup(item) : collapseGroup();
  const onItemActivate = (item, event) => {
    const details = {
      id: item.id || "undefined",
      href: item.href,
      external: item.external,
      target: getItemTarget(item)
    };
    if (onItemFollow && item.href && isPlainLeftClick(event)) {
      fireCancelableEvent(onItemFollow, details, event);
    }
    if (onItemClick) {
      fireCancelableEvent(onItemClick, details, event);
    }
    onReturnFocus();
    closeDropdown();
  };
  const doVerticalNavigation = (direction) => {
    if (isOpen) {
      moveHighlight2(direction);
    }
  };
  const openAndSelectFirst = (event) => {
    toggleDropdown();
    event.preventDefault();
  };
  const actOnParentDropdown = (event) => {
    if (!targetItem) {
      if (isOpen && !isInRestrictedView) {
        toggleDropdown();
      } else {
        openAndSelectFirst(event);
      }
    } else {
      if (isItemGroup(targetItem)) {
        onGroupToggle(targetItem, event);
      } else {
        onItemActivate(targetItem, event);
      }
    }
  };
  const activate = (event, isEnter) => {
    setIsUsingMouse(false);
    if (targetItem && isLinkItem(targetItem) && isEnter) {
      return;
    }
    event.preventDefault();
    actOnParentDropdown(event);
  };
  const onKeyDown = (event) => {
    setIsUsingMouse(false);
    switch (event.keyCode) {
      case KeyCode.down: {
        doVerticalNavigation(1);
        event.preventDefault();
        break;
      }
      case KeyCode.up: {
        doVerticalNavigation(-1);
        event.preventDefault();
        break;
      }
      case KeyCode.space: {
        event.preventDefault();
        break;
      }
      case KeyCode.enter: {
        if (!(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {
          activate(event, true);
        }
        break;
      }
      case KeyCode.left:
      case KeyCode.right: {
        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {
          expandGroup();
        } else if (hasExpandableGroups) {
          collapseGroup();
        }
        event.preventDefault();
        break;
      }
      case KeyCode.escape: {
        onReturnFocus();
        closeDropdown();
        event.preventDefault();
        if (isOpen) {
          event.stopPropagation();
        }
        break;
      }
      case KeyCode.tab: {
        if (expandToViewport) {
          onReturnFocus();
        }
        closeDropdown();
        break;
      }
    }
  };
  const onKeyUp = (event) => {
    if (event.keyCode === KeyCode.space && !(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {
      activate(event);
    }
  };
  return {
    isOpen,
    targetItem,
    isHighlighted,
    isKeyboardHighlight,
    isExpanded,
    highlightItem,
    onKeyDown,
    onKeyUp,
    onItemActivate,
    onGroupToggle,
    toggleDropdown,
    closeDropdown,
    setIsUsingMouse
  };
}

// node_modules/@cloudscape-design/components/internal/components/options-list/index.js
init_tslib_es6();
var import_react45 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/options-list/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/internal/components/options-list/styles.scoped.css";
var styles_css_default14 = {
  "options-list": "awsui_options-list_19gcf_9d68v_93",
  "decrease-top-margin": "awsui_decrease-top-margin_19gcf_9d68v_143"
};

// node_modules/@cloudscape-design/components/internal/components/options-list/index.js
var BOTTOM_TRIGGER_OFFSET = 80;
var getItemIndex = (containerRef, event) => {
  const target = findUpUntil(event.target, (element) => element === containerRef.current || !!element.dataset.mouseTarget);
  const mouseTarget = target === null || target === void 0 ? void 0 : target.dataset.mouseTarget;
  return mouseTarget ? parseInt(mouseTarget) : -1;
};
var OptionsList = (_a, ref) => {
  var { open, statusType, children: children2, nativeAttributes = {}, onKeyDown, onBlur, onFocus, onLoadMore, onMouseUp, onMouseMove, position = "relative", role = "listbox", decreaseTopMargin = false, ariaLabel, ariaLabelledby, ariaDescribedby } = _a, restProps = __rest(_a, ["open", "statusType", "children", "nativeAttributes", "onKeyDown", "onBlur", "onFocus", "onLoadMore", "onMouseUp", "onMouseMove", "position", "role", "decreaseTopMargin", "ariaLabel", "ariaLabelledby", "ariaDescribedby"]);
  const baseProps = getBaseProps(restProps);
  const menuRef = (0, import_react45.useRef)(null);
  const handleScroll = useStableCallback(() => {
    const scrollContainer = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current;
    if (scrollContainer) {
      const bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;
      const remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;
      if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {
        fireNonCancelableEvent(onLoadMore);
      }
    }
  });
  (0, import_react45.useEffect)(() => {
    if (open && statusType === "pending") {
      handleScroll();
    }
  }, [open, statusType, handleScroll]);
  const className = clsx_m_default(styles_css_default14["options-list"], {
    [styles_css_default14["decrease-top-margin"]]: decreaseTopMargin
  });
  const mergedRef = useMergeRefs(ref, menuRef);
  return import_react45.default.createElement("ul", Object.assign({}, baseProps, nativeAttributes, { className, ref: mergedRef, style: { position }, role, onScroll: handleScroll, onKeyDown: (event) => onKeyDown && fireKeyboardEvent(onKeyDown, event), onMouseMove: (event) => onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(getItemIndex(menuRef, event)), onMouseUp: (event) => onMouseUp === null || onMouseUp === void 0 ? void 0 : onMouseUp(getItemIndex(menuRef, event)), onBlur: (event) => fireNonCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }), onFocus: () => fireNonCancelableEvent(onFocus), tabIndex: -1, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby }), open && children2);
};
var options_list_default = import_react45.default.forwardRef(OptionsList);

// node_modules/@cloudscape-design/components/box/internal.js
init_tslib_es6();
var import_react46 = __toESM(require_react());

// node_modules/@cloudscape-design/components/box/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/box/styles.scoped.css";
var styles_css_default15 = {
  "root": "awsui_root_18wu0_14hyh_93",
  "box": "awsui_box_18wu0_14hyh_207",
  "p-variant": "awsui_p-variant_18wu0_14hyh_207",
  "color-default": "awsui_color-default_18wu0_14hyh_207",
  "b-variant": "awsui_b-variant_18wu0_14hyh_207",
  "strong-variant": "awsui_strong-variant_18wu0_14hyh_207",
  "code-variant": "awsui_code-variant_18wu0_14hyh_207",
  "pre-variant": "awsui_pre-variant_18wu0_14hyh_207",
  "samp-variant": "awsui_samp-variant_18wu0_14hyh_207",
  "h1-variant": "awsui_h1-variant_18wu0_14hyh_211",
  "h2-variant": "awsui_h2-variant_18wu0_14hyh_211",
  "h3-variant": "awsui_h3-variant_18wu0_14hyh_211",
  "h4-variant": "awsui_h4-variant_18wu0_14hyh_211",
  "h5-variant": "awsui_h5-variant_18wu0_14hyh_211",
  "small-variant": "awsui_small-variant_18wu0_14hyh_215",
  "a-variant": "awsui_a-variant_18wu0_14hyh_219",
  "font-size-default": "awsui_font-size-default_18wu0_14hyh_223",
  "font-weight-default": "awsui_font-weight-default_18wu0_14hyh_263",
  "key-label-variant": "awsui_key-label-variant_18wu0_14hyh_303",
  "value-large-variant": "awsui_value-large-variant_18wu0_14hyh_310",
  "font-weight-heavy": "awsui_font-weight-heavy_18wu0_14hyh_317",
  "color-inverted": "awsui_color-inverted_18wu0_14hyh_322",
  "color-text-label": "awsui_color-text-label_18wu0_14hyh_325",
  "color-text-body-secondary": "awsui_color-text-body-secondary_18wu0_14hyh_328",
  "color-text-status-error": "awsui_color-text-status-error_18wu0_14hyh_331",
  "color-text-status-success": "awsui_color-text-status-success_18wu0_14hyh_334",
  "color-text-status-info": "awsui_color-text-status-info_18wu0_14hyh_337",
  "color-text-status-inactive": "awsui_color-text-status-inactive_18wu0_14hyh_340",
  "color-text-status-warning": "awsui_color-text-status-warning_18wu0_14hyh_343",
  "color-inherit": "awsui_color-inherit_18wu0_14hyh_346",
  "font-size-body-s": "awsui_font-size-body-s_18wu0_14hyh_349",
  "font-size-body-m": "awsui_font-size-body-m_18wu0_14hyh_354",
  "font-size-heading-xs": "awsui_font-size-heading-xs_18wu0_14hyh_358",
  "font-size-heading-s": "awsui_font-size-heading-s_18wu0_14hyh_362",
  "font-size-heading-m": "awsui_font-size-heading-m_18wu0_14hyh_367",
  "font-size-heading-l": "awsui_font-size-heading-l_18wu0_14hyh_372",
  "font-size-heading-xl": "awsui_font-size-heading-xl_18wu0_14hyh_377",
  "font-size-display-l": "awsui_font-size-display-l_18wu0_14hyh_382",
  "font-weight-light": "awsui_font-weight-light_18wu0_14hyh_387",
  "font-weight-normal": "awsui_font-weight-normal_18wu0_14hyh_390",
  "font-weight-bold": "awsui_font-weight-bold_18wu0_14hyh_393",
  "t-left": "awsui_t-left_18wu0_14hyh_400",
  "t-right": "awsui_t-right_18wu0_14hyh_404",
  "t-center": "awsui_t-center_18wu0_14hyh_408",
  "p-n": "awsui_p-n_18wu0_14hyh_509",
  "p-top-n": "awsui_p-top-n_18wu0_14hyh_513",
  "p-vertical-n": "awsui_p-vertical-n_18wu0_14hyh_514",
  "p-right-n": "awsui_p-right-n_18wu0_14hyh_518",
  "p-horizontal-n": "awsui_p-horizontal-n_18wu0_14hyh_519",
  "p-bottom-n": "awsui_p-bottom-n_18wu0_14hyh_523",
  "p-left-n": "awsui_p-left-n_18wu0_14hyh_528",
  "p-xxxs": "awsui_p-xxxs_18wu0_14hyh_533",
  "p-top-xxxs": "awsui_p-top-xxxs_18wu0_14hyh_537",
  "p-vertical-xxxs": "awsui_p-vertical-xxxs_18wu0_14hyh_538",
  "p-right-xxxs": "awsui_p-right-xxxs_18wu0_14hyh_542",
  "p-horizontal-xxxs": "awsui_p-horizontal-xxxs_18wu0_14hyh_543",
  "p-bottom-xxxs": "awsui_p-bottom-xxxs_18wu0_14hyh_547",
  "p-left-xxxs": "awsui_p-left-xxxs_18wu0_14hyh_552",
  "p-xxs": "awsui_p-xxs_18wu0_14hyh_557",
  "p-top-xxs": "awsui_p-top-xxs_18wu0_14hyh_561",
  "p-vertical-xxs": "awsui_p-vertical-xxs_18wu0_14hyh_562",
  "p-right-xxs": "awsui_p-right-xxs_18wu0_14hyh_566",
  "p-horizontal-xxs": "awsui_p-horizontal-xxs_18wu0_14hyh_567",
  "p-bottom-xxs": "awsui_p-bottom-xxs_18wu0_14hyh_571",
  "p-left-xxs": "awsui_p-left-xxs_18wu0_14hyh_576",
  "p-xs": "awsui_p-xs_18wu0_14hyh_581",
  "p-top-xs": "awsui_p-top-xs_18wu0_14hyh_585",
  "p-vertical-xs": "awsui_p-vertical-xs_18wu0_14hyh_586",
  "p-right-xs": "awsui_p-right-xs_18wu0_14hyh_590",
  "p-horizontal-xs": "awsui_p-horizontal-xs_18wu0_14hyh_591",
  "p-bottom-xs": "awsui_p-bottom-xs_18wu0_14hyh_595",
  "p-left-xs": "awsui_p-left-xs_18wu0_14hyh_600",
  "p-s": "awsui_p-s_18wu0_14hyh_605",
  "p-top-s": "awsui_p-top-s_18wu0_14hyh_609",
  "p-vertical-s": "awsui_p-vertical-s_18wu0_14hyh_610",
  "p-right-s": "awsui_p-right-s_18wu0_14hyh_614",
  "p-horizontal-s": "awsui_p-horizontal-s_18wu0_14hyh_615",
  "p-bottom-s": "awsui_p-bottom-s_18wu0_14hyh_619",
  "p-left-s": "awsui_p-left-s_18wu0_14hyh_624",
  "p-m": "awsui_p-m_18wu0_14hyh_629",
  "p-top-m": "awsui_p-top-m_18wu0_14hyh_633",
  "p-vertical-m": "awsui_p-vertical-m_18wu0_14hyh_634",
  "p-right-m": "awsui_p-right-m_18wu0_14hyh_638",
  "p-horizontal-m": "awsui_p-horizontal-m_18wu0_14hyh_639",
  "p-bottom-m": "awsui_p-bottom-m_18wu0_14hyh_643",
  "p-left-m": "awsui_p-left-m_18wu0_14hyh_648",
  "p-l": "awsui_p-l_18wu0_14hyh_528",
  "p-top-l": "awsui_p-top-l_18wu0_14hyh_657",
  "p-vertical-l": "awsui_p-vertical-l_18wu0_14hyh_658",
  "p-right-l": "awsui_p-right-l_18wu0_14hyh_662",
  "p-horizontal-l": "awsui_p-horizontal-l_18wu0_14hyh_663",
  "p-bottom-l": "awsui_p-bottom-l_18wu0_14hyh_667",
  "p-left-l": "awsui_p-left-l_18wu0_14hyh_672",
  "p-xl": "awsui_p-xl_18wu0_14hyh_677",
  "p-top-xl": "awsui_p-top-xl_18wu0_14hyh_681",
  "p-vertical-xl": "awsui_p-vertical-xl_18wu0_14hyh_682",
  "p-right-xl": "awsui_p-right-xl_18wu0_14hyh_686",
  "p-horizontal-xl": "awsui_p-horizontal-xl_18wu0_14hyh_687",
  "p-bottom-xl": "awsui_p-bottom-xl_18wu0_14hyh_691",
  "p-left-xl": "awsui_p-left-xl_18wu0_14hyh_696",
  "p-xxl": "awsui_p-xxl_18wu0_14hyh_701",
  "p-top-xxl": "awsui_p-top-xxl_18wu0_14hyh_705",
  "p-vertical-xxl": "awsui_p-vertical-xxl_18wu0_14hyh_706",
  "p-right-xxl": "awsui_p-right-xxl_18wu0_14hyh_710",
  "p-horizontal-xxl": "awsui_p-horizontal-xxl_18wu0_14hyh_711",
  "p-bottom-xxl": "awsui_p-bottom-xxl_18wu0_14hyh_715",
  "p-left-xxl": "awsui_p-left-xxl_18wu0_14hyh_720",
  "p-xxxl": "awsui_p-xxxl_18wu0_14hyh_725",
  "p-top-xxxl": "awsui_p-top-xxxl_18wu0_14hyh_729",
  "p-vertical-xxxl": "awsui_p-vertical-xxxl_18wu0_14hyh_730",
  "p-right-xxxl": "awsui_p-right-xxxl_18wu0_14hyh_734",
  "p-horizontal-xxxl": "awsui_p-horizontal-xxxl_18wu0_14hyh_735",
  "p-bottom-xxxl": "awsui_p-bottom-xxxl_18wu0_14hyh_739",
  "p-left-xxxl": "awsui_p-left-xxxl_18wu0_14hyh_744",
  "m-n": "awsui_m-n_18wu0_14hyh_749",
  "m-top-n": "awsui_m-top-n_18wu0_14hyh_753",
  "m-vertical-n": "awsui_m-vertical-n_18wu0_14hyh_754",
  "m-right-n": "awsui_m-right-n_18wu0_14hyh_758",
  "m-horizontal-n": "awsui_m-horizontal-n_18wu0_14hyh_759",
  "m-bottom-n": "awsui_m-bottom-n_18wu0_14hyh_763",
  "m-left-n": "awsui_m-left-n_18wu0_14hyh_768",
  "m-xxxs": "awsui_m-xxxs_18wu0_14hyh_773",
  "m-top-xxxs": "awsui_m-top-xxxs_18wu0_14hyh_777",
  "m-vertical-xxxs": "awsui_m-vertical-xxxs_18wu0_14hyh_778",
  "m-right-xxxs": "awsui_m-right-xxxs_18wu0_14hyh_782",
  "m-horizontal-xxxs": "awsui_m-horizontal-xxxs_18wu0_14hyh_783",
  "m-bottom-xxxs": "awsui_m-bottom-xxxs_18wu0_14hyh_787",
  "m-left-xxxs": "awsui_m-left-xxxs_18wu0_14hyh_792",
  "m-xxs": "awsui_m-xxs_18wu0_14hyh_797",
  "m-top-xxs": "awsui_m-top-xxs_18wu0_14hyh_801",
  "m-vertical-xxs": "awsui_m-vertical-xxs_18wu0_14hyh_802",
  "m-right-xxs": "awsui_m-right-xxs_18wu0_14hyh_806",
  "m-horizontal-xxs": "awsui_m-horizontal-xxs_18wu0_14hyh_807",
  "m-bottom-xxs": "awsui_m-bottom-xxs_18wu0_14hyh_811",
  "m-left-xxs": "awsui_m-left-xxs_18wu0_14hyh_816",
  "m-xs": "awsui_m-xs_18wu0_14hyh_821",
  "m-top-xs": "awsui_m-top-xs_18wu0_14hyh_825",
  "m-vertical-xs": "awsui_m-vertical-xs_18wu0_14hyh_826",
  "m-right-xs": "awsui_m-right-xs_18wu0_14hyh_830",
  "m-horizontal-xs": "awsui_m-horizontal-xs_18wu0_14hyh_831",
  "m-bottom-xs": "awsui_m-bottom-xs_18wu0_14hyh_835",
  "m-left-xs": "awsui_m-left-xs_18wu0_14hyh_840",
  "m-s": "awsui_m-s_18wu0_14hyh_845",
  "m-top-s": "awsui_m-top-s_18wu0_14hyh_849",
  "m-vertical-s": "awsui_m-vertical-s_18wu0_14hyh_850",
  "m-right-s": "awsui_m-right-s_18wu0_14hyh_854",
  "m-horizontal-s": "awsui_m-horizontal-s_18wu0_14hyh_855",
  "m-bottom-s": "awsui_m-bottom-s_18wu0_14hyh_859",
  "m-left-s": "awsui_m-left-s_18wu0_14hyh_864",
  "m-m": "awsui_m-m_18wu0_14hyh_869",
  "m-top-m": "awsui_m-top-m_18wu0_14hyh_873",
  "m-vertical-m": "awsui_m-vertical-m_18wu0_14hyh_874",
  "m-right-m": "awsui_m-right-m_18wu0_14hyh_878",
  "m-horizontal-m": "awsui_m-horizontal-m_18wu0_14hyh_879",
  "m-bottom-m": "awsui_m-bottom-m_18wu0_14hyh_883",
  "m-left-m": "awsui_m-left-m_18wu0_14hyh_888",
  "m-l": "awsui_m-l_18wu0_14hyh_768",
  "m-top-l": "awsui_m-top-l_18wu0_14hyh_897",
  "m-vertical-l": "awsui_m-vertical-l_18wu0_14hyh_898",
  "m-right-l": "awsui_m-right-l_18wu0_14hyh_902",
  "m-horizontal-l": "awsui_m-horizontal-l_18wu0_14hyh_903",
  "m-bottom-l": "awsui_m-bottom-l_18wu0_14hyh_907",
  "m-left-l": "awsui_m-left-l_18wu0_14hyh_912",
  "m-xl": "awsui_m-xl_18wu0_14hyh_917",
  "m-top-xl": "awsui_m-top-xl_18wu0_14hyh_921",
  "m-vertical-xl": "awsui_m-vertical-xl_18wu0_14hyh_922",
  "m-right-xl": "awsui_m-right-xl_18wu0_14hyh_926",
  "m-horizontal-xl": "awsui_m-horizontal-xl_18wu0_14hyh_927",
  "m-bottom-xl": "awsui_m-bottom-xl_18wu0_14hyh_931",
  "m-left-xl": "awsui_m-left-xl_18wu0_14hyh_936",
  "m-xxl": "awsui_m-xxl_18wu0_14hyh_941",
  "m-top-xxl": "awsui_m-top-xxl_18wu0_14hyh_945",
  "m-vertical-xxl": "awsui_m-vertical-xxl_18wu0_14hyh_946",
  "m-right-xxl": "awsui_m-right-xxl_18wu0_14hyh_950",
  "m-horizontal-xxl": "awsui_m-horizontal-xxl_18wu0_14hyh_951",
  "m-bottom-xxl": "awsui_m-bottom-xxl_18wu0_14hyh_955",
  "m-left-xxl": "awsui_m-left-xxl_18wu0_14hyh_960",
  "m-xxxl": "awsui_m-xxxl_18wu0_14hyh_965",
  "m-top-xxxl": "awsui_m-top-xxxl_18wu0_14hyh_969",
  "m-vertical-xxxl": "awsui_m-vertical-xxxl_18wu0_14hyh_970",
  "m-right-xxxl": "awsui_m-right-xxxl_18wu0_14hyh_974",
  "m-horizontal-xxxl": "awsui_m-horizontal-xxxl_18wu0_14hyh_975",
  "m-bottom-xxxl": "awsui_m-bottom-xxxl_18wu0_14hyh_979",
  "m-left-xxxl": "awsui_m-left-xxxl_18wu0_14hyh_984",
  "d-block": "awsui_d-block_18wu0_14hyh_989",
  "d-inline": "awsui_d-inline_18wu0_14hyh_992",
  "d-inline-block": "awsui_d-inline-block_18wu0_14hyh_995",
  "d-none": "awsui_d-none_18wu0_14hyh_998",
  "f-left": "awsui_f-left_18wu0_14hyh_1002",
  "f-right": "awsui_f-right_18wu0_14hyh_1006"
};

// node_modules/@cloudscape-design/components/box/internal.js
function InternalBox(_a) {
  var { variant = "div", tagOverride, margin = {}, padding = {}, display, textAlign, float, fontSize, fontWeight, color, children: children2, __internalRootRef = null } = _a, props = __rest(_a, ["variant", "tagOverride", "margin", "padding", "display", "textAlign", "float", "fontSize", "fontWeight", "color", "children", "__internalRootRef"]);
  const baseProps = getBaseProps(props);
  const marginsClassNamesSuffices = getClassNamesSuffixes(margin);
  const paddingsClassNamesSuffices = getClassNamesSuffixes(padding);
  const Tag = getTag(variant, tagOverride);
  const className = clsx_m_default(baseProps.className, styles_css_default15.root, styles_css_default15.box, styles_css_default15[`${variant.replace(/^awsui-/, "")}-variant`], marginsClassNamesSuffices.map((suffix) => styles_css_default15[`m-${suffix}`]), paddingsClassNamesSuffices.map((suffix) => styles_css_default15[`p-${suffix}`]), styles_css_default15[`d-${display}`], styles_css_default15[`f-${float}`], styles_css_default15[`color-${color || "default"}`], styles_css_default15[`font-size-${fontSize || "default"}`], styles_css_default15[`font-weight-${fontWeight || "default"}`], styles_css_default15[`t-${textAlign}`]);
  return import_react46.default.createElement(Tag, Object.assign({}, baseProps, { className, ref: __internalRootRef }), children2);
}
var getClassNamesSuffixes = (value) => {
  if (typeof value === "string") {
    return [value];
  }
  const sides = ["top", "right", "bottom", "left", "horizontal", "vertical"];
  return sides.filter((side) => !!value[side]).map((side) => `${side}-${value[side]}`);
};
var getTag = (variant, tagOverride) => {
  if (tagOverride) {
    return tagOverride;
  }
  if (variant === "awsui-value-large") {
    return "span";
  }
  if (variant === "awsui-key-label") {
    return "div";
  }
  return variant;
};

// node_modules/@cloudscape-design/components/button-dropdown/internal.js
var InternalButtonDropdown = import_react47.default.forwardRef((_a, ref) => {
  var _b;
  var { items, variant = "normal", loading = false, loadingText, disabled = false, expandableGroups = false, children: children2, onItemClick, onItemFollow, customTriggerBuilder, expandToViewport, ariaLabel, title, description, preferCenter, mainAction, __internalRootRef } = _a, props = __rest(_a, ["items", "variant", "loading", "loadingText", "disabled", "expandableGroups", "children", "onItemClick", "onItemFollow", "customTriggerBuilder", "expandToViewport", "ariaLabel", "title", "description", "preferCenter", "mainAction", "__internalRootRef"]);
  const isInRestrictedView = useMobile();
  const dropdownId = useUniqueId("dropdown");
  for (const item of items) {
    checkSafeUrl("ButtonDropdown", item.href);
  }
  if (mainAction) {
    checkSafeUrl("ButtonDropdown", mainAction.href);
  }
  if (isDevelopment) {
    if (mainAction && variant !== "primary" && variant !== "normal") {
      warnOnce("ButtonDropdown", 'Main action is only supported for "primary" and "normal" component variant.');
    }
  }
  const isMainAction = mainAction && (variant === "primary" || variant === "normal");
  const isVisualRefresh = useVisualRefresh();
  const { isOpen, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, onKeyDown, onKeyUp, onItemActivate, onGroupToggle, toggleDropdown, closeDropdown, setIsUsingMouse } = useButtonDropdown({
    items,
    onItemClick,
    onItemFollow,
    onReturnFocus: () => {
      var _a2;
      return (_a2 = triggerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    },
    expandToViewport,
    hasExpandableGroups: expandableGroups,
    isInRestrictedView
  });
  const handleMouseEvent = () => {
    setIsUsingMouse(true);
  };
  const baseProps = getBaseProps(props);
  const mainActionRef = (0, import_react47.useRef)(null);
  const triggerRef = (0, import_react47.useRef)(null);
  useForwardFocus(ref, isMainAction ? mainActionRef : triggerRef);
  const clickHandler = () => {
    if (!loading && !disabled) {
      toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });
    }
  };
  const canBeOpened = !loading && !disabled;
  const triggerVariant = variant === "navigation" ? void 0 : variant === "inline-icon" ? "inline-icon" : variant;
  const iconProps = variant === "icon" || variant === "inline-icon" ? {
    iconName: "ellipsis"
  } : {
    iconName: "caret-down-filled",
    iconAlign: "right",
    __iconClass: canBeOpened && isOpen ? styles_css_default8["rotate-up"] : styles_css_default8["rotate-down"]
  };
  const baseTriggerProps = Object.assign(Object.assign({ className: clsx_m_default(styles_css_default8["trigger-button"], styles_css_default8["test-utils-button-trigger"]) }, iconProps), {
    variant: triggerVariant,
    loading,
    loadingText,
    disabled,
    onClick: (event) => {
      event.preventDefault();
      clickHandler();
    },
    ariaLabel,
    ariaExpanded: canBeOpened && isOpen,
    formAction: "none",
    __nativeAttributes: {
      "aria-haspopup": true
    }
  });
  const triggerId = useUniqueId("awsui-button-dropdown__trigger");
  const triggerHasBadge = () => {
    const flatItems = items.flatMap((item) => {
      if ("items" in item) {
        return item.items;
      }
      return item;
    });
    return variant === "icon" && !!(flatItems === null || flatItems === void 0 ? void 0 : flatItems.find((item) => {
      if ("badge" in item) {
        return item.badge;
      }
    }));
  };
  let trigger = null;
  if (customTriggerBuilder) {
    trigger = import_react47.default.createElement("div", { className: styles_css_default8["dropdown-trigger"] }, customTriggerBuilder({
      testUtilsClass: styles_css_default8["test-utils-button-trigger"],
      ariaExpanded: canBeOpened && isOpen,
      onClick: clickHandler,
      triggerRef,
      ariaLabel,
      disabled,
      isOpen
    }));
  } else if (isMainAction) {
    const { text, iconName, iconAlt, iconSvg, iconUrl, external, externalIconAriaLabel } = mainAction, mainActionProps = __rest(mainAction, ["text", "iconName", "iconAlt", "iconSvg", "iconUrl", "external", "externalIconAriaLabel"]);
    const mainActionIconProps = external ? { iconName: "external", iconAlign: "right" } : { iconName, iconAlt, iconSvg, iconUrl };
    const mainActionAriaLabel = externalIconAriaLabel ? `${(_b = mainAction.ariaLabel) !== null && _b !== void 0 ? _b : mainAction.text} ${mainAction.externalIconAriaLabel}` : void 0;
    trigger = import_react47.default.createElement(
      "div",
      { role: "group", "aria-label": ariaLabel, className: styles_css_default8["split-trigger-wrapper"] },
      import_react47.default.createElement(
        "div",
        {
          className: clsx_m_default(styles_css_default8["trigger-item"], styles_css_default8["split-trigger"]),
          // Close dropdown upon main action click unless event is cancelled.
          onClick: closeDropdown,
          // Prevent keyboard events from propagation to the button dropdown handler.
          onKeyDown: (e) => e.stopPropagation(),
          onKeyUp: (e) => e.stopPropagation()
        },
        import_react47.default.createElement(InternalButton, Object.assign({ ref: mainActionRef }, mainActionProps, mainActionIconProps, { className: styles_css_default8["trigger-button"], variant, ariaLabel: mainActionAriaLabel, formAction: "none" }), text)
      ),
      import_react47.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default8["trigger-item"], styles_css_default8["dropdown-trigger"], isVisualRefresh && styles_css_default8["visual-refresh"]) },
        import_react47.default.createElement(InternalButton, Object.assign({ ref: triggerRef }, baseTriggerProps))
      )
    );
  } else {
    trigger = import_react47.default.createElement(
      "div",
      { className: styles_css_default8["dropdown-trigger"] },
      import_react47.default.createElement(InternalButton, Object.assign({ ref: triggerRef, id: triggerId }, baseTriggerProps, { badge: triggerHasBadge() }), children2)
    );
  }
  const hasHeader = title || description;
  const headerId = useUniqueId("awsui-button-dropdown__header");
  const shouldLabelWithTrigger = !ariaLabel && !mainAction && variant !== "icon" && variant !== "inline-icon";
  const { loadingButtonCount } = useFunnel();
  (0, import_react47.useEffect)(() => {
    if (loading) {
      loadingButtonCount.current++;
      return () => {
        loadingButtonCount.current--;
      };
    }
  }, [loading, loadingButtonCount]);
  return import_react47.default.createElement(
    "div",
    Object.assign({}, baseProps, { onKeyDown, onKeyUp, onMouseDown: handleMouseEvent, onMouseMove: handleMouseEvent, className: clsx_m_default(styles_css_default8["button-dropdown"], styles_css_default8[`variant-${variant}`], baseProps.className), "aria-owns": expandToViewport && isOpen ? dropdownId : void 0, ref: __internalRootRef }),
    import_react47.default.createElement(
      dropdown_default,
      { open: canBeOpened && isOpen, stretchWidth: false, stretchTriggerHeight: variant === "navigation", expandToViewport, preferCenter, onDropdownClose: () => toggleDropdown(), trigger, dropdownId },
      hasHeader && import_react47.default.createElement(
        "div",
        { className: styles_css_default8.header, id: headerId },
        title && import_react47.default.createElement(
          "div",
          { className: styles_css_default8.title },
          import_react47.default.createElement(InternalBox, { fontSize: "heading-s", fontWeight: "bold", color: "inherit", tagOverride: "h2", margin: { vertical: "n", horizontal: "n" } }, title)
        ),
        description && import_react47.default.createElement(
          InternalBox,
          { fontSize: "body-s" },
          import_react47.default.createElement("span", { className: styles_css_default8.description }, description)
        )
      ),
      import_react47.default.createElement(
        options_list_default,
        { open: canBeOpened && isOpen, position: "static", role: "menu", decreaseTopMargin: true, ariaLabel, ariaLabelledby: hasHeader ? headerId : shouldLabelWithTrigger ? triggerId : void 0, statusType: "finished" },
        import_react47.default.createElement(ItemsList, { items, onItemActivate, onGroupToggle, hasExpandableGroups: expandableGroups, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, expandToViewport, variant })
      )
    )
  );
});
var internal_default4 = InternalButtonDropdown;

// node_modules/@cloudscape-design/components/internal/components/menu-dropdown/styles.css.js
import "/Users/eliaws/Documents/Demos/javascript-bedrock/enr/amazon-bedrock-javascript/node_modules/@cloudscape-design/components/internal/components/menu-dropdown/styles.scoped.css";
var styles_css_default16 = {
  "button": "awsui_button_m5h9f_1nshb_93",
  "expanded": "awsui_expanded_m5h9f_1nshb_148",
  "offset-right-none": "awsui_offset-right-none_m5h9f_1nshb_159",
  "offset-right-l": "awsui_offset-right-l_m5h9f_1nshb_162",
  "offset-right-xxl": "awsui_offset-right-xxl_m5h9f_1nshb_165",
  "text": "awsui_text_m5h9f_1nshb_190",
  "icon": "awsui_icon_m5h9f_1nshb_194"
};

// node_modules/@cloudscape-design/components/internal/components/menu-dropdown/index.js
var ButtonTrigger = import_react48.default.forwardRef(({ testUtilsClass, iconName, iconUrl, iconAlt, iconSvg, badge, ariaLabel, offsetRight, disabled, expanded, children: children2, onClick }, ref) => {
  const hasIcon = iconName || iconUrl || iconSvg;
  return import_react48.default.createElement(
    "button",
    { ref, type: "button", className: clsx_m_default(styles_css_default16.button, styles_css_default16[`offset-right-${offsetRight}`], testUtilsClass, {
      [styles_css_default16.expanded]: expanded
    }), "aria-label": ariaLabel, "aria-expanded": !!expanded, "aria-haspopup": true, disabled, onClick: (event) => {
      event.preventDefault();
      onClick && onClick();
    } },
    hasIcon && import_react48.default.createElement(internal_default, { className: styles_css_default16.icon, name: iconName, url: iconUrl, alt: iconAlt, svg: iconSvg, badge }),
    children2 && import_react48.default.createElement("span", { className: styles_css_default16.text }, children2),
    children2 && import_react48.default.createElement(internal_default, { name: "caret-down-filled", className: expanded ? styles_css_default8["rotate-up"] : styles_css_default8["rotate-down"] })
  );
});
var MenuDropdown = (_a) => {
  var { iconName, iconUrl, iconAlt, iconSvg, badge, offsetRight, children: children2 } = _a, props = __rest(_a, ["iconName", "iconUrl", "iconAlt", "iconSvg", "badge", "offsetRight", "children"]);
  const baseProps = getBaseProps(props);
  const dropdownTrigger = ({ triggerRef, ariaLabel, isOpen, testUtilsClass, disabled, onClick }) => {
    return import_react48.default.createElement(ButtonTrigger, { testUtilsClass, ref: triggerRef, disabled, expanded: isOpen, iconName, iconUrl, iconAlt, iconSvg, badge, ariaLabel, offsetRight, onClick }, children2);
  };
  return import_react48.default.createElement(internal_default4, Object.assign({}, baseProps, props, { variant: "navigation", customTriggerBuilder: dropdownTrigger, preferCenter: true }));
};
applyDisplayName(MenuDropdown, "MenuDropdown");
var menu_dropdown_default = MenuDropdown;

// node_modules/@cloudscape-design/components/internal/utils/strings/join-strings.js
function joinStrings(...strings) {
  return strings.filter(Boolean).join(" ") || void 0;
}

// node_modules/@cloudscape-design/components/internal/utils/strings/pad-left-zeros.js
function padLeftZeros(text, length) {
  while (text.length < length) {
    text = `0${text}`;
  }
  return text;
}

// node_modules/@cloudscape-design/components/top-navigation/parts/utility.js
function Utility({ hideText, definition, offsetRight }) {
  var _a;
  const hasIcon = !!definition.iconName || !!definition.iconUrl || !!definition.iconAlt || !!definition.iconSvg;
  const shouldHideText = hideText && !definition.disableTextCollapse && hasIcon;
  let ariaLabel = (_a = definition.ariaLabel) !== null && _a !== void 0 ? _a : definition.text;
  if (definition.type === "button") {
    ariaLabel = definition.ariaLabel ? definition.ariaLabel : joinStrings(definition.text, definition.externalIconAriaLabel);
    checkSafeUrl("TopNavigation", definition.href);
    if (definition.variant === "primary-button") {
      return import_react49.default.createElement(
        "span",
        { className: styles_css_default[`offset-right-${offsetRight}`] },
        import_react49.default.createElement(InternalButton, { variant: "primary", href: definition.href, target: definition.external ? "_blank" : void 0, onClick: definition.onClick, onFollow: definition.onFollow, ariaLabel, iconName: definition.iconName, iconUrl: definition.iconUrl, iconAlt: definition.iconAlt, iconSvg: definition.iconSvg }, shouldHideText ? null : import_react49.default.createElement(
          import_react49.default.Fragment,
          null,
          definition.text,
          definition.external && import_react49.default.createElement(
            import_react49.default.Fragment,
            null,
            " ",
            import_react49.default.createElement(
              "span",
              { className: clsx_m_default(styles_css_default["utility-button-external-icon"], styles_css_default[`offset-right-${offsetRight}`]), "aria-label": definition.externalIconAriaLabel, role: definition.externalIconAriaLabel ? "img" : void 0 },
              import_react49.default.createElement(internal_default, { name: "external" })
            )
          )
        ))
      );
    } else {
      return import_react49.default.createElement(
        "span",
        { className: styles_css_default[`offset-right-${offsetRight}`] },
        import_react49.default.createElement(
          internal_default3,
          { variant: "top-navigation", href: definition.href, target: definition.target, rel: definition.rel, external: definition.external, onFollow: (evt) => {
            fireCancelableEvent(definition.onFollow, { href: definition.href, target: definition.target, external: definition.external }, evt);
            fireCancelableEvent(definition.onClick, { href: definition.href, target: definition.target, external: definition.external }, evt);
          }, ariaLabel },
          hasIcon && import_react49.default.createElement(internal_default, { name: definition.iconName, url: definition.iconUrl, alt: definition.iconAlt, svg: definition.iconSvg, badge: definition.badge }),
          !shouldHideText && definition.text && import_react49.default.createElement("span", { className: hasIcon ? styles_css_default["utility-link-icon"] : void 0 }, definition.text)
        )
      );
    }
  } else if (definition.type === "menu-dropdown") {
    const title = definition.title || definition.text;
    const shouldShowTitle = shouldHideText || !definition.text;
    checkSafeUrlRecursively(definition.items);
    return import_react49.default.createElement(menu_dropdown_default, Object.assign({}, definition, { title: shouldShowTitle ? title : "", ariaLabel, offsetRight }), !shouldHideText && definition.text);
  }
  return null;
}
function checkSafeUrlRecursively(itemOrGroup) {
  for (const item of itemOrGroup) {
    checkSafeUrl("TopNavigation", item.href);
    if ("items" in item) {
      checkSafeUrlRecursively(item.items);
    }
  }
}

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/index.js
var import_react55 = __toESM(require_react());

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/router.js
var import_react50 = __toESM(require_react());
var defaultCtx = { state: { view: "utilities", data: null }, setState: () => {
} };
var ViewContext = (0, import_react50.createContext)(defaultCtx);
var useNavigate = () => {
  const { setState } = (0, import_react50.useContext)(ViewContext);
  const navigate = (view, data) => {
    setState({ view, data });
  };
  return navigate;
};
var Route = ({ view, element }) => {
  const { state } = (0, import_react50.useContext)(ViewContext);
  if (view === state.view) {
    if (typeof element === "function") {
      return element(state.data);
    }
    return import_react50.default.createElement(import_react50.default.Fragment, null, element);
  }
  return null;
};
var Router = ({ children: children2 }) => {
  const [state, setState] = (0, import_react50.useState)({ view: "utilities", data: null });
  return import_react50.default.createElement(ViewContext.Provider, { value: { state, setState } }, children2);
};
var router_default = Router;

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/views/utilities.js
var import_react53 = __toESM(require_react());

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/header.js
var import_react51 = __toESM(require_react());
var Header = ({ children: children2, secondaryText, backIconAriaLabel, dismissIconAriaLabel, onBack, onClose }) => {
  return import_react51.default.createElement(
    "div",
    { className: styles_css_default["overflow-menu-header"] },
    onBack && import_react51.default.createElement(
      internal_default2,
      {
        // Used for test-utils, which require the selectable element to have a classname.
        // eslint-disable-next-line react/forbid-component-props
        className: styles_css_default["overflow-menu-back-button"],
        ariaLabel: backIconAriaLabel,
        iconName: "angle-left",
        variant: "icon",
        onClick: () => onBack()
      }
    ),
    import_react51.default.createElement(
      "h2",
      { className: styles_css_default["overflow-menu-header-text"] },
      import_react51.default.createElement("div", { className: styles_css_default["overflow-menu-header-text--title"] }, children2),
      secondaryText && import_react51.default.createElement("div", { className: styles_css_default["overflow-menu-header-text--secondary"] }, secondaryText)
    ),
    import_react51.default.createElement(
      internal_default2,
      {
        // eslint-disable-next-line react/forbid-component-props
        className: styles_css_default["overflow-menu-dismiss-button"],
        ariaLabel: dismissIconAriaLabel,
        iconName: "close",
        variant: "icon",
        onClick: () => onClose && onClose()
      }
    )
  );
};
var header_default = Header;

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/menu-item.js
init_tslib_es6();
var import_react52 = __toESM(require_react());
var ListItem = ({ children: children2, startIcon, endIcon }) => {
  return import_react52.default.createElement(
    import_react52.default.Fragment,
    null,
    startIcon && import_react52.default.createElement("span", { className: styles_css_default["overflow-menu-list-item-icon"] }, startIcon),
    import_react52.default.createElement("span", { className: styles_css_default["overflow-menu-list-item-text"] }, children2),
    endIcon && endIcon
  );
};
var LinkItem = (0, import_react52.forwardRef)(({ children: children2, external, href, target, rel, startIcon, endIcon, onClick, context, testId }, ref) => {
  const anchorTarget = target !== null && target !== void 0 ? target : external ? "_blank" : void 0;
  const anchorRel = rel !== null && rel !== void 0 ? rel : anchorTarget === "_blank" ? "noopener noreferrer" : void 0;
  return import_react52.default.createElement(
    "a",
    Object.assign({ ref, onClick, className: clsx_m_default(styles_css_default["overflow-menu-control"], styles_css_default["overflow-menu-control-link"], context && styles_css_default[`overflow-menu-control-${context}`]), href, target: anchorTarget, rel: anchorRel }, testId ? { "data-testid": testId } : {}),
    import_react52.default.createElement(ListItem, { startIcon, endIcon }, children2)
  );
});
var ButtonItem = (0, import_react52.forwardRef)(({ children: children2, startIcon, endIcon, onClick, testId }, ref) => {
  return import_react52.default.createElement(
    "button",
    Object.assign({ ref, className: styles_css_default["overflow-menu-control"], onClick }, typeof testId === "string" ? { "data-testid": testId } : {}),
    import_react52.default.createElement(ListItem, { startIcon, endIcon }, children2)
  );
});
var NavigationItem = (0, import_react52.forwardRef)((_a, ref) => {
  var { startIcon, children: children2, index, testId } = _a, definition = __rest(_a, ["startIcon", "children", "index", "testId"]);
  const navigate = useNavigate();
  return import_react52.default.createElement(ButtonItem, { ref, startIcon, endIcon: import_react52.default.createElement(internal_default, { name: "angle-right" }), testId, onClick: () => navigate("dropdown-menu", {
    definition,
    headerText: definition.text || definition.title,
    headerSecondaryText: definition.description,
    utilityIndex: index
  }) }, children2);
});
var ExpandableItem = (_a) => {
  var { children: children2, onItemClick } = _a, definition = __rest(_a, ["children", "onItemClick"]);
  const [expanded, setExpanded] = (0, import_react52.useState)(false);
  const headerId = useUniqueId("overflow-menu-item");
  return import_react52.default.createElement(
    import_react52.default.Fragment,
    null,
    import_react52.default.createElement(
      "button",
      { className: clsx_m_default(styles_css_default["overflow-menu-control"], styles_css_default["overflow-menu-control-expandable-menu-trigger"]), onClick: () => setExpanded((value) => !value), "aria-expanded": expanded },
      import_react52.default.createElement(
        ListItem,
        { endIcon: import_react52.default.createElement(
          "span",
          { className: clsx_m_default(styles_css_default.icon, expanded && styles_css_default.expanded) },
          import_react52.default.createElement(internal_default, { name: "caret-up-filled" })
        ) },
        import_react52.default.createElement("span", { id: headerId }, children2)
      )
    ),
    expanded && import_react52.default.createElement("ul", { className: clsx_m_default(styles_css_default["overflow-menu-list"], styles_css_default["overflow-menu-list-submenu"]), "aria-labelledby": headerId }, definition.items.map((item, index) => {
      const isGroup = typeof item.items !== "undefined";
      return import_react52.default.createElement("li", { key: index, className: clsx_m_default(styles_css_default[`overflow-menu-list-item`], styles_css_default[`overflow-menu-list-item-dropdown-menu`]) }, dropdownComponentFactory(item, isGroup, onItemClick));
    }))
  );
};
function utilityComponentFactory(utility, index, ref) {
  const label = utility.text || utility.title;
  const hasIcon = !!utility.iconName || !!utility.iconUrl || !!utility.iconAlt || !!utility.iconSvg;
  const startIcon = hasIcon && import_react52.default.createElement(internal_default, { name: utility.iconName, url: utility.iconUrl, alt: utility.iconAlt, svg: utility.iconSvg });
  switch (utility.type) {
    case "button": {
      const handleClick = (event) => {
        var _a;
        if (Boolean(utility.href) && isPlainLeftClick(event)) {
          fireCancelableEvent(utility.onFollow, { href: utility.href, target: utility.target }, event);
        }
        fireCancelableEvent(utility.onClick, {}, event);
        (_a = utility.onClose) === null || _a === void 0 ? void 0 : _a.call(utility);
      };
      const content = import_react52.default.createElement(
        import_react52.default.Fragment,
        null,
        label,
        utility.external && import_react52.default.createElement(
          import_react52.default.Fragment,
          null,
          " ",
          import_react52.default.createElement(
            "span",
            { "aria-label": utility.externalIconAriaLabel, role: utility.externalIconAriaLabel ? "img" : void 0 },
            import_react52.default.createElement(internal_default, { name: "external", size: "normal" })
          )
        )
      );
      if (!utility.href) {
        return import_react52.default.createElement(ButtonItem, { ref, startIcon, onClick: handleClick, testId: `__${index}` }, content);
      }
      return import_react52.default.createElement(LinkItem, { ref, startIcon, href: utility.href, external: utility.external, target: utility.target, rel: utility.rel, testId: `__${index}`, onClick: handleClick }, content);
    }
    case "menu-dropdown": {
      return import_react52.default.createElement(NavigationItem, Object.assign({ ref, startIcon, index }, utility, { testId: `__${index}` }), label);
    }
  }
}
function dropdownComponentFactory(item, expandable, onItemClick) {
  const label = item.text;
  const hasIcon = !!item.iconName || !!item.iconUrl || !!item.iconAlt || !!item.iconSvg;
  const startIcon = hasIcon && import_react52.default.createElement(internal_default, { name: item.iconName, url: item.iconUrl, alt: item.iconAlt, svg: item.iconSvg });
  if (expandable) {
    return import_react52.default.createElement(ExpandableItem, Object.assign({}, item, { onItemClick }), label);
  }
  return import_react52.default.createElement(
    LinkItem,
    { startIcon, href: item.href, external: item.external, context: "dropdown-menu", testId: item.id, onClick: (event) => onItemClick(event, item) },
    label,
    item.external && import_react52.default.createElement(
      import_react52.default.Fragment,
      null,
      " ",
      import_react52.default.createElement(
        "span",
        { "aria-label": item.externalIconAriaLabel, role: item.externalIconAriaLabel ? "img" : void 0 },
        import_react52.default.createElement(internal_default, { name: "external", size: "normal" })
      )
    )
  );
}
var UtilityMenuItem = (0, import_react52.forwardRef)((_a, ref) => {
  var { index } = _a, props = __rest(_a, ["index"]);
  return import_react52.default.createElement("li", { className: clsx_m_default(styles_css_default[`overflow-menu-list-item`], styles_css_default[`overflow-menu-list-item-utility`]) }, utilityComponentFactory(props, index, ref));
});
var SubmenuItem = (props) => {
  const expandable = typeof props.items !== "undefined";
  return import_react52.default.createElement("li", { className: clsx_m_default(styles_css_default[`overflow-menu-list-item`], styles_css_default[`overflow-menu-list-item-submenu`], expandable && styles_css_default[`overflow-menu-list-item-expandable`]) }, dropdownComponentFactory(props, expandable, props.onClick));
};

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/views/utilities.js
var UtilitiesView = ({ headerText, dismissIconAriaLabel, onClose, items = [], focusIndex }) => {
  const headerId = useUniqueId("overflow-menu-header");
  const ref = (0, import_react53.useRef)(null);
  (0, import_react53.useEffect)(() => {
    var _a;
    if (typeof focusIndex === "number") {
      (_a = ref.current) === null || _a === void 0 ? void 0 : _a.focus();
    }
  }, [focusIndex]);
  return import_react53.default.createElement(
    focus_lock_default,
    { autoFocus: true },
    import_react53.default.createElement(
      header_default,
      { dismissIconAriaLabel, onClose },
      import_react53.default.createElement("span", { id: headerId }, headerText)
    ),
    import_react53.default.createElement("ul", { className: styles_css_default["overflow-menu-list"], "aria-labelledby": headerId }, items.map((utility, index) => import_react53.default.createElement(UtilityMenuItem, Object.assign({ key: index, index, ref: index === focusIndex ? ref : void 0, onClose }, utility))))
  );
};
var utilities_default = UtilitiesView;

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/views/submenu.js
var import_react54 = __toESM(require_react());
var SubmenuView = ({ onClose, utilityIndex, headerText, headerSecondaryText, dismissIconAriaLabel, backIconAriaLabel, definition }) => {
  const navigate = useNavigate();
  const headerId = useUniqueId("overflow-menu-header");
  return import_react54.default.createElement(
    focus_lock_default,
    { autoFocus: true },
    import_react54.default.createElement(
      header_default,
      { secondaryText: headerSecondaryText, dismissIconAriaLabel, backIconAriaLabel, onClose, onBack: () => navigate("utilities", { utilityIndex }) },
      import_react54.default.createElement("span", { id: headerId }, headerText)
    ),
    import_react54.default.createElement("ul", { className: clsx_m_default(styles_css_default["overflow-menu-list"], styles_css_default["overflow-menu-list-submenu"]), "aria-labelledby": headerId }, definition.items.map((item, index) => import_react54.default.createElement(SubmenuItem, Object.assign({ key: index }, item, { onClick: (event, item2) => {
      if (item2.href && isPlainLeftClick(event)) {
        fireCancelableEvent(definition.onItemFollow, { id: item2.id, href: item2.href, external: item2.external }, event);
      }
      fireCancelableEvent(definition.onItemClick, { id: item2.id, href: item2.href, external: item2.external }, event);
      onClose === null || onClose === void 0 ? void 0 : onClose();
    } }))))
  );
};
var submenu_default = SubmenuView;

// node_modules/@cloudscape-design/components/top-navigation/parts/overflow-menu/index.js
var OverflowMenu = ({ headerText, dismissIconAriaLabel, backIconAriaLabel, items = [], onClose }) => {
  const i18n = useInternalI18n("top-navigation");
  const renderedDismissIconAriaLabel = i18n("i18nStrings.overflowMenuDismissIconAriaLabel", dismissIconAriaLabel);
  const renderedBackIconAriaLabel = i18n("i18nStrings.overflowMenuBackIconAriaLabel", backIconAriaLabel);
  return import_react55.default.createElement(
    "div",
    { className: styles_css_default["overflow-menu"], onKeyUp: (event) => {
      if (event.key === "Escape") {
        onClose === null || onClose === void 0 ? void 0 : onClose();
      }
    } },
    import_react55.default.createElement(
      router_default,
      null,
      import_react55.default.createElement(Route, { view: "utilities", element: (data) => import_react55.default.createElement(utilities_default, { headerText: i18n("i18nStrings.overflowMenuTitleText", headerText), items, focusIndex: data === null || data === void 0 ? void 0 : data.utilityIndex, dismissIconAriaLabel: renderedDismissIconAriaLabel, backIconAriaLabel: renderedBackIconAriaLabel, onClose }) }),
      import_react55.default.createElement(Route, { view: "dropdown-menu", element: (data) => import_react55.default.createElement(submenu_default, { headerText: data === null || data === void 0 ? void 0 : data.headerText, headerSecondaryText: data === null || data === void 0 ? void 0 : data.headerSecondaryText, dismissIconAriaLabel: renderedDismissIconAriaLabel, backIconAriaLabel: renderedBackIconAriaLabel, definition: data === null || data === void 0 ? void 0 : data.definition, utilityIndex: data === null || data === void 0 ? void 0 : data.utilityIndex, onClose }) })
    )
  );
};
var overflow_menu_default = OverflowMenu;

// node_modules/@cloudscape-design/components/top-navigation/internal.js
function InternalTopNavigation(_a) {
  var { __internalRootRef, identity, i18nStrings, utilities, search } = _a, restProps = __rest(_a, ["__internalRootRef", "identity", "i18nStrings", "utilities", "search"]);
  checkSafeUrl("TopNavigation", identity.href);
  const baseProps = getBaseProps(restProps);
  const { mainRef, virtualRef, breakpoint, responsiveState, isSearchExpanded, onSearchUtilityClick } = useTopNavigation({ identity, search, utilities });
  const [overflowMenuOpen, setOverflowMenuOpen] = (0, import_react56.useState)(false);
  const overflowMenuTriggerRef = (0, import_react56.useRef)(null);
  const isNarrowViewport = breakpoint === "default";
  const isMediumViewport = breakpoint === "xxs";
  const isLargeViewport = breakpoint === "s";
  const i18n = useInternalI18n("top-navigation");
  const onIdentityClick = (event) => {
    if (isPlainLeftClick(event)) {
      fireCancelableEvent(identity.onFollow, {}, event);
    }
  };
  const toggleOverflowMenu = () => {
    setOverflowMenuOpen((overflowMenuOpen2) => !overflowMenuOpen2);
  };
  const menuTriggerVisible = !isSearchExpanded && responsiveState.hideUtilities;
  (0, import_react56.useEffect)(() => {
    setOverflowMenuOpen(false);
  }, [menuTriggerVisible]);
  useEffectOnUpdate(() => {
    var _a2;
    if (!overflowMenuOpen) {
      (_a2 = overflowMenuTriggerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  }, [overflowMenuOpen]);
  const content = (isVirtual) => {
    var _a2, _b;
    const Wrapper = isVirtual ? "div" : "header";
    const showIdentity = isVirtual || !isSearchExpanded;
    const showTitle = isVirtual || !responsiveState.hideTitle;
    const showSearchSlot = search && (isVirtual || !responsiveState.hideSearch || isSearchExpanded);
    const showSearchUtility = isVirtual || search && responsiveState.hideSearch;
    const showUtilities = isVirtual || !isSearchExpanded;
    const showMenuTrigger = isVirtual || menuTriggerVisible;
    return import_react56.default.createElement(
      Wrapper,
      {
        ref: isVirtual ? virtualRef : mainRef,
        "aria-hidden": isVirtual ? true : void 0,
        // Wrapper is an alias for "div" or "header".
        // eslint-disable-next-line react/forbid-component-props
        className: clsx_m_default(styles_css_default["top-navigation"], {
          [styles_css_default.virtual]: isVirtual,
          [styles_css_default.hidden]: isVirtual,
          [styles_css_default.narrow]: isNarrowViewport,
          [styles_css_default.medium]: isMediumViewport
        })
      },
      import_react56.default.createElement(
        "div",
        { className: styles_css_default["padding-box"] },
        showIdentity && import_react56.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default.identity, !identity.logo && styles_css_default["no-logo"]) },
          import_react56.default.createElement(
            "a",
            { className: styles_css_default["identity-link"], href: identity.href, onClick: onIdentityClick },
            identity.logo && import_react56.default.createElement("img", { role: "img", src: (_a2 = identity.logo) === null || _a2 === void 0 ? void 0 : _a2.src, alt: (_b = identity.logo) === null || _b === void 0 ? void 0 : _b.alt, className: clsx_m_default(styles_css_default.logo, {
              [styles_css_default.narrow]: isNarrowViewport
            }) }),
            showTitle && import_react56.default.createElement("span", { className: styles_css_default.title }, identity.title)
          )
        ),
        showSearchSlot && import_react56.default.createElement(
          "div",
          { className: styles_css_default.inputs },
          import_react56.default.createElement("div", { className: clsx_m_default(styles_css_default.search, !isVirtual && isSearchExpanded && styles_css_default["search-expanded"]) }, search)
        ),
        import_react56.default.createElement(
          "div",
          { className: styles_css_default.utilities },
          showSearchUtility && import_react56.default.createElement(
            "div",
            { className: clsx_m_default(styles_css_default["utility-wrapper"], styles_css_default["utility-type-button"], styles_css_default["utility-type-button-link"], {
              [styles_css_default.narrow]: isNarrowViewport,
              [styles_css_default.medium]: isMediumViewport
            }), "data-utility-special": "search" },
            import_react56.default.createElement(Utility, { hideText: true, definition: {
              type: "button",
              iconName: isSearchExpanded ? "close" : "search",
              ariaLabel: isSearchExpanded ? i18n("i18nStrings.searchDismissIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.searchDismissIconAriaLabel) : i18n("i18nStrings.searchIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.searchIconAriaLabel),
              onClick: onSearchUtilityClick
            } })
          ),
          showUtilities && utilities.filter((_utility, i) => isVirtual || !responsiveState.hideUtilities || responsiveState.hideUtilities.indexOf(i) === -1).map((utility, i) => {
            var _a3;
            const hideText = !!responsiveState.hideUtilityText;
            const isLast = (isVirtual || !showMenuTrigger) && i === utilities.length - 1;
            const offsetRight = isLast && isLargeViewport ? "xxl" : isLast ? "l" : void 0;
            return import_react56.default.createElement(
              "div",
              { key: i, className: clsx_m_default(styles_css_default["utility-wrapper"], styles_css_default[`utility-type-${utility.type}`], utility.type === "button" && styles_css_default[`utility-type-button-${(_a3 = utility.variant) !== null && _a3 !== void 0 ? _a3 : "link"}`], {
                [styles_css_default.narrow]: isNarrowViewport,
                [styles_css_default.medium]: isMediumViewport
              }), "data-utility-index": i, "data-utility-hide": `${hideText}` },
              import_react56.default.createElement(Utility, { hideText, definition: utility, offsetRight })
            );
          }),
          isVirtual && utilities.map((utility, i) => {
            var _a3;
            const hideText = !responsiveState.hideUtilityText;
            const isLast = !showMenuTrigger && i === utilities.length - 1;
            const offsetRight = isLast && isLargeViewport ? "xxl" : isLast ? "l" : void 0;
            return import_react56.default.createElement(
              "div",
              { key: i, className: clsx_m_default(styles_css_default["utility-wrapper"], styles_css_default[`utility-type-${utility.type}`], utility.type === "button" && styles_css_default[`utility-type-button-${(_a3 = utility.variant) !== null && _a3 !== void 0 ? _a3 : "link"}`], {
                [styles_css_default.narrow]: isNarrowViewport,
                [styles_css_default.medium]: isMediumViewport
              }), "data-utility-index": i, "data-utility-hide": `${hideText}` },
              import_react56.default.createElement(Utility, { hideText, definition: utility, offsetRight })
            );
          }),
          showMenuTrigger && import_react56.default.createElement(
            "div",
            { className: clsx_m_default(styles_css_default["utility-wrapper"], styles_css_default["utility-type-menu-dropdown"], {
              [styles_css_default.narrow]: isNarrowViewport,
              [styles_css_default.medium]: isMediumViewport
            }), "data-utility-special": "menu-trigger" },
            import_react56.default.createElement(ButtonTrigger, { expanded: overflowMenuOpen, onClick: toggleOverflowMenu, offsetRight: "l", ref: !isVirtual ? overflowMenuTriggerRef : void 0 }, i18n("i18nStrings.overflowMenuTriggerText", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.overflowMenuTriggerText))
          )
        )
      )
    );
  };
  return import_react56.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: __internalRootRef }),
    import_react56.default.createElement(
      VisualContext,
      { contextName: "top-navigation" },
      content(false),
      import_react56.default.createElement(Portal, null, content(true)),
      menuTriggerVisible && overflowMenuOpen && import_react56.default.createElement(
        "div",
        { className: styles_css_default["overflow-menu-drawer"] },
        import_react56.default.createElement(overflow_menu_default, { headerText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.overflowMenuTitleText, dismissIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.overflowMenuDismissIconAriaLabel, backIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.overflowMenuBackIconAriaLabel, items: utilities.filter((utility, i) => (!responsiveState.hideUtilities || responsiveState.hideUtilities.indexOf(i) !== -1) && !utility.disableUtilityCollapse), onClose: toggleOverflowMenu })
      )
    )
  );
}

// node_modules/@cloudscape-design/components/top-navigation/index.js
function TopNavigation(_a) {
  var { utilities = [] } = _a, restProps = __rest(_a, ["utilities"]);
  const baseComponentProps = useBaseComponent("TopNavigation");
  return import_react57.default.createElement(InternalTopNavigation, Object.assign({}, baseComponentProps, { utilities }, restProps));
}
applyDisplayName(TopNavigation, "TopNavigation");

export {
  fireNonCancelableEvent,
  fireCancelableEvent,
  fireKeyboardEvent,
  hasModifierKeys,
  isPlainLeftClick,
  useForwardFocus,
  internal_default,
  InternalSpinner,
  checkSafeUrl,
  ScreenreaderOnly,
  live_region_default,
  ButtonContext,
  useEffectOnUpdate,
  usePerformanceMarks,
  useSingleTabStopNavigation,
  InternalButton,
  internal_default2,
  getVisualContextClassname,
  VisualContext,
  useLocale,
  useInternalI18n,
  LinkDefaultVariantContext,
  InternalBox,
  styles_css_default11 as styles_css_default,
  PopoverContainer,
  getFirstFocusable,
  focus_lock_default,
  PopoverBody,
  joinStrings,
  _setPrototypeOf,
  CSSTransition_default,
  _assertThisInitialized,
  TransitionGroup_default,
  Transition2 as Transition,
  usePortalModeClasses,
  dropdown_default,
  arrow_default,
  Portal,
  useHiddenDescription,
  useOpenState,
  options_list_default,
  internal_default4 as internal_default3,
  InfoLinkLabelContext,
  internal_default3 as internal_default4,
  padLeftZeros,
  TopNavigation
};
/*! Bundled license information:

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=chunk-AOOYOSU7.js.map
