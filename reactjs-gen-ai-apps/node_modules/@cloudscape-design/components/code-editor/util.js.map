{"version":3,"file":"util.js","sourceRoot":"lib/default/","sources":["code-editor/util.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAGvC,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAIpD,MAAM,CAAC,MAAM,mBAAmB,GAAwC,MAAM,CAAC;AAC/E,MAAM,CAAC,MAAM,kBAAkB,GAAuC,uBAAuB,CAAC;AAE9F,MAAM,sCAAsC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAEvD,MAAM,UAAU,6BAA6B,CAAC,GAAQ;;IACpD,+EAA+E;IAC/E,MAAM,eAAe,GAAG,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,0CAAE,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAY,EAAE,EAAE;QACpE,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,OAAO,CACL,CAAC,CAAC,eAAe;QACjB,OAAO,eAAe,CAAC,CAAC,CAAC,KAAK,QAAQ;QACtC,eAAe,CAAC,CAAC,CAAC,IAAI,sCAAsC,CAAC,CAAC,CAAC;QAC/D,OAAO,eAAe,CAAC,CAAC,CAAC,KAAK,QAAQ;QACtC,eAAe,CAAC,CAAC,CAAC,IAAI,sCAAsC,CAAC,CAAC,CAAC,CAChE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,GAAQ;IACvC,uBACE,iBAAiB,EAAE,IAAI,IACpB,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,2BAA2B,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EACpF;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,OAAoB;IAClD,MAAM,UAAU,GAAG,CAAC,CAAC,WAAW,CAC9B,OAAO,EACP,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,yBAAyB,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CACzG,CAAC;IACF,OAAO,UAAU,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,mBAAmB,CAAC;AAC/D,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,KAA4B;IACtD,OAAO,aAAa,KAAK,EAAE,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,QAAkC;;IACjE,OAAO,CAAA,MAAA,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,0CAAE,KAAK,KAAI,QAAQ,CAAC;AACrG,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Ace } from 'ace-builds';\n\nimport { AceModes } from './ace-modes';\nimport { LightThemes, DarkThemes } from './ace-themes';\nimport { CodeEditorProps } from './interfaces';\nimport { findUpUntil } from '../internal/utils/dom';\n\nexport type PaneStatus = 'error' | 'warning' | 'hidden';\n\nexport const DEFAULT_LIGHT_THEME: typeof LightThemes[number]['value'] = 'dawn';\nexport const DEFAULT_DARK_THEME: typeof DarkThemes[number]['value'] = 'tomorrow_night_bright';\n\nconst KEYBOARD_ACCESSIBILITY_MIN_ACE_VERSION = [1, 23];\n\nexport function supportsKeyboardAccessibility(ace: any): boolean {\n  // Split semantic version numbers. We don't need a full semver parser for this.\n  const semanticVersion = ace?.version?.split('.').map((part: string) => {\n    const parsed = parseInt(part);\n    return Number.isNaN(parsed) ? part : parsed;\n  });\n\n  return (\n    !!semanticVersion &&\n    typeof semanticVersion[0] === 'number' &&\n    semanticVersion[0] >= KEYBOARD_ACCESSIBILITY_MIN_ACE_VERSION[0] &&\n    typeof semanticVersion[1] === 'number' &&\n    semanticVersion[1] >= KEYBOARD_ACCESSIBILITY_MIN_ACE_VERSION[1]\n  );\n}\n\nexport function getDefaultConfig(ace: any): Partial<Ace.EditorOptions> {\n  return {\n    behavioursEnabled: true,\n    ...(supportsKeyboardAccessibility(ace) ? { enableKeyboardAccessibility: true } : {}),\n  };\n}\n\nexport function getDefaultTheme(element: HTMLElement): CodeEditorProps.Theme {\n  const isDarkMode = !!findUpUntil(\n    element,\n    node => node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode')\n  );\n  return isDarkMode ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;\n}\n\nexport function getAceTheme(theme: CodeEditorProps.Theme) {\n  return `ace/theme/${theme}`;\n}\n\nexport function getLanguageLabel(language: CodeEditorProps.Language): string {\n  return AceModes.filter((mode: { value: string }) => mode.value === language)[0]?.label || language;\n}\n"]}