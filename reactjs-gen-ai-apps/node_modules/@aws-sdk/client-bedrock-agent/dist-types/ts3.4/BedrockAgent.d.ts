import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import { BedrockAgentClient } from "./BedrockAgentClient";
import {
  AssociateAgentKnowledgeBaseCommandInput,
  AssociateAgentKnowledgeBaseCommandOutput,
} from "./commands/AssociateAgentKnowledgeBaseCommand";
import {
  CreateAgentActionGroupCommandInput,
  CreateAgentActionGroupCommandOutput,
} from "./commands/CreateAgentActionGroupCommand";
import {
  CreateAgentAliasCommandInput,
  CreateAgentAliasCommandOutput,
} from "./commands/CreateAgentAliasCommand";
import {
  CreateAgentCommandInput,
  CreateAgentCommandOutput,
} from "./commands/CreateAgentCommand";
import {
  CreateDataSourceCommandInput,
  CreateDataSourceCommandOutput,
} from "./commands/CreateDataSourceCommand";
import {
  CreateKnowledgeBaseCommandInput,
  CreateKnowledgeBaseCommandOutput,
} from "./commands/CreateKnowledgeBaseCommand";
import {
  DeleteAgentActionGroupCommandInput,
  DeleteAgentActionGroupCommandOutput,
} from "./commands/DeleteAgentActionGroupCommand";
import {
  DeleteAgentAliasCommandInput,
  DeleteAgentAliasCommandOutput,
} from "./commands/DeleteAgentAliasCommand";
import {
  DeleteAgentCommandInput,
  DeleteAgentCommandOutput,
} from "./commands/DeleteAgentCommand";
import {
  DeleteAgentVersionCommandInput,
  DeleteAgentVersionCommandOutput,
} from "./commands/DeleteAgentVersionCommand";
import {
  DeleteDataSourceCommandInput,
  DeleteDataSourceCommandOutput,
} from "./commands/DeleteDataSourceCommand";
import {
  DeleteKnowledgeBaseCommandInput,
  DeleteKnowledgeBaseCommandOutput,
} from "./commands/DeleteKnowledgeBaseCommand";
import {
  DisassociateAgentKnowledgeBaseCommandInput,
  DisassociateAgentKnowledgeBaseCommandOutput,
} from "./commands/DisassociateAgentKnowledgeBaseCommand";
import {
  GetAgentActionGroupCommandInput,
  GetAgentActionGroupCommandOutput,
} from "./commands/GetAgentActionGroupCommand";
import {
  GetAgentAliasCommandInput,
  GetAgentAliasCommandOutput,
} from "./commands/GetAgentAliasCommand";
import {
  GetAgentCommandInput,
  GetAgentCommandOutput,
} from "./commands/GetAgentCommand";
import {
  GetAgentKnowledgeBaseCommandInput,
  GetAgentKnowledgeBaseCommandOutput,
} from "./commands/GetAgentKnowledgeBaseCommand";
import {
  GetAgentVersionCommandInput,
  GetAgentVersionCommandOutput,
} from "./commands/GetAgentVersionCommand";
import {
  GetDataSourceCommandInput,
  GetDataSourceCommandOutput,
} from "./commands/GetDataSourceCommand";
import {
  GetIngestionJobCommandInput,
  GetIngestionJobCommandOutput,
} from "./commands/GetIngestionJobCommand";
import {
  GetKnowledgeBaseCommandInput,
  GetKnowledgeBaseCommandOutput,
} from "./commands/GetKnowledgeBaseCommand";
import {
  ListAgentActionGroupsCommandInput,
  ListAgentActionGroupsCommandOutput,
} from "./commands/ListAgentActionGroupsCommand";
import {
  ListAgentAliasesCommandInput,
  ListAgentAliasesCommandOutput,
} from "./commands/ListAgentAliasesCommand";
import {
  ListAgentKnowledgeBasesCommandInput,
  ListAgentKnowledgeBasesCommandOutput,
} from "./commands/ListAgentKnowledgeBasesCommand";
import {
  ListAgentsCommandInput,
  ListAgentsCommandOutput,
} from "./commands/ListAgentsCommand";
import {
  ListAgentVersionsCommandInput,
  ListAgentVersionsCommandOutput,
} from "./commands/ListAgentVersionsCommand";
import {
  ListDataSourcesCommandInput,
  ListDataSourcesCommandOutput,
} from "./commands/ListDataSourcesCommand";
import {
  ListIngestionJobsCommandInput,
  ListIngestionJobsCommandOutput,
} from "./commands/ListIngestionJobsCommand";
import {
  ListKnowledgeBasesCommandInput,
  ListKnowledgeBasesCommandOutput,
} from "./commands/ListKnowledgeBasesCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  PrepareAgentCommandInput,
  PrepareAgentCommandOutput,
} from "./commands/PrepareAgentCommand";
import {
  StartIngestionJobCommandInput,
  StartIngestionJobCommandOutput,
} from "./commands/StartIngestionJobCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateAgentActionGroupCommandInput,
  UpdateAgentActionGroupCommandOutput,
} from "./commands/UpdateAgentActionGroupCommand";
import {
  UpdateAgentAliasCommandInput,
  UpdateAgentAliasCommandOutput,
} from "./commands/UpdateAgentAliasCommand";
import {
  UpdateAgentCommandInput,
  UpdateAgentCommandOutput,
} from "./commands/UpdateAgentCommand";
import {
  UpdateAgentKnowledgeBaseCommandInput,
  UpdateAgentKnowledgeBaseCommandOutput,
} from "./commands/UpdateAgentKnowledgeBaseCommand";
import {
  UpdateDataSourceCommandInput,
  UpdateDataSourceCommandOutput,
} from "./commands/UpdateDataSourceCommand";
import {
  UpdateKnowledgeBaseCommandInput,
  UpdateKnowledgeBaseCommandOutput,
} from "./commands/UpdateKnowledgeBaseCommand";
export interface BedrockAgent {
  associateAgentKnowledgeBase(
    args: AssociateAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateAgentKnowledgeBaseCommandOutput>;
  associateAgentKnowledgeBase(
    args: AssociateAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: AssociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  associateAgentKnowledgeBase(
    args: AssociateAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  createAgent(
    args: CreateAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAgentCommandOutput>;
  createAgent(
    args: CreateAgentCommandInput,
    cb: (err: any, data?: CreateAgentCommandOutput) => void
  ): void;
  createAgent(
    args: CreateAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAgentCommandOutput) => void
  ): void;
  createAgentActionGroup(
    args: CreateAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAgentActionGroupCommandOutput>;
  createAgentActionGroup(
    args: CreateAgentActionGroupCommandInput,
    cb: (err: any, data?: CreateAgentActionGroupCommandOutput) => void
  ): void;
  createAgentActionGroup(
    args: CreateAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAgentActionGroupCommandOutput) => void
  ): void;
  createAgentAlias(
    args: CreateAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateAgentAliasCommandOutput>;
  createAgentAlias(
    args: CreateAgentAliasCommandInput,
    cb: (err: any, data?: CreateAgentAliasCommandOutput) => void
  ): void;
  createAgentAlias(
    args: CreateAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateAgentAliasCommandOutput) => void
  ): void;
  createDataSource(
    args: CreateDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDataSourceCommandOutput>;
  createDataSource(
    args: CreateDataSourceCommandInput,
    cb: (err: any, data?: CreateDataSourceCommandOutput) => void
  ): void;
  createDataSource(
    args: CreateDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDataSourceCommandOutput) => void
  ): void;
  createKnowledgeBase(
    args: CreateKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKnowledgeBaseCommandOutput>;
  createKnowledgeBase(
    args: CreateKnowledgeBaseCommandInput,
    cb: (err: any, data?: CreateKnowledgeBaseCommandOutput) => void
  ): void;
  createKnowledgeBase(
    args: CreateKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKnowledgeBaseCommandOutput) => void
  ): void;
  deleteAgent(
    args: DeleteAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentCommandOutput>;
  deleteAgent(
    args: DeleteAgentCommandInput,
    cb: (err: any, data?: DeleteAgentCommandOutput) => void
  ): void;
  deleteAgent(
    args: DeleteAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentCommandOutput) => void
  ): void;
  deleteAgentActionGroup(
    args: DeleteAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentActionGroupCommandOutput>;
  deleteAgentActionGroup(
    args: DeleteAgentActionGroupCommandInput,
    cb: (err: any, data?: DeleteAgentActionGroupCommandOutput) => void
  ): void;
  deleteAgentActionGroup(
    args: DeleteAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentActionGroupCommandOutput) => void
  ): void;
  deleteAgentAlias(
    args: DeleteAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentAliasCommandOutput>;
  deleteAgentAlias(
    args: DeleteAgentAliasCommandInput,
    cb: (err: any, data?: DeleteAgentAliasCommandOutput) => void
  ): void;
  deleteAgentAlias(
    args: DeleteAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentAliasCommandOutput) => void
  ): void;
  deleteAgentVersion(
    args: DeleteAgentVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAgentVersionCommandOutput>;
  deleteAgentVersion(
    args: DeleteAgentVersionCommandInput,
    cb: (err: any, data?: DeleteAgentVersionCommandOutput) => void
  ): void;
  deleteAgentVersion(
    args: DeleteAgentVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAgentVersionCommandOutput) => void
  ): void;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDataSourceCommandOutput>;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    cb: (err: any, data?: DeleteDataSourceCommandOutput) => void
  ): void;
  deleteDataSource(
    args: DeleteDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDataSourceCommandOutput) => void
  ): void;
  deleteKnowledgeBase(
    args: DeleteKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKnowledgeBaseCommandOutput>;
  deleteKnowledgeBase(
    args: DeleteKnowledgeBaseCommandInput,
    cb: (err: any, data?: DeleteKnowledgeBaseCommandOutput) => void
  ): void;
  deleteKnowledgeBase(
    args: DeleteKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKnowledgeBaseCommandOutput) => void
  ): void;
  disassociateAgentKnowledgeBase(
    args: DisassociateAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateAgentKnowledgeBaseCommandOutput>;
  disassociateAgentKnowledgeBase(
    args: DisassociateAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: DisassociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  disassociateAgentKnowledgeBase(
    args: DisassociateAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisassociateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  getAgent(
    args: GetAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentCommandOutput>;
  getAgent(
    args: GetAgentCommandInput,
    cb: (err: any, data?: GetAgentCommandOutput) => void
  ): void;
  getAgent(
    args: GetAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentCommandOutput) => void
  ): void;
  getAgentActionGroup(
    args: GetAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentActionGroupCommandOutput>;
  getAgentActionGroup(
    args: GetAgentActionGroupCommandInput,
    cb: (err: any, data?: GetAgentActionGroupCommandOutput) => void
  ): void;
  getAgentActionGroup(
    args: GetAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentActionGroupCommandOutput) => void
  ): void;
  getAgentAlias(
    args: GetAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentAliasCommandOutput>;
  getAgentAlias(
    args: GetAgentAliasCommandInput,
    cb: (err: any, data?: GetAgentAliasCommandOutput) => void
  ): void;
  getAgentAlias(
    args: GetAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentAliasCommandOutput) => void
  ): void;
  getAgentKnowledgeBase(
    args: GetAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentKnowledgeBaseCommandOutput>;
  getAgentKnowledgeBase(
    args: GetAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: GetAgentKnowledgeBaseCommandOutput) => void
  ): void;
  getAgentKnowledgeBase(
    args: GetAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentKnowledgeBaseCommandOutput) => void
  ): void;
  getAgentVersion(
    args: GetAgentVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAgentVersionCommandOutput>;
  getAgentVersion(
    args: GetAgentVersionCommandInput,
    cb: (err: any, data?: GetAgentVersionCommandOutput) => void
  ): void;
  getAgentVersion(
    args: GetAgentVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAgentVersionCommandOutput) => void
  ): void;
  getDataSource(
    args: GetDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDataSourceCommandOutput>;
  getDataSource(
    args: GetDataSourceCommandInput,
    cb: (err: any, data?: GetDataSourceCommandOutput) => void
  ): void;
  getDataSource(
    args: GetDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDataSourceCommandOutput) => void
  ): void;
  getIngestionJob(
    args: GetIngestionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetIngestionJobCommandOutput>;
  getIngestionJob(
    args: GetIngestionJobCommandInput,
    cb: (err: any, data?: GetIngestionJobCommandOutput) => void
  ): void;
  getIngestionJob(
    args: GetIngestionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetIngestionJobCommandOutput) => void
  ): void;
  getKnowledgeBase(
    args: GetKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKnowledgeBaseCommandOutput>;
  getKnowledgeBase(
    args: GetKnowledgeBaseCommandInput,
    cb: (err: any, data?: GetKnowledgeBaseCommandOutput) => void
  ): void;
  getKnowledgeBase(
    args: GetKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKnowledgeBaseCommandOutput) => void
  ): void;
  listAgentActionGroups(
    args: ListAgentActionGroupsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentActionGroupsCommandOutput>;
  listAgentActionGroups(
    args: ListAgentActionGroupsCommandInput,
    cb: (err: any, data?: ListAgentActionGroupsCommandOutput) => void
  ): void;
  listAgentActionGroups(
    args: ListAgentActionGroupsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentActionGroupsCommandOutput) => void
  ): void;
  listAgentAliases(
    args: ListAgentAliasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentAliasesCommandOutput>;
  listAgentAliases(
    args: ListAgentAliasesCommandInput,
    cb: (err: any, data?: ListAgentAliasesCommandOutput) => void
  ): void;
  listAgentAliases(
    args: ListAgentAliasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentAliasesCommandOutput) => void
  ): void;
  listAgentKnowledgeBases(
    args: ListAgentKnowledgeBasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentKnowledgeBasesCommandOutput>;
  listAgentKnowledgeBases(
    args: ListAgentKnowledgeBasesCommandInput,
    cb: (err: any, data?: ListAgentKnowledgeBasesCommandOutput) => void
  ): void;
  listAgentKnowledgeBases(
    args: ListAgentKnowledgeBasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentKnowledgeBasesCommandOutput) => void
  ): void;
  listAgents(
    args: ListAgentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentsCommandOutput>;
  listAgents(
    args: ListAgentsCommandInput,
    cb: (err: any, data?: ListAgentsCommandOutput) => void
  ): void;
  listAgents(
    args: ListAgentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentsCommandOutput) => void
  ): void;
  listAgentVersions(
    args: ListAgentVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListAgentVersionsCommandOutput>;
  listAgentVersions(
    args: ListAgentVersionsCommandInput,
    cb: (err: any, data?: ListAgentVersionsCommandOutput) => void
  ): void;
  listAgentVersions(
    args: ListAgentVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListAgentVersionsCommandOutput) => void
  ): void;
  listDataSources(
    args: ListDataSourcesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDataSourcesCommandOutput>;
  listDataSources(
    args: ListDataSourcesCommandInput,
    cb: (err: any, data?: ListDataSourcesCommandOutput) => void
  ): void;
  listDataSources(
    args: ListDataSourcesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDataSourcesCommandOutput) => void
  ): void;
  listIngestionJobs(
    args: ListIngestionJobsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListIngestionJobsCommandOutput>;
  listIngestionJobs(
    args: ListIngestionJobsCommandInput,
    cb: (err: any, data?: ListIngestionJobsCommandOutput) => void
  ): void;
  listIngestionJobs(
    args: ListIngestionJobsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListIngestionJobsCommandOutput) => void
  ): void;
  listKnowledgeBases(
    args: ListKnowledgeBasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListKnowledgeBasesCommandOutput>;
  listKnowledgeBases(
    args: ListKnowledgeBasesCommandInput,
    cb: (err: any, data?: ListKnowledgeBasesCommandOutput) => void
  ): void;
  listKnowledgeBases(
    args: ListKnowledgeBasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListKnowledgeBasesCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  prepareAgent(
    args: PrepareAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PrepareAgentCommandOutput>;
  prepareAgent(
    args: PrepareAgentCommandInput,
    cb: (err: any, data?: PrepareAgentCommandOutput) => void
  ): void;
  prepareAgent(
    args: PrepareAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PrepareAgentCommandOutput) => void
  ): void;
  startIngestionJob(
    args: StartIngestionJobCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartIngestionJobCommandOutput>;
  startIngestionJob(
    args: StartIngestionJobCommandInput,
    cb: (err: any, data?: StartIngestionJobCommandOutput) => void
  ): void;
  startIngestionJob(
    args: StartIngestionJobCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartIngestionJobCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateAgent(
    args: UpdateAgentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentCommandOutput>;
  updateAgent(
    args: UpdateAgentCommandInput,
    cb: (err: any, data?: UpdateAgentCommandOutput) => void
  ): void;
  updateAgent(
    args: UpdateAgentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentCommandOutput) => void
  ): void;
  updateAgentActionGroup(
    args: UpdateAgentActionGroupCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentActionGroupCommandOutput>;
  updateAgentActionGroup(
    args: UpdateAgentActionGroupCommandInput,
    cb: (err: any, data?: UpdateAgentActionGroupCommandOutput) => void
  ): void;
  updateAgentActionGroup(
    args: UpdateAgentActionGroupCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentActionGroupCommandOutput) => void
  ): void;
  updateAgentAlias(
    args: UpdateAgentAliasCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentAliasCommandOutput>;
  updateAgentAlias(
    args: UpdateAgentAliasCommandInput,
    cb: (err: any, data?: UpdateAgentAliasCommandOutput) => void
  ): void;
  updateAgentAlias(
    args: UpdateAgentAliasCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentAliasCommandOutput) => void
  ): void;
  updateAgentKnowledgeBase(
    args: UpdateAgentKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateAgentKnowledgeBaseCommandOutput>;
  updateAgentKnowledgeBase(
    args: UpdateAgentKnowledgeBaseCommandInput,
    cb: (err: any, data?: UpdateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  updateAgentKnowledgeBase(
    args: UpdateAgentKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateAgentKnowledgeBaseCommandOutput) => void
  ): void;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDataSourceCommandOutput>;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    cb: (err: any, data?: UpdateDataSourceCommandOutput) => void
  ): void;
  updateDataSource(
    args: UpdateDataSourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDataSourceCommandOutput) => void
  ): void;
  updateKnowledgeBase(
    args: UpdateKnowledgeBaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateKnowledgeBaseCommandOutput>;
  updateKnowledgeBase(
    args: UpdateKnowledgeBaseCommandInput,
    cb: (err: any, data?: UpdateKnowledgeBaseCommandOutput) => void
  ): void;
  updateKnowledgeBase(
    args: UpdateKnowledgeBaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateKnowledgeBaseCommandOutput) => void
  ): void;
}
export declare class BedrockAgent
  extends BedrockAgentClient
  implements BedrockAgent {}
