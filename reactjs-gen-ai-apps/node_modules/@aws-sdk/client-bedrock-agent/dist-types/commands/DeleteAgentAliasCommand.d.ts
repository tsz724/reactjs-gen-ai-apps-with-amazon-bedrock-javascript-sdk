import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { BedrockAgentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../BedrockAgentClient";
import { DeleteAgentAliasRequest, DeleteAgentAliasResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link DeleteAgentAliasCommand}.
 */
export interface DeleteAgentAliasCommandInput extends DeleteAgentAliasRequest {
}
/**
 * @public
 *
 * The output of {@link DeleteAgentAliasCommand}.
 */
export interface DeleteAgentAliasCommandOutput extends DeleteAgentAliasResponse, __MetadataBearer {
}
declare const DeleteAgentAliasCommand_base: {
    new (input: DeleteAgentAliasCommandInput): import("@smithy/smithy-client").CommandImpl<DeleteAgentAliasCommandInput, DeleteAgentAliasCommandOutput, BedrockAgentClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * Deletes an Alias for a Amazon Bedrock Agent
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { BedrockAgentClient, DeleteAgentAliasCommand } from "@aws-sdk/client-bedrock-agent"; // ES Modules import
 * // const { BedrockAgentClient, DeleteAgentAliasCommand } = require("@aws-sdk/client-bedrock-agent"); // CommonJS import
 * const client = new BedrockAgentClient(config);
 * const input = { // DeleteAgentAliasRequest
 *   agentId: "STRING_VALUE", // required
 *   agentAliasId: "STRING_VALUE", // required
 * };
 * const command = new DeleteAgentAliasCommand(input);
 * const response = await client.send(command);
 * // { // DeleteAgentAliasResponse
 * //   agentId: "STRING_VALUE", // required
 * //   agentAliasId: "STRING_VALUE", // required
 * //   agentAliasStatus: "CREATING" || "PREPARED" || "FAILED" || "UPDATING" || "DELETING", // required
 * // };
 *
 * ```
 *
 * @param DeleteAgentAliasCommandInput - {@link DeleteAgentAliasCommandInput}
 * @returns {@link DeleteAgentAliasCommandOutput}
 * @see {@link DeleteAgentAliasCommandInput} for command's `input` shape.
 * @see {@link DeleteAgentAliasCommandOutput} for command's `response` shape.
 * @see {@link BedrockAgentClientResolvedConfig | config} for BedrockAgentClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  This exception is thrown when a request is denied per access permissions
 *
 * @throws {@link InternalServerException} (server fault)
 *  This exception is thrown if there was an unexpected error during processing of request
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  This exception is thrown when a resource referenced by the operation does not exist
 *
 * @throws {@link ThrottlingException} (client fault)
 *  This exception is thrown when the number of requests exceeds the limit
 *
 * @throws {@link ValidationException} (client fault)
 *  This exception is thrown when the request's input validation fails
 *
 * @throws {@link BedrockAgentServiceException}
 * <p>Base exception class for all service exceptions from BedrockAgent service.</p>
 *
 */
export declare class DeleteAgentAliasCommand extends DeleteAgentAliasCommand_base {
}
